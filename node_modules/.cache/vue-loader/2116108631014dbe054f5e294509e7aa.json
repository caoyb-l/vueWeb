{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/SkillsType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/SkillsType.vue","mtime":1584499888384},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable, Ellipsis } from '@/components'\nimport UpdateExcel from './modules/UpdateExcel'\nimport EditChat from './modules/EditChat'\nimport { queryData } from '@/api/common'\nexport default {\n  components: {\n    Ellipsis,\n    STable,\n    UpdateExcel,\n    EditChat\n  },\n  watch: {\n    'queryParam.skillsId'(values) {\n      this.$refs.table.refresh(true), console.log(values)\n    }\n  },\n  data() {\n    return {\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        skillsId: '',\n        keywords: ''\n      },\n      editData: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '关键词',\n          dataIndex: 'keywords',\n          scopedSlots: { customRender: 'keywords' }\n        },\n        {\n          title: '回答内容',\n          dataIndex: 'contents',\n          scopedSlots: { customRender: 'contents' }\n        },\n        {\n          title: '网页或图片',\n          dataIndex: 'url',\n          scopedSlots: { customRender: 'url' }\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return queryData(Object.assign(parameter, this.queryParam), '/skills/getSkillsList3').then(res => {\n          console.log(res)\n          this.skills = res.result.data\n          return res.result\n        })\n      },\n      roleNames: [],\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false,\n      treeData: [] //树结构\n    }\n  },\n  created() {\n    this.handleSkillsTypeList()\n  },\n  methods: {\n    // 获取单位下的单位\n    handleSkillsTypeList() {\n      const orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var _this = this\n      queryData({ orgId: orgId }, '/skillsType/getSkillsTypeList').then(res => {\n        console.log(res)\n        _this.treeData = res.data\n        if (!res.code === 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 处理新增\n    handleAddSubmit() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    // 显示状态修改\n    handleAddVisible() {\n      this.addVisible = true\n    },\n    //修改闲聊\n    handleEditVisible(record) {\n      this.$refs.EditChat.add(record)\n    },\n    //下拉框\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    deleteSkills(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.title} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { entityIds: [record.id] }\n            queryData(id, '/skills/delete').then(res => {\n              console.log('删除用户返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    deleteSkillsIds() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var entityIds = { entityIds: [_this.selectedRowKeys][0] }\n\n            queryData(entityIds, '/skillsOption/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    //清空动作集\n    delCmd(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: ` <${record.title}> 将不再使用 <${record.cmdName}> 动作集`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            queryData({ entityId: record.skillsOptionId }, '/skillsOption/deleteCmd').then(res => {\n              console.log('删除用户返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2',\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    deriveExcel() {\n      this.$message.success('别着急快好了😭')\n    }\n  }\n}\n",null]}