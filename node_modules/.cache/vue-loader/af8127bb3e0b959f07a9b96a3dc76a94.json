{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\role\\modules\\EditForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\role\\modules\\EditForm.vue","mtime":1563593953584},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getOrgList , getRoleList , editUser} from '@/api/manage';\r\n\r\nexport default {\r\n  props:{\r\n    editData:{\r\n      type:Object,\r\n      required:true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      \r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n\r\n      form: this.$form.createForm(this),\r\n      orgNames:[],\r\n      roleNames:[],\r\n    }\r\n  },\r\n  created(){\r\n    this.handleRoleList();\r\n    this.handleOrgList();\r\n  },\r\n  methods: {\r\n    // 获取角色\r\n    handleRoleList(){\r\n      var _this = this;\r\n      getRoleList().then(res => {\r\n        _this.roleNames = res;\r\n      });\r\n    },\r\n    // 获取单位下的单位\r\n    handleOrgList(){\r\n      var param = {org : 1};\r\n      var _this = this;\r\n      getOrgList(param).then(res => {\r\n        _this.orgNames = res;\r\n      });\r\n    },\r\n    add () {\r\n      this.visible = true\r\n    },\r\n    handleSubmit () {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n\r\n          var param = Object.assign(values,{id:this.editData.id} )\r\n          var _this = this;\r\n          setTimeout(() => {\r\n            editUser(param).then(res => {\r\n              \r\n              if(res.code == 0){\r\n                _this.$message.success('修改成功');\r\n                // 重置输入框内容\r\n                _this.form.resetFields();\r\n                \r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n            this.visible = false\r\n            \r\n            this.confirmLoading = false\r\n            this.$emit('ok', values)\r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.visible = false\r\n    },\r\n    handleChangeOption(value){\r\n      console.log( `select ${value}`)\r\n    },\r\n    handleBlur() {\r\n      console.log('blur');\r\n    },\r\n    handleFocus() {\r\n      console.log('focus');\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["EditForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditForm.vue","sourceRoot":"src/views/role/modules","sourcesContent":["<template>\r\n  <!-- 编辑弹框 -->\r\n      <a-modal\r\n      title=\"编辑\"\r\n      style=\"top: 20px;\"\r\n      :width=\"600\"\r\n      v-model=\"visible\"\r\n      @ok=\"handleSubmit\"\r\n    >\r\n    <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"登录名\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          placeholder=\"登录名\" \r\n          v-decorator=\"[\r\n            'loginName',\r\n            {\r\n              rules: [{ required: true, message: '请输入登录名' }],\r\n              initialValue: editData.loginName,\r\n            }]\"\r\n          />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"单位名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-select\r\n          showSearch\r\n          placeholder=\"选择所属单位\"\r\n          optionFilterProp=\"children\"\r\n          :filterOption=\"filterOption\"\r\n          v-decorator=\"[\r\n            'org',\r\n            {rules: [{ required: true, message: '请选择' }],\r\n            initialValue: editData.org}\r\n          ]\"\r\n        >\r\n\r\n          <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\r\n            {{item.name}}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"角色名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-select \r\n          showSearch\r\n          placeholder=\"选择角色名称\"\r\n          optionFilterProp=\"children\"\r\n          :filterOption=\"filterOption\"\r\n          v-decorator=\"[\r\n            'role',\r\n            {rules: [{ required: true, message: '请选择' }],\r\n            initialValue: editData.role}\r\n          ]\"\r\n        >\r\n          <a-select-option v-for=\"(item ,key) in roleNames\" :key=\"key\" :value=\"item.id\">\r\n            {{item.name}}\r\n          </a-select-option>\r\n         \r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"用户姓名\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'userName',\r\n            {rules: [{ required: true, message: '请输入用户名' }],\r\n            initialValue: editData.userName}\r\n          ]\"\r\n          placeholder=\"用户名\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"手机号\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'mobile',\r\n            {rules: [{ message: '请输入手机号' }],\r\n            initialValue: editData.mobile}\r\n          ]\"\r\n          placeholder=\"手机号\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"是否生效\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-select\r\n          v-decorator=\"[\r\n            'isDel',\r\n            {rules: [{ required: true, message: '请选择' }],\r\n            initialValue: editData.isDel}\r\n          ]\"\r\n        >\r\n          <a-select-option value=\"1\">生效</a-select-option>\r\n          <a-select-option value=\"0\">无效</a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n    </a-form>\r\n    </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { getOrgList , getRoleList , editUser} from '@/api/manage';\r\n\r\nexport default {\r\n  props:{\r\n    editData:{\r\n      type:Object,\r\n      required:true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      \r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n\r\n      form: this.$form.createForm(this),\r\n      orgNames:[],\r\n      roleNames:[],\r\n    }\r\n  },\r\n  created(){\r\n    this.handleRoleList();\r\n    this.handleOrgList();\r\n  },\r\n  methods: {\r\n    // 获取角色\r\n    handleRoleList(){\r\n      var _this = this;\r\n      getRoleList().then(res => {\r\n        _this.roleNames = res;\r\n      });\r\n    },\r\n    // 获取单位下的单位\r\n    handleOrgList(){\r\n      var param = {org : 1};\r\n      var _this = this;\r\n      getOrgList(param).then(res => {\r\n        _this.orgNames = res;\r\n      });\r\n    },\r\n    add () {\r\n      this.visible = true\r\n    },\r\n    handleSubmit () {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n\r\n          var param = Object.assign(values,{id:this.editData.id} )\r\n          var _this = this;\r\n          setTimeout(() => {\r\n            editUser(param).then(res => {\r\n              \r\n              if(res.code == 0){\r\n                _this.$message.success('修改成功');\r\n                // 重置输入框内容\r\n                _this.form.resetFields();\r\n                \r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n            this.visible = false\r\n            \r\n            this.confirmLoading = false\r\n            this.$emit('ok', values)\r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.visible = false\r\n    },\r\n    handleChangeOption(value){\r\n      console.log( `select ${value}`)\r\n    },\r\n    handleBlur() {\r\n      console.log('blur');\r\n    },\r\n    handleFocus() {\r\n      console.log('focus');\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}