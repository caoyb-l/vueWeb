{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\Sensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\Sensor.vue","mtime":1566376233531},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport { queryData } from '@/api/common'\r\nimport CreateSensor from './modules/CreateSensor'\r\nimport EditAllSensor from './modules/EditAllSensor'\r\nimport EditSensor from './modules/EditSensor'\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    CreateSensor,\r\n    EditAllSensor,\r\n    EditSensor\r\n  },\r\n  data() {\r\n    return {\r\n      cmdList: [],\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      // 查询参数\r\n      queryParam: {\r\n        robotName: '',\r\n        triggerName: ''\r\n      },\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n\r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'robotName',\r\n          scopedSlots: { customRender: 'robotName' }\r\n        },\r\n        {\r\n          title: '触发条件',\r\n          dataIndex: 'triggerName',\r\n          scopedSlots: { customRender: 'triggerName' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        var id = JSON.parse(localStorage.getItem('user')).id\r\n        console.log('user 请求', parameter)\r\n        var params = { orgId: id }\r\n        return queryData(Object.assign(parameter, params, this.queryParam), '/supercmdTriggerRobot/list').then(res => {\r\n          console.log(res)\r\n          return res.result\r\n        })\r\n      },\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      options: {\r\n        alert: {\r\n          show: true,\r\n          clear: () => {\r\n            this.selectedRowKeys = []\r\n          }\r\n        },\r\n        rowSelection: {          \r\n          selectedRowKeys: this.selectedRowKeys,\r\n          onChange: this.onSelectChange\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return this.$route.meta.title\r\n    }\r\n  },\r\n  created() {\r\n    this.getCmdList()\r\n  },\r\n  methods: {\r\n    tableOption() {\r\n      if (!this.optionAlertShow) {\r\n        this.options = {\r\n          alert: {\r\n            show: true,\r\n            clear: () => {\r\n              this.selectedRowKeys = []\r\n            }\r\n          },\r\n          rowSelection: {\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            getCheckboxProps: record => ({\r\n              props: {\r\n                disabled: record.no === 'No 2', // Column configuration not to be checked\r\n                name: record.no\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.optionAlertShow = true\r\n      } else {\r\n        this.options = {\r\n          alert: false,\r\n          rowSelection: null\r\n        }\r\n        this.optionAlertShow = false\r\n      }\r\n    },\r\n    onSelectChange(selectedRowKeys, selectedRows) {     \r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    handleCmdChange(value) {\r\n      console.log(`selected ${value}`)\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    //获取指令列表\r\n    getCmdList() {\r\n      var _this = this\r\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\r\n        console.log('指令列表', res)\r\n        if (res.code == 0) {\r\n          _this.cmdList = res.supercmdTriggerList\r\n        } else {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 处理刷新\r\n    handleRefresh() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 表单重置\r\n    resetQuery() {\r\n      this.queryParam = {}\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleEditVisible(record) {\r\n      this.$refs.editModal.add(record)\r\n    },\r\n    // 搜索内容\r\n    searchData() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = { id: [record.id] }\r\n            queryData(id, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 批量删除\r\n    handleDeletes() {\r\n      console.log(this.selectedRowKeys)\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var ids = { id: _this.selectedRowKeys }\r\n            queryData(ids, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.selectedRowKeys = []\r\n                _this.$refs.table.refresh()\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}