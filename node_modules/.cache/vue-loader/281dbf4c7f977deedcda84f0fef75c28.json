{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/Login.vue","mtime":1571637124435},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/css-loader/index.js","mtime":1571637287866},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1571637450641},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/postcss-loader/src/index.js","mtime":1571637379039},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/less-loader/dist/cjs.js","mtime":1571637352092},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form\r\n      id=\"formLogin\"\r\n      class=\"user-layout-login\"\r\n      ref=\"formLogin\"\r\n      :form=\"form\"\r\n      @submit=\"handleSubmit\"\r\n    >\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\"\r\n      >\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"text\"\r\n              placeholder=\"账户: admin\"\r\n              v-decorator=\"[\r\n                'username',\r\n                {rules: [{ required: true, message: '请输入帐户名或邮箱地址' }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\r\n              ]\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"password\"\r\n              autocomplete=\"false\"\r\n              placeholder=\"密码: admin or ant.design\"\r\n              v-decorator=\"[\r\n                'password',\r\n                {rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\r\n              ]\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-item>\r\n        <a-checkbox v-decorator=\"['rememberMe']\">自动登录</a-checkbox>\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top:24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"state.loginBtn\"\r\n          :disabled=\"state.loginBtn\"\r\n        >确定</a-button>\r\n      </a-form-item>\r\n\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport md5 from 'md5'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport { getSmsCaptcha, get2step } from '@/api/login'\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha\r\n  },\r\n  data () {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      state: {\r\n        time: 60,\r\n        loginBtn: false,\r\n        // login type: 0 email, 1 username, 2 telephone\r\n        loginType: 0,\r\n        smsSendBtn: false\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    get2step({ })\r\n      .then(res => {\r\n        this.requiredTwoStepCaptcha = res.result.stepCode\r\n      })\r\n      .catch(() => {\r\n        this.requiredTwoStepCaptcha = false\r\n      })\r\n    // this.requiredTwoStepCaptcha = true\r\n  },\r\n  methods: {\r\n    //  this.$store.dispatch('xxx')\r\n    ...mapActions(['Login', 'Logout']),\r\n    // handler\r\n    handleUsernameOrEmail (rule, value, callback) {\r\n      const { state } = this\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        state.loginType = 0\r\n      } else {\r\n        state.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick (key) {\r\n      this.customActiveKey = key\r\n    },\r\n    handleSubmit (e) {\r\n      e.preventDefault()\r\n      const {\r\n        form: { validateFields },\r\n        state,\r\n        customActiveKey,\r\n        Login\r\n      } = this\r\n       \r\n      state.loginBtn = true\r\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\r\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\r\n        if (!err) {\r\n          const loginParams = { ...values }\r\n          delete loginParams.username\r\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\r\n          // loginParams.password = md5(values.password)\r\n\r\n          Login(loginParams).then(res => {\r\n            if(res.code == 0){\r\n              this.loginSuccess(res)\r\n            } else {\r\n              this.requestFailed(res.message)\r\n            }\r\n          }).catch(err => this.requestFailed(err))\r\n            .finally(() => {\r\n              state.loginBtn = false\r\n            })\r\n        } else {\r\n          setTimeout(() => {\r\n            state.loginBtn = false\r\n          }, 600)\r\n        }\r\n      })\r\n    },\r\n    loginSuccess (res) {\r\n      // 延迟 1 秒显示欢迎信息\r\n      setTimeout(() => {\r\n       this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`\r\n        });\r\n        this.$router.push({ name: 'systemUser' })\r\n      }, 200)\r\n       \r\n    },\r\n    requestFailed (err) {\r\n      console.log(err);\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}