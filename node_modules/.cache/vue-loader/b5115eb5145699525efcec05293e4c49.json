{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue","mtime":1584669518264},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data() {\n    return {\n      showEditCmd: false,\n      edit: { triggerId: 0, triggerName: '', cmdId: '' },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '机器人名称',\n          dataIndex: 'robotName',\n          scopedSlots: { customRender: 'robotName' }\n        },\n        {\n          title: '机器人ID',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'id' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      options: false,\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    changeCmd(event) {\n      this.edit.cmdId = event\n      this.showEditCmd = true\n      console.log('下拉框：' + this.edit.cmdId)\n    },\n    // 新增动作集\n    addCmd() {\n      this.$refs.cmd.show('传感器', '', 0)\n    },\n    // 修改动作集\n    editCmd() {\n      console.log('修改：' + this.edit.cmdId)\n      this.$refs.cmd.show('传感器', '', this.edit.cmdId)\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId(cmd) {\n      this.getCmdList()\n      this.edit.cmdId = cmd\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      })\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    //获取动作集\n    getCmdList() {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: orgId }\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\n        // console.log('动作集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        }\n      })\n    },\n\n    add(record) {\n      console.log(record)\n      if (record.cmdId != '' && record.cmdId != null) {\n        this.showEditCmd = true\n      } else {\n        this.showEditCmd = false\n      }\n      console.log(this.showEditCmd)\n      this.visible = true\n      this.edit = record\n      this.data = []\n      this.data.push(record)\n      this.getCmdList()\n      if (this.$refs.table) {\n        this.$refs.table.refresh()\n      }\n    },\n\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          }\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('修改成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["EditSensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditSensor.vue","sourceRoot":"src/views/instruction/modules","sourcesContent":["<template>\n  <!-- 修改超级命令 -->\n  <a-modal\n    title=\"编辑传感器\"\n    style=\"top: 20px;\"\n    :width=\"'70%'\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    :destroyOnClose=\"true\"\n    v-preventReClick\n    :maskClosable = \"false\"\n  >\n    <a-form :form=\"form\">\n      <a-form-item label=\"触发指令\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-input v-model=\"edit.triggerName\" :disabled=\"true\" placeholder=\"触发指令\" />\n      </a-form-item>\n      <a-form-item label=\"选择机器人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-table\n          ref=\"table\"\n          size=\"middle\"\n          rowKey=\"id\"\n          :alert=\"options.alert\"\n          :rowSelection=\"options.rowSelection\"\n          :columns=\"columns\"\n          :dataSource=\"data\"\n        >\n          <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n        </a-table>\n      </a-form-item>\n      <a-form-item label=\"动作集\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择动作集\"\n          optionFilterProp=\"children\"\n          style=\"width: 200px\"\n          @change=\"changeCmd($event)\"\n          :filterOption=\"filterOption\"\n          v-decorator=\"[\n            'cmdId',\n            {rules: [{required: true,  message: '选择动作集' }],initialValue:edit.cmdId}\n          ]\"\n        >\n          <a-select-option v-for=\"(item) in cmdList\" :key=\"item.id\" :value=\"item.id\">{{item.name}}</a-select-option>\n        </a-select>\n        <a-button type=\"primary\" style=\"margin-left:20px\" @click=\"addCmd()\">新增动作集</a-button>\n        <a-divider type=\"vertical\" />\n        <a-button id=\"chgCmd\" type=\"primary\" @click=\"editCmd()\" v-if=\"showEditCmd\">修改当前动作集</a-button>\n      </a-form-item>\n    </a-form>\n    <cmd-list @getCmdId=\"getCmdId\" ref=\"cmd\"></cmd-list>\n  </a-modal>\n</template>\n\n<script>\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data() {\n    return {\n      showEditCmd: false,\n      edit: { triggerId: 0, triggerName: '', cmdId: '' },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '机器人名称',\n          dataIndex: 'robotName',\n          scopedSlots: { customRender: 'robotName' }\n        },\n        {\n          title: '机器人ID',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'id' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      options: false,\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    changeCmd(event) {\n      this.edit.cmdId = event\n      this.showEditCmd = true\n      console.log('下拉框：' + this.edit.cmdId)\n    },\n    // 新增动作集\n    addCmd() {\n      this.$refs.cmd.show('传感器', '', 0)\n    },\n    // 修改动作集\n    editCmd() {\n      console.log('修改：' + this.edit.cmdId)\n      this.$refs.cmd.show('传感器', '', this.edit.cmdId)\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId(cmd) {\n      this.getCmdList()\n      this.edit.cmdId = cmd\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      })\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    //获取动作集\n    getCmdList() {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: orgId }\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\n        // console.log('动作集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        }\n      })\n    },\n\n    add(record) {\n      console.log(record)\n      if (record.cmdId != '' && record.cmdId != null) {\n        this.showEditCmd = true\n      } else {\n        this.showEditCmd = false\n      }\n      console.log(this.showEditCmd)\n      this.visible = true\n      this.edit = record\n      this.data = []\n      this.data.push(record)\n      this.getCmdList()\n      if (this.$refs.table) {\n        this.$refs.table.refresh()\n      }\n    },\n\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          }\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('修改成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"]}]}