{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/CreateImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/CreateImage.vue","mtime":1587710678396},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport { uploadUrl } from '@/api/upload'\nexport default {\n  components: {\n    STable\n  },\n  data () {\n    return {\n      showNetUrl: false,\n      uploadPic: false, // 重新上传框\n      fileName: '', // 重新上传文件名\n      showName: false, // 文件名称\n      showPicRadio: false,\n      uploadRadio: '',\n      showPic: true,\n      descnVisible: false, // 备注是否隐藏\n      appImageVisible: false,\n      appImageWebUrl: '', // 图片访问地址\n      picName: '', // 图片名称\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      fileList: [],\n      descn: '', // 选择网页时的备注\n      typeId: '',\n      robotCode: '',\n      imageTypeList: [\n        {\n          typeId: 0,\n          type: '开机'\n        },\n        {\n          typeId: 1,\n          type: '休息'\n        },\n        {\n          typeId: 2,\n          type: 'LOGO'\n        },\n        {\n          typeId: 3,\n          type: '主页'\n        }\n      ],\n      imageList: [],\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '机器人名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'code',\n          scopedSlots: {\n            customRender: 'code',\n            filterDropdown: 'filterDropdown',\n            filterIcon: 'filterIcon'\n          }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var id = JSON.parse(localStorage.getItem('user')).id\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId\n        // console.log('user 请求', parameter)\n        var params = {\n          type: 1, // 判断标识 新增操作传1 修改操作传2\n          imageType: this.typeId,\n          code: this.robotCode,\n          orgId: orgId,\n          userId: id\n        }\n        return queryData(Object.assign(parameter, params), '/robotInfo/loadRobotPageListByAppImage').then(res => {\n          // console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false,\n      url: '',\n      radioValue: 1\n    }\n  },\n  methods: {\n    // 检索\n    handleSearch (selectedKeys) {\n      this.robotCode = selectedKeys[0]\n      console.log(this.robotCode)\n      this.$refs.table.refresh()\n    },\n    handleReset (clearFilters) {\n      clearFilters()\n      this.robotCode = ''\n    },\n    changePicRadio (option) {\n      console.log(option.target.value)\n      const values = option.target.value\n      this.uploadRadio = values\n      // 资源库\n      if (values == '1') {\n        this.showPic = true\n        this.uploadPic = false\n        this.showName = false\n        this.showNetUrl = false\n        this.descnVisible = false\n      }\n      // 网络资源\n      if (values == '2') {\n        this.showPic = false\n        this.uploadPic = false\n        this.showName = true\n        this.showNetUrl = true\n        this.descnVisible = false\n        this.picName = ''\n      }\n      // 自定义模块\n      if (values == '3') {\n        this.showPic = false\n        this.uploadPic = false\n        this.showName = true\n        this.showNetUrl = false\n        this.descnVisible = true\n        this.picName = ''\n      }\n      // 重新上传\n      if (values == '4') {\n        this.showPic = false\n        this.uploadPic = true\n        this.showName = true\n        this.showNetUrl = false\n        this.descnVisible = false\n      }\n    },\n\n    getImageList () {\n      const id = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: id }\n      var _this = this\n      queryData(param, '/skillOptionFile/getFileListByType').then(res => {\n        _this.imageList = res.picture\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 类型选择列表监听事件\n    handleAppImageChange (value) {\n      this.typeId = value\n      this.robotCode = ''\n      this.$refs.table.refresh()\n    },\n    // 公共图片选择列表监听事件\n    handleAppImageChange2 (value, option) {\n      if (option == undefined) {\n        this.showNetUrl = true\n        this.uploadPic = true\n      } else {\n        this.uploadPic = false\n        this.showNetUrl = false\n        this.picName = option.key\n      }\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 选择机器人\n    onSelectChange (record, selected, nativeEvent) {\n      // console.log(record, selected)\n      if (selected) {\n        this.selectedRowKeys.add(record.id)\n      } else {\n        this.selectedRowKeys.delete(record.id)\n      }\n    },\n    onSelectChangeAll (selected, changeRows) {\n      if (selected) {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.add(value.id)\n        })\n      } else {\n        this.selectedRowKeys.clear()\n      }\n    },\n\n    add () {\n      this.url = uploadUrl + 'appImage/fileUpload'\n      this.visible = true\n      this.selectedRowKeys.clear()\n      this.getImageList()\n      this.showNetUrl = false\n      this.uploadPic = false // 重新上传框\n      this.showName = false // 文件名称\n      this.showPicRadio = false\n      this.showPic = true\n      this.descnVisible = false // 备注是否隐藏\n      this.appImageVisible = false\n      this.typeId = ''\n      this.robotCode = ''\n      this.radioValue = 1\n    },\n\n    handleSubmit () {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          if (this.fileName == '' && this.uploadRadio =='4' ) {\n            this.$message.error('请上传图片')\n            return\n          }\n          var param = {\n            robotId: [..._this.selectedRowKeys],\n            picName: this.picName,\n            fileName: this.fileName\n          }\n          queryData({ ...param, ...values }, '/appImage/save').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('新建成功')\n              this.fileName = ''\n              this.typeId = ''\n              this.descn = '' // 网页备注\n              this.name = ''\n              _this.fileList = []\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    async handlePreview (file) {\n      console.log(file)\n      this.appImageWebUrl = file.url || file.thumbUrl\n      this.appImageVisible = true\n      console.log(this.appImageWebUrl)\n    },\n    // 文件长传监听\n    handleChange ({ fileList }) {\n      if (fileList.length > 0) {\n        if (fileList[0].status == 'done') {\n          var res = fileList[0].response\n          // console.log(res)\n          if (res.code == 0) {\n            this.fileName = res.fileName\n            this.$message.success(`${res.fileName} 上传成功`)\n          } else {\n            this.$message.error(res.message)\n          }\n        }\n      }\n      this.fileList = fileList\n    },\n    // 删除文件\n    handleRemoveFile (file) {\n      const _this = this\n      queryData({ fileName: file.response.fileName }, '/appImage/delFile').then(res => {\n        if (res.code == 0) {\n          _this.$message.error(res.message)\n          return true\n        } else {\n          _this.$message.error(res.message)\n          return false\n        }\n      })\n    },\n    handleCancel () {\n      this.appImageVisible = false\n    }\n  }\n}\n",null]}