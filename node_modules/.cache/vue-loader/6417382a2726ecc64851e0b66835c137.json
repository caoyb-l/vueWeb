{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/src/components/Charts/TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/src/components/Charts/TagCloud.vue","mtime":1571637124520},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { registerShape } from 'viser-vue'\r\nconst DataSet = require('@antv/data-set')\r\n\r\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png'\r\n\r\nconst scale = [\r\n  { dataKey: 'x', nice: false },\r\n  { dataKey: 'y', nice: false }\r\n]\r\n\r\nregisterShape('point', 'cloud', {\r\n  draw (cfg, container) {\r\n    return container.addShape('text', {\r\n      attrs: {\r\n        fillOpacity: cfg.opacity,\r\n        fontSize: cfg.origin._origin.size,\r\n        rotate: cfg.origin._origin.rotate,\r\n        text: cfg.origin._origin.text,\r\n        textAlign: 'center',\r\n        fontFamily: cfg.origin._origin.font,\r\n        fill: cfg.color,\r\n        textBaseline: 'Alphabetic',\r\n        ...cfg.style,\r\n        x: cfg.x,\r\n        y: cfg.y\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'TagCloud',\r\n  props: {\r\n    tagList: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 400\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 640\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      data: [],\r\n      scale\r\n    }\r\n  },\r\n  watch: {\r\n    tagList: function (val) {\r\n      if (val.length > 0) {\r\n        this.initTagCloud(val)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.tagList.length > 0) {\r\n      this.initTagCloud(this.tagList)\r\n    }\r\n  },\r\n  methods: {\r\n    initTagCloud (dataSource) {\r\n      const { height, width } = this\r\n\r\n      const dv = new DataSet.View().source(dataSource)\r\n      const range = dv.range('value')\r\n      const min = range[0]\r\n      const max = range[1]\r\n      const imageMask = new Image()\r\n      imageMask.crossOrigin = ''\r\n      imageMask.src = imgUrl\r\n      imageMask.onload = () => {\r\n        dv.transform({\r\n          type: 'tag-cloud',\r\n          fields: ['name', 'value'],\r\n          size: [width, height],\r\n          imageMask,\r\n          font: 'Verdana',\r\n          padding: 0,\r\n          timeInterval: 5000, // max execute time\r\n          rotate () {\r\n            let random = ~~(Math.random() * 4) % 4\r\n            if (random === 2) {\r\n              random = 0\r\n            }\r\n            return random * 90 // 0, 90, 270\r\n          },\r\n          fontSize (d) {\r\n            if (d.value) {\r\n              return ((d.value - min) / (max - min)) * (32 - 8) + 8\r\n            }\r\n            return 0\r\n          }\r\n        })\r\n        this.data = dv.rows\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}