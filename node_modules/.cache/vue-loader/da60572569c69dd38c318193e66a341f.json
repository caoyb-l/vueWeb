{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue?vue&type=template&id=2e44bb47&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue","mtime":1578713142241},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1571637450641},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"a-modal\",\n    {\n      staticStyle: { top: \"20px\" },\n      attrs: { title: \"编辑传感器\", width: \"70%\", destroyOnClose: true },\n      on: { ok: _vm.handleSubmit },\n      model: {\n        value: _vm.visible,\n        callback: function($$v) {\n          _vm.visible = $$v\n        },\n        expression: \"visible\"\n      }\n    },\n    [\n      _c(\n        \"a-form\",\n        { attrs: { form: _vm.form } },\n        [\n          _c(\n            \"a-form-item\",\n            {\n              attrs: {\n                label: \"触发指令\",\n                labelCol: _vm.labelCol,\n                wrapperCol: _vm.wrapperCol\n              }\n            },\n            [\n              _c(\"a-input\", {\n                attrs: { disabled: true, placeholder: \"触发指令\" },\n                model: {\n                  value: _vm.edit.triggerName,\n                  callback: function($$v) {\n                    _vm.$set(_vm.edit, \"triggerName\", $$v)\n                  },\n                  expression: \"edit.triggerName\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"a-form-item\",\n            {\n              attrs: {\n                label: \"选择机器人\",\n                labelCol: _vm.labelCol,\n                wrapperCol: _vm.wrapperCol\n              }\n            },\n            [\n              _c(\"a-table\", {\n                ref: \"table\",\n                attrs: {\n                  size: \"middle\",\n                  rowKey: \"id\",\n                  alert: _vm.options.alert,\n                  rowSelection: _vm.options.rowSelection,\n                  columns: _vm.columns,\n                  dataSource: _vm.data\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"serial\",\n                    fn: function(text, record, index) {\n                      return _c(\"span\", {}, [_vm._v(_vm._s(index + 1))])\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _c(\n            \"a-form-item\",\n            {\n              attrs: {\n                label: \"命令集\",\n                labelCol: _vm.labelCol,\n                wrapperCol: _vm.wrapperCol\n              }\n            },\n            [\n              _c(\n                \"a-select\",\n                {\n                  directives: [\n                    {\n                      name: \"decorator\",\n                      rawName: \"v-decorator\",\n                      value: [\n                        \"cmdId\",\n                        {\n                          rules: [{ required: true, message: \"选择命令集\" }],\n                          initialValue: _vm.edit.cmdId\n                        }\n                      ],\n                      expression:\n                        \"[\\n          'cmdId',\\n          {rules: [{required: true,  message: '选择命令集' }],initialValue:edit.cmdId}\\n        ]\"\n                    }\n                  ],\n                  staticStyle: { width: \"200px\" },\n                  attrs: {\n                    showSearch: \"\",\n                    placeholder: \"选择命令集\",\n                    optionFilterProp: \"children\",\n                    filterOption: _vm.filterOption\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.changeCmd($event)\n                    }\n                  }\n                },\n                _vm._l(_vm.cmdList, function(item) {\n                  return _c(\n                    \"a-select-option\",\n                    { key: item.id, attrs: { value: item.id } },\n                    [_vm._v(_vm._s(item.name))]\n                  )\n                }),\n                1\n              ),\n              _c(\n                \"a-button\",\n                {\n                  staticStyle: { \"margin-left\": \"20px\" },\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.addCmd()\n                    }\n                  }\n                },\n                [_vm._v(\"找不到合适的?点击配置命令集\")]\n              ),\n              _c(\"a-divider\", { attrs: { type: \"vertical\" } }),\n              _vm.showEditCmd\n                ? _c(\n                    \"a-button\",\n                    {\n                      attrs: { id: \"chgCmd\", type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.editCmd()\n                        }\n                      }\n                    },\n                    [_vm._v(\"修改命令集\")]\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"cmd-list\", { ref: \"cmd\", on: { getCmdId: _vm.getCmdId } })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}