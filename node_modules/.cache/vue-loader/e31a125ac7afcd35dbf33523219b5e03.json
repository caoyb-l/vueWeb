{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\company\\ComList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\company\\ComList.vue","mtime":1565769941375},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { queryData } from '@/api/common'\r\nimport DetailList from '@/components/tools/DetailList'\r\nconst DetailListItem = DetailList.Item\r\nexport default {\r\n  components: {\r\n    DetailList,\r\n    DetailListItem,\r\n  },\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      expandedKeys: [],\r\n      searchValue: '',\r\n      autoExpandParent: true,\r\n      orgTree: [],\r\n      orgList: [],\r\n      comInfo:[],\r\n      pid:'',\r\n      isSelect:false,\r\n      addVisible:false,\r\n      editVisible:false,\r\n      addForm:{\r\n        name:'',\r\n        contact:'',\r\n        contactWay:'',\r\n        descn:''\r\n      },\r\n      editForm:{\r\n      },\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.getDateTree();\r\n  },\r\n  methods: {\r\n    // 新增\r\n    handleAdd(){\r\n      const { form: { validateFields } } = this;\r\n      var _this = this;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          console.log('values', values)\r\n        }\r\n        var param = {pid:this.pid,...values.addForm};\r\n        console.log(param);\r\n        \r\n        queryData(param,'/hrOrg/save').then(res => {\r\n           if(res.code == 0){\r\n             _this.$message.success('新建成功');\r\n             _this.addVisible = false;\r\n             _this.form.resetFields();\r\n             _this.getDateTree();\r\n           } else {\r\n              _this.$message.error(res.message);\r\n           }\r\n        });\r\n        \r\n      });\r\n    },\r\n    // 编辑\r\n    handleEdit(){\r\n      const { form: { validateFields } } = this;\r\n      var _this = this;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          console.log('values', values)\r\n        }\r\n        var param = {entityId:this.pid,...values.editForm};\r\n        console.log(param);\r\n        \r\n        queryData(param,'/hrOrg/save').then(res => {\r\n           if(res.code == 0){\r\n             _this.$message.success('编辑成功');\r\n             _this.editVisible = false;\r\n             _this.form.resetFields();\r\n             _this.getDateTree();\r\n             _this.getComInfo(_this.pid);\r\n           } else {\r\n              _this.$message.error(res.message);\r\n           }\r\n        });\r\n        \r\n      });\r\n    },\r\n    // 删除\r\n    handleDelete(){\r\n      var _this = this;\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除该单位吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var param = {entityId:_this.pid};\r\n            console.log(param);\r\n            queryData(param,'/hrOrg/delete').then(res => {\r\n              console.log(res)\r\n              if(res.code == 0){\r\n                _this.$message.success('删除成功');\r\n                _this.getDateTree();\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 处理显隐\r\n    handleAddVisible(){\r\n      if(this.pid != '' ) {\r\n        this.addVisible = true;\r\n      }\r\n    },\r\n    // 编辑\r\n    handleEditVisible(){\r\n      this.editVisible = true;\r\n      this.editForm = this.comInfo;\r\n    },\r\n    //   获取树形结构数据\r\n    getDateTree() {\r\n      var id = JSON.parse(localStorage.getItem('user')).id;\r\n      var _this = this\r\n      queryData({ userid: id },'hrOrg/list').then(res => {\r\n        console.log(res);\r\n        if(res.code == 0){\r\n          _this.orgTree = res.result\r\n          _this.getOrgList(res.result);     \r\n          var expandedKeys=[];\r\n           res.result.map((value,index)=>{\r\n             if(value.children){\r\n               var item=value.children;\r\n               item.map((value,index)=>{\r\n                  expandedKeys.push(value.key);\r\n               })\r\n             }else{\r\n                expandedKeys.push(value.key);\r\n             }             \r\n           })\r\n           _this.expandedKeys =expandedKeys;\r\n      \r\n        }\r\n      })\r\n    },\r\n    //   获取用于搜索的list数组\r\n    getOrgList(data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const node = data[i]\r\n        const key = node.key;\r\n        const title = node.title;\r\n        const orgid = node.orgId;\r\n        const pid = node.pid;\r\n        this.orgList.push({ key, title: title, orgid : orgid, pid : pid })\r\n        if (node.children) {\r\n          this.getOrgList(node.children)\r\n        }\r\n      }\r\n    },\r\n    // 获取当前点击单位\r\n    onSelect(key){\r\n      this.getComInfo(key[0]);\r\n     \r\n    },\r\n    getComInfo(pid){\r\n      var param = {orgId:pid}; \r\n      var _this = this;\r\n      queryData(param,'/hrOrg/getOrgMessage').then(res => {\r\n        console.log(res);\r\n        if(res.code == 0){\r\n          _this.comInfo  = Object(res.hrOrg);\r\n          if(Object.keys(_this.comInfo).length){\r\n            _this.isSelect = true;\r\n            _this.pid = pid;\r\n          } else {\r\n            _this.isSelect = false;\r\n          }\r\n        } \r\n      });\r\n    },\r\n    onExpand(expandedKeys) {\r\n      //console.log(expandedKeys);\r\n      this.expandedKeys = expandedKeys\r\n      this.autoExpandParent = false\r\n    },\r\n    // 搜索\r\n    onChange(e) {\r\n      const value = e.target.value\r\n\r\n      const expandedKeys = this.orgList\r\n        .map(item => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return this.getParentKey(item.title, this.orgTree)\r\n          }\r\n          return null\r\n        })\r\n        .filter((item, i, self) => item && self.indexOf(item) === i)\r\n      Object.assign(this, {\r\n        expandedKeys,\r\n        searchValue: value,\r\n        autoExpandParent: true\r\n      })\r\n    },\r\n    // 定位树形结构的数据\r\n    getParentKey(title, tree) {\r\n      let parentKey = 0\r\n      for (let i = 0; i < tree.length; i++) {\r\n        const node = tree[i]\r\n        if (node.children) {\r\n          if (node.children.some(item => item.title === title)) {\r\n            parentKey = node.key\r\n          } else if (this.getParentKey(title, node.children)) {\r\n            parentKey = this.getParentKey(title, node.children)\r\n          }\r\n        }\r\n      }\r\n      return parentKey\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ComList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"ComList.vue","sourceRoot":"src/views/company","sourcesContent":["<template>\r\n  <div>\r\n    <a-card :bordered=\"false\">\r\n    <a-row :gutter=\"8\">\r\n        <a-col :span=\"5\">\r\n            <a-input-search style= \"margin-bottom: 8px\" placeholder=\"关键字\" @change=\"onChange\" />\r\n            <a-tree\r\n            ref=\"tree\"\r\n            @expand=\"onExpand\"\r\n            :expandedKeys=\"expandedKeys\"\r\n            :autoExpandParent=\"autoExpandParent\"\r\n            defaultExpandAll\r\n            defaultExpandParent\r\n            @select = \"onSelect\"\r\n            :treeData=\"orgTree\"\r\n            >\r\n            <template slot=\"title\" slot-scope=\"{title}\">\r\n                <span v-if=\"title.indexOf(searchValue) > -1\">\r\n                {{title.substr(0, title.indexOf(searchValue))}}\r\n                <span style=\"color: #f50\">{{searchValue}}</span>\r\n                {{title.substr(title.indexOf(searchValue) + searchValue.length)}}\r\n                </span>\r\n                <span v-else>{{title}}</span>\r\n            </template>\r\n            </a-tree>\r\n        </a-col>\r\n        <a-col :span=\"17\">\r\n            <div class=\"table-operator\">\r\n                <a-button type=\"primary\" v-if=\"isSelect\" icon=\"plus\" style=\"margin-left:30px;\" @click=\"handleAddVisible()\" v-action:add>新建下级</a-button>\r\n                <a-button type=\"dashed\"  v-if=\"isSelect\" icon=\"form\" style=\"margin-left:30px;\" @click=\"handleEditVisible()\" v-action:edit>编辑信息</a-button>\r\n                <a-button type=\"danger\"  v-if=\"isSelect\" icon=\"delete\" style=\"margin-left:30px;\" @click=\"handleDelete()\" v-action:delete>删除</a-button>\r\n                <a-card :bordered=\"false\" v-if=\"isSelect\">\r\n                  <detail-list title=\"单位信息\" ref=\"list\">\r\n                    <detail-list-item term=\"单位名称\">{{comInfo.name}}</detail-list-item>\r\n                    <detail-list-item term=\"联系人\">{{comInfo.contact}}</detail-list-item>\r\n                    <detail-list-item term=\"联系方式\">{{comInfo.contactWay}}</detail-list-item>\r\n                    <detail-list-item term=\"备注\">{{comInfo.descn}}</detail-list-item>\r\n                  </detail-list>\r\n                  <a-divider style=\"margin-bottom: 32px\"/>\r\n                </a-card>\r\n            </div>\r\n        </a-col>\r\n    </a-row>\r\n    </a-card>\r\n    <!-- 新增 -->\r\n    <a-modal\r\n      title=\"新建下级\"\r\n      v-model=\"addVisible\"\r\n      @ok=\"handleAdd\"\r\n    >\r\n      <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input v-decorator=\"[\r\n            'addForm.name',\r\n            {rules: [{ required: true, message: '请输入名称' }]}\r\n          ]\"\r\n          placeholder=\"名称\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"联系人\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input  v-decorator=\"[\r\n            'addForm.contact'\r\n          ]\"\r\n          placeholder=\"联系人\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"联系方式\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'addForm.contactWay'\r\n          ]\"\r\n          placeholder=\"联系方式\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"备注\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-textarea v-decorator=\"[\r\n            'addForm.descn'\r\n          ]\"\r\n           placeholder=\"备注\" :rows=\"4\"/>\r\n      </a-form-item>\r\n    </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 编辑 -->\r\n    <a-modal\r\n      title=\"编辑\"\r\n      v-model=\"editVisible\"\r\n      @ok=\"handleEdit\"\r\n    >\r\n      <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input v-decorator=\"[\r\n            'editForm.name',\r\n            {rules: [{ required: true, message: '请输入名称' }],\r\n            initialValue: editForm.name}\r\n          ]\"\r\n          placeholder=\"名称\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"联系人\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input  v-decorator=\"[\r\n            'editForm.contact',\r\n            {initialValue: editForm.contact}\r\n          ]\"\r\n          placeholder=\"联系人\"\r\n           />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"联系方式\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'editForm.contactWay',\r\n            {initialValue: editForm.contactWay}\r\n          ]\"\r\n          placeholder=\"联系方式\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"备注\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-textarea v-decorator=\"[\r\n            'editForm.descn',\r\n            {initialValue: editForm.descn}\r\n          ]\"\r\n           placeholder=\"备注\" :rows=\"4\"/>\r\n      </a-form-item>\r\n    </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { queryData } from '@/api/common'\r\nimport DetailList from '@/components/tools/DetailList'\r\nconst DetailListItem = DetailList.Item\r\nexport default {\r\n  components: {\r\n    DetailList,\r\n    DetailListItem,\r\n  },\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      expandedKeys: [],\r\n      searchValue: '',\r\n      autoExpandParent: true,\r\n      orgTree: [],\r\n      orgList: [],\r\n      comInfo:[],\r\n      pid:'',\r\n      isSelect:false,\r\n      addVisible:false,\r\n      editVisible:false,\r\n      addForm:{\r\n        name:'',\r\n        contact:'',\r\n        contactWay:'',\r\n        descn:''\r\n      },\r\n      editForm:{\r\n      },\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.getDateTree();\r\n  },\r\n  methods: {\r\n    // 新增\r\n    handleAdd(){\r\n      const { form: { validateFields } } = this;\r\n      var _this = this;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          console.log('values', values)\r\n        }\r\n        var param = {pid:this.pid,...values.addForm};\r\n        console.log(param);\r\n        \r\n        queryData(param,'/hrOrg/save').then(res => {\r\n           if(res.code == 0){\r\n             _this.$message.success('新建成功');\r\n             _this.addVisible = false;\r\n             _this.form.resetFields();\r\n             _this.getDateTree();\r\n           } else {\r\n              _this.$message.error(res.message);\r\n           }\r\n        });\r\n        \r\n      });\r\n    },\r\n    // 编辑\r\n    handleEdit(){\r\n      const { form: { validateFields } } = this;\r\n      var _this = this;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          console.log('values', values)\r\n        }\r\n        var param = {entityId:this.pid,...values.editForm};\r\n        console.log(param);\r\n        \r\n        queryData(param,'/hrOrg/save').then(res => {\r\n           if(res.code == 0){\r\n             _this.$message.success('编辑成功');\r\n             _this.editVisible = false;\r\n             _this.form.resetFields();\r\n             _this.getDateTree();\r\n             _this.getComInfo(_this.pid);\r\n           } else {\r\n              _this.$message.error(res.message);\r\n           }\r\n        });\r\n        \r\n      });\r\n    },\r\n    // 删除\r\n    handleDelete(){\r\n      var _this = this;\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除该单位吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var param = {entityId:_this.pid};\r\n            console.log(param);\r\n            queryData(param,'/hrOrg/delete').then(res => {\r\n              console.log(res)\r\n              if(res.code == 0){\r\n                _this.$message.success('删除成功');\r\n                _this.getDateTree();\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 处理显隐\r\n    handleAddVisible(){\r\n      if(this.pid != '' ) {\r\n        this.addVisible = true;\r\n      }\r\n    },\r\n    // 编辑\r\n    handleEditVisible(){\r\n      this.editVisible = true;\r\n      this.editForm = this.comInfo;\r\n    },\r\n    //   获取树形结构数据\r\n    getDateTree() {\r\n      var id = JSON.parse(localStorage.getItem('user')).id;\r\n      var _this = this\r\n      queryData({ userid: id },'hrOrg/list').then(res => {\r\n        console.log(res);\r\n        if(res.code == 0){\r\n          _this.orgTree = res.result\r\n          _this.getOrgList(res.result);     \r\n          var expandedKeys=[];\r\n           res.result.map((value,index)=>{\r\n             if(value.children){\r\n               var item=value.children;\r\n               item.map((value,index)=>{\r\n                  expandedKeys.push(value.key);\r\n               })\r\n             }else{\r\n                expandedKeys.push(value.key);\r\n             }             \r\n           })\r\n           _this.expandedKeys =expandedKeys;\r\n      \r\n        }\r\n      })\r\n    },\r\n    //   获取用于搜索的list数组\r\n    getOrgList(data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const node = data[i]\r\n        const key = node.key;\r\n        const title = node.title;\r\n        const orgid = node.orgId;\r\n        const pid = node.pid;\r\n        this.orgList.push({ key, title: title, orgid : orgid, pid : pid })\r\n        if (node.children) {\r\n          this.getOrgList(node.children)\r\n        }\r\n      }\r\n    },\r\n    // 获取当前点击单位\r\n    onSelect(key){\r\n      this.getComInfo(key[0]);\r\n     \r\n    },\r\n    getComInfo(pid){\r\n      var param = {orgId:pid}; \r\n      var _this = this;\r\n      queryData(param,'/hrOrg/getOrgMessage').then(res => {\r\n        console.log(res);\r\n        if(res.code == 0){\r\n          _this.comInfo  = Object(res.hrOrg);\r\n          if(Object.keys(_this.comInfo).length){\r\n            _this.isSelect = true;\r\n            _this.pid = pid;\r\n          } else {\r\n            _this.isSelect = false;\r\n          }\r\n        } \r\n      });\r\n    },\r\n    onExpand(expandedKeys) {\r\n      //console.log(expandedKeys);\r\n      this.expandedKeys = expandedKeys\r\n      this.autoExpandParent = false\r\n    },\r\n    // 搜索\r\n    onChange(e) {\r\n      const value = e.target.value\r\n\r\n      const expandedKeys = this.orgList\r\n        .map(item => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return this.getParentKey(item.title, this.orgTree)\r\n          }\r\n          return null\r\n        })\r\n        .filter((item, i, self) => item && self.indexOf(item) === i)\r\n      Object.assign(this, {\r\n        expandedKeys,\r\n        searchValue: value,\r\n        autoExpandParent: true\r\n      })\r\n    },\r\n    // 定位树形结构的数据\r\n    getParentKey(title, tree) {\r\n      let parentKey = 0\r\n      for (let i = 0; i < tree.length; i++) {\r\n        const node = tree[i]\r\n        if (node.children) {\r\n          if (node.children.some(item => item.title === title)) {\r\n            parentKey = node.key\r\n          } else if (this.getParentKey(title, node.children)) {\r\n            parentKey = this.getParentKey(title, node.children)\r\n          }\r\n        }\r\n      }\r\n      return parentKey\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.ant-tree{\r\n  line-height: 2.3rem;\r\n}\r\n.ant-layout-content{\r\n  background: #fff;\r\n}\r\n.custom-tree {\r\n  /deep/ .ant-menu-item-group-title {\r\n    position: relative;\r\n    &:hover {\r\n      .btn {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/ .ant-menu-item {\r\n    &:hover {\r\n      .btn {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/ .btn {\r\n    display: none;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 10px;\r\n    width: 20px;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    z-index: 1050;\r\n\r\n    &:hover {\r\n      transform: scale(1.2);\r\n      transition: 0.5s all;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}