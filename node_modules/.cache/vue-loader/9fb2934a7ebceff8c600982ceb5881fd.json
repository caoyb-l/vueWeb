{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\account\\settings\\Custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\account\\settings\\Custom.vue","mtime":1562294713097},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["\r\nimport { colorList } from '@/components/SettingDrawer/settingConfig'\r\nimport ASwitch from 'ant-design-vue/es/switch'\r\nimport AList from 'ant-design-vue/es/list'\r\nimport AListItem from 'ant-design-vue/es/list/Item'\r\nimport { mixin } from '@/utils/mixin'\r\n\r\nconst Meta = AListItem.Meta\r\n\r\nexport default {\r\n  components: {\r\n    AListItem,\r\n    AList,\r\n    ASwitch,\r\n    Meta\r\n  },\r\n  mixins: [mixin],\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  filters: {\r\n    themeFilter (theme) {\r\n      const themeMap = {\r\n        'dark': '暗色',\r\n        'light': '白色'\r\n      }\r\n      return themeMap[theme]\r\n    }\r\n  },\r\n  methods: {\r\n    colorFilter (color) {\r\n      const c = colorList.filter(o => o.color === color)[0]\r\n      return c && c.key\r\n    },\r\n\r\n    onChange (checked) {\r\n      if (checked) {\r\n        this.$store.dispatch('ToggleTheme', 'dark')\r\n      } else {\r\n        this.$store.dispatch('ToggleTheme', 'light')\r\n      }\r\n    }\r\n  },\r\n  render () {\r\n    return (\r\n      <AList itemLayout=\"horizontal\">\r\n        <AListItem>\r\n          <Meta>\r\n            <a slot=\"title\">风格配色</a>\r\n            <span slot=\"description\">\r\n                整体风格配色设置\r\n            </span>\r\n          </Meta>\r\n          <div slot=\"actions\">\r\n            <ASwitch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" defaultChecked={this.navTheme === 'dark' && true || false} onChange={this.onChange} />\r\n          </div>\r\n        </AListItem>\r\n        <AListItem>\r\n          <Meta>\r\n            <a slot=\"title\">主题色</a>\r\n            <span slot=\"description\">\r\n                页面风格配色： <a domPropsInnerHTML={ this.colorFilter(this.primaryColor) }/>\r\n            </span>\r\n          </Meta>\r\n        </AListItem>\r\n      </AList>\r\n    )\r\n  }\r\n}\r\n",{"version":3,"sources":["Custom.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Custom.vue","sourceRoot":"src/views/account/settings","sourcesContent":["<script>\r\nimport { colorList } from '@/components/SettingDrawer/settingConfig'\r\nimport ASwitch from 'ant-design-vue/es/switch'\r\nimport AList from 'ant-design-vue/es/list'\r\nimport AListItem from 'ant-design-vue/es/list/Item'\r\nimport { mixin } from '@/utils/mixin'\r\n\r\nconst Meta = AListItem.Meta\r\n\r\nexport default {\r\n  components: {\r\n    AListItem,\r\n    AList,\r\n    ASwitch,\r\n    Meta\r\n  },\r\n  mixins: [mixin],\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  filters: {\r\n    themeFilter (theme) {\r\n      const themeMap = {\r\n        'dark': '暗色',\r\n        'light': '白色'\r\n      }\r\n      return themeMap[theme]\r\n    }\r\n  },\r\n  methods: {\r\n    colorFilter (color) {\r\n      const c = colorList.filter(o => o.color === color)[0]\r\n      return c && c.key\r\n    },\r\n\r\n    onChange (checked) {\r\n      if (checked) {\r\n        this.$store.dispatch('ToggleTheme', 'dark')\r\n      } else {\r\n        this.$store.dispatch('ToggleTheme', 'light')\r\n      }\r\n    }\r\n  },\r\n  render () {\r\n    return (\r\n      <AList itemLayout=\"horizontal\">\r\n        <AListItem>\r\n          <Meta>\r\n            <a slot=\"title\">风格配色</a>\r\n            <span slot=\"description\">\r\n                整体风格配色设置\r\n            </span>\r\n          </Meta>\r\n          <div slot=\"actions\">\r\n            <ASwitch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" defaultChecked={this.navTheme === 'dark' && true || false} onChange={this.onChange} />\r\n          </div>\r\n        </AListItem>\r\n        <AListItem>\r\n          <Meta>\r\n            <a slot=\"title\">主题色</a>\r\n            <span slot=\"description\">\r\n                页面风格配色： <a domPropsInnerHTML={ this.colorFilter(this.primaryColor) }/>\r\n            </span>\r\n          </Meta>\r\n        </AListItem>\r\n      </AList>\r\n    )\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}