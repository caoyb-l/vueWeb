{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/AddOrgRobotApp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/AddOrgRobotApp.vue","mtime":1586590280103},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport { STable, Ellipsis } from '@/components'\nexport default {\n  components: {\n    STable,\n    Ellipsis\n  },\n  data() {\n    return {\n      orgNames: [],\n      robotVersionType: [],\n      selectCmd: '',\n      robotVersionId: '',\n      showEditCmd: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      queryParam: { code: '' },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: 'APP名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '版本描述',\n          dataIndex: 'contents',\n          scopedSlots: { customRender: 'contents' }\n        },\n        {\n          title: '校验码',\n          dataIndex: 'code'\n        }\n      ],\n      // // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        if (this.queryParam.code == '') {\n          this.queryParam.code = '1|1|1|1'\n        }\n        return queryData(Object.assign(parameter, this.queryParam), '/RobotVersion/queryRobotVersionMsg').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          type: 'radio',\n          onSelect: this.onSelectChange\n        }\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {\n    this.handleOrgList()\n  },\n  methods: {\n    getRobotVersionType(value) {\n      // 初始化版本类型\n      this.form.setFieldsValue({\n        code: ''\n      })\n      // 初始化列表\n      this.queryParam.code = ''\n      this.$refs.table.refresh()\n      var param = { orgId: value }\n      var _this = this\n      queryData(param, '/RobotVersion/getRobotVersionType').then(res => {\n        console.log(res.result)\n        _this.robotVersionType = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 获取单位下的单位\n    handleOrgList() {\n      const id = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: id }\n      var _this = this\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    getRobotApp(value) {\n      this.queryParam.code = value\n      this.$refs.table.refresh()\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 选择机器人\n    onSelectChange(record, selected, nativeEvent) {\n      console.log(record, selected)\n      if (selected) {\n        this.robotVersionId = record.id\n        console.log(this.robotVersionId)\n      }\n    },\n    add() {\n      this.form.resetFields()\n      this.visible = true\n      this.queryParam.code = ''\n      this.robotVersionId = ''\n      this.robotVersionType = []\n    },\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            robotVersion: this.robotVersionId\n          }\n          queryData({ ...param, ...values }, '/OrgRobotVersion/addOrgRobotVersionMsg').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('新建成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["AddOrgRobotApp.vue"],"names":[],"mappingsfile":"AddOrgRobotApp.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <!-- 新增弹框 -->\n  <a-modal\n    title=\"新建\"\n    style=\"top: 20px;\"\n    :width=\"'70%'\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    :destroyOnClose=\"true\"\n    :maskClosable=\"false\"\n    :keyboard=\"true\"\n    v-preventReClick\n  >\n    <a-form :form=\"form\">\n      <a-form-item label=\"单位名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择所属单位\"\n          optionFilterProp=\"children\"\n          :filterOption=\"filterOption\"\n          @change=\"getRobotVersionType\"\n          v-decorator=\"[\n            'orgId',\n            {rules: [{ required: true, message: '请选择' }]}\n          ]\"\n        >\n          <a-select-option\n            v-for=\"(item ,key) in orgNames\"\n            :key=\"key\"\n            :value=\"item.id\"\n          >{{ item.name }}</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"版本类型\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择版本类型\"\n          optionFilterProp=\"children\"\n          :filterOption=\"filterOption\"\n          @change=\"getRobotApp\"\n          v-decorator=\"[\n            'code',\n            {rules: [{required: true, message: '选择版本类型' }]}\n          ]\"\n        >\n          <a-select-option\n            v-for=\"(item,key) in robotVersionType\"\n            :key=\"key\"\n            :value=\"item.code\"\n            :disabled=\"item.isDel?true:false\"\n          >{{ item.name }}</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"选择APP版本\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <s-table\n          ref=\"table\"\n          size=\"middle\"\n          rowKey=\"id\"\n          :columns=\"columns\"\n          :data=\"loadData\"\n          :alert=\"options.alert\"\n          :rowSelection=\"options.rowSelection\"\n          showPagination=\"auto\"\n        >\n          <!-- 表单文字过长，省略展示文字内容 -->\n          <span slot=\"contents\" slot-scope=\"text\">\n            <ellipsis :length=\"10\" tooltip>{{ text }}</ellipsis>\n          </span>\n          <span slot=\"name\" slot-scope=\"text\">\n            <ellipsis :length=\"10\" tooltip>{{ text }}</ellipsis>\n          </span>\n          <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n        </s-table>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { queryData } from '@/api/common'\nimport { STable, Ellipsis } from '@/components'\nexport default {\n  components: {\n    STable,\n    Ellipsis\n  },\n  data() {\n    return {\n      orgNames: [],\n      robotVersionType: [],\n      selectCmd: '',\n      robotVersionId: '',\n      showEditCmd: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      queryParam: { code: '' },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: 'APP名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '版本描述',\n          dataIndex: 'contents',\n          scopedSlots: { customRender: 'contents' }\n        },\n        {\n          title: '校验码',\n          dataIndex: 'code'\n        }\n      ],\n      // // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        if (this.queryParam.code == '') {\n          this.queryParam.code = '1|1|1|1'\n        }\n        return queryData(Object.assign(parameter, this.queryParam), '/RobotVersion/queryRobotVersionMsg').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          type: 'radio',\n          onSelect: this.onSelectChange\n        }\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {\n    this.handleOrgList()\n  },\n  methods: {\n    getRobotVersionType(value) {\n      // 初始化版本类型\n      this.form.setFieldsValue({\n        code: ''\n      })\n      // 初始化列表\n      this.queryParam.code = ''\n      this.$refs.table.refresh()\n      var param = { orgId: value }\n      var _this = this\n      queryData(param, '/RobotVersion/getRobotVersionType').then(res => {\n        console.log(res.result)\n        _this.robotVersionType = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 获取单位下的单位\n    handleOrgList() {\n      const id = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: id }\n      var _this = this\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    getRobotApp(value) {\n      this.queryParam.code = value\n      this.$refs.table.refresh()\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 选择机器人\n    onSelectChange(record, selected, nativeEvent) {\n      console.log(record, selected)\n      if (selected) {\n        this.robotVersionId = record.id\n        console.log(this.robotVersionId)\n      }\n    },\n    add() {\n      this.form.resetFields()\n      this.visible = true\n      this.queryParam.code = ''\n      this.robotVersionId = ''\n      this.robotVersionType = []\n    },\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            robotVersion: this.robotVersionId\n          }\n          queryData({ ...param, ...values }, '/OrgRobotVersion/addOrgRobotVersionMsg').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('新建成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"]}]}