{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobot.vue","mtime":1582112813745},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport moment from 'moment'\nexport default {\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      orgNames: [],\n      editData: '',\n      orgId: ''\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    moment,\n    // 获取该用户下的所属单位\n    handleOrgLists () {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: orgId }\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error('获取单位数据', res.message)\n        }\n      }).catch((err) => console.log(err))\n    },\n    add (record) {\n      this.form.resetFields()\n      this.orgId = record.orgId\n      console.log('表单的值人脸时间应该' + this.editData.faceTime);\n      this.editData = record\n      this.visible = true\n      this.handleOrgLists()\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = { code: this.editData.code, name: values.name, validity: values.validity, faceTime: values.faceTime, orgId: this.orgId }\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/robotInfo/save').then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('修改成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n              // 重置输入框内容\n              _this.form.resetFields()\n            })\n            this.visible = false\n            this.confirmLoading = false\n            this.$emit('ok', values)\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false\n      this.editData = {}\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  }\n}\n",{"version":3,"sources":["EditRobot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditRobot.vue","sourceRoot":"src/views/robot/modules","sourcesContent":["<template>\n  <!-- 编辑弹框 -->\n      <a-modal\n      title=\"编辑\"\n      style=\"top: 20px;\"\n      :width=\"600\"\n      v-model=\"visible\"\n      @ok=\"handleSubmit\"\n    >\n    <a-form :form=\"form\">\n      <a-form-item\n        label=\"机器人名称\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-input\n          placeholder=\"机器人名称\"\n          v-decorator=\"[\n            'name',\n            {\n              rules: [{ required: true, message: '请输入机器人名称' }],\n              initialValue: editData.name,\n            }]\"\n          />\n      </a-form-item>\n      <a-form-item\n        label=\"所属单位\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择所属单位\"\n          optionFilterProp=\"children\"\n          v-decorator=\"[\n            'orgId',\n            {rules: [{ required: true, message: '请选择' }],\n            initialValue: editData.orgName}\n          ]\"\n        >\n          <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\n            {{item.name}}\n          </a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item\n        label=\"有效截止时间(年)\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-input\n          placeholder=\"有效截止时间\"\n          v-decorator=\"[\n            'validity',\n            {\n              rules: [{ required: true, message: '请输入有效截止时间' }],\n              initialValue:editData.validity\n            }\n            ]\"\n          />\n      </a-form-item>\n      <a-form-item\n        label=\"人脸失效时间(小时)\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-input\n          v-decorator=\"[\n            'faceTime',\n            {rules: [{required:true, message: '请输入人脸失效时间' }],\n            initialValue: editData.faceTime}\n          ]\"\n          placeholder=\"人脸失效时间\"\n           />\n      </a-form-item>\n    </a-form>\n    </a-modal>\n</template>\n\n<script>\nimport { queryData } from '@/api/common'\nimport moment from 'moment'\nexport default {\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      orgNames: [],\n      editData: '',\n      orgId: ''\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    moment,\n    // 获取该用户下的所属单位\n    handleOrgLists () {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: orgId }\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error('获取单位数据', res.message)\n        }\n      }).catch((err) => console.log(err))\n    },\n    add (record) {\n      this.form.resetFields()\n      this.orgId = record.orgId\n      console.log('表单的值人脸时间应该' + this.editData.faceTime);\n      this.editData = record\n      this.visible = true\n      this.handleOrgLists()\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = { code: this.editData.code, name: values.name, validity: values.validity, faceTime: values.faceTime, orgId: this.orgId }\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/robotInfo/save').then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('修改成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n              // 重置输入框内容\n              _this.form.resetFields()\n            })\n            this.visible = false\n            this.confirmLoading = false\n            this.$emit('ok', values)\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false\n      this.editData = {}\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  }\n}\n</script>\n"]}]}