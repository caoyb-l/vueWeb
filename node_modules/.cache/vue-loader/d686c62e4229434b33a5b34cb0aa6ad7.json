{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/EditUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/EditUser.vue","mtime":1587436453633},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData, addData } from '@/api/common'\n\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n\n      form: this.$form.createForm(this),\n      orgNames: [],\n      roleNames: [],\n      editData: {},\n      org: 0,\n      role: 0,\n      isDel: 0\n    }\n  },\n  created() {\n    this.handleRoleList()\n    this.handleOrgList()\n  },\n  methods: {\n    // 获取角色\n    handleRoleList() {\n      var _this = this\n      var roleId = JSON.parse(localStorage.getItem('user')).roleId\n      queryData({ role: roleId }, '/userManage/getAllSysRole').then(res => {\n        console.log(res)\n        _this.roleNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 获取单位下的单位\n    handleOrgList() {\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: orgId }\n      var _this = this\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    add(record) {\n      console.log(record)\n      this.form.resetFields()\n      this.org = record.org\n      this.role = record.role\n      this.isDel = record.isDel\n      this.visible = true\n      this.editData = record\n    },\n    handleChange(value) {\n      this.isDel = value\n    },\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          values.role = Number.isInteger(values.role) ? values.role : this.role\n          values.org = Number.isInteger(values.org) ? values.org : this.org\n          values.isDel = Number.isInteger(values.isDel) ? values.isDel : this.isDel\n          var param = Object.assign(values, { id: this.editData.id })\n          var _this = this\n          setTimeout(() => {\n            addData(param, '/userManage/editUserMsg').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('修改成功')\n                // 重置输入框内容\n                _this.form.resetFields()\n                this.visible = false\n                this.confirmLoading = false\n                this.$emit('ok', values)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  }\n}\n",null]}