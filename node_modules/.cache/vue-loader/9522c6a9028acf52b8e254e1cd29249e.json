{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\dashboard\\Analysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\dashboard\\Analysis.vue","mtime":1562294713099},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1562295154253},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport moment from 'moment'\r\nimport { ChartCard, MiniArea, MiniBar, MiniProgress, RankList, Bar, Trend, NumberInfo, MiniSmoothArea } from '@/components'\r\nimport { mixinDevice } from '@/utils/mixin'\r\n\r\nconst barData = []\r\nconst barData2 = []\r\nfor (let i = 0; i < 12; i += 1) {\r\n  barData.push({\r\n    x: `${i + 1}月`,\r\n    y: Math.floor(Math.random() * 1000) + 200\r\n  })\r\n  barData2.push({\r\n    x: `${i + 1}月`,\r\n    y: Math.floor(Math.random() * 1000) + 200\r\n  })\r\n}\r\n\r\nconst rankList = []\r\nfor (let i = 0; i < 7; i++) {\r\n  rankList.push({\r\n    name: '白鹭岛 ' + (i + 1) + ' 号店',\r\n    total: 1234.56 - i * 100\r\n  })\r\n}\r\n\r\nconst searchUserData = []\r\nfor (let i = 0; i < 7; i++) {\r\n  searchUserData.push({\r\n    x: moment().add(i, 'days').format('YYYY-MM-DD'),\r\n    y: Math.ceil(Math.random() * 10)\r\n  })\r\n}\r\nconst searchUserScale = [\r\n  {\r\n    dataKey: 'x',\r\n    alias: '时间'\r\n  },\r\n  {\r\n    dataKey: 'y',\r\n    alias: '用户数',\r\n    min: 0,\r\n    max: 10\r\n  }]\r\n\r\nconst searchTableColumns = [\r\n  {\r\n    dataIndex: 'index',\r\n    title: '排名',\r\n    width: 90\r\n  },\r\n  {\r\n    dataIndex: 'keyword',\r\n    title: '搜索关键词'\r\n  },\r\n  {\r\n    dataIndex: 'count',\r\n    title: '用户数'\r\n  },\r\n  {\r\n    dataIndex: 'range',\r\n    title: '周涨幅',\r\n    align: 'right',\r\n    sorter: (a, b) => a.range - b.range,\r\n    scopedSlots: { customRender: 'range' }\r\n  }\r\n]\r\nconst searchData = []\r\nfor (let i = 0; i < 50; i += 1) {\r\n  searchData.push({\r\n    index: i + 1,\r\n    keyword: `搜索关键词-${i}`,\r\n    count: Math.floor(Math.random() * 1000),\r\n    range: Math.floor(Math.random() * 100),\r\n    status: Math.floor((Math.random() * 10) % 2)\r\n  })\r\n}\r\n\r\nconst DataSet = require('@antv/data-set')\r\n\r\nconst sourceData = [\r\n  { item: '家用电器', count: 32.2 },\r\n  { item: '食用酒水', count: 21 },\r\n  { item: '个护健康', count: 17 },\r\n  { item: '服饰箱包', count: 13 },\r\n  { item: '母婴产品', count: 9 },\r\n  { item: '其他', count: 7.8 }\r\n]\r\n\r\nconst pieScale = [{\r\n  dataKey: 'percent',\r\n  min: 0,\r\n  formatter: '.0%'\r\n}]\r\n\r\nconst dv = new DataSet.View().source(sourceData)\r\ndv.transform({\r\n  type: 'percent',\r\n  field: 'count',\r\n  dimension: 'item',\r\n  as: 'percent'\r\n})\r\nconst pieData = dv.rows\r\n\r\nexport default {\r\n  name: 'Analysis',\r\n  mixins: [mixinDevice],\r\n  components: {\r\n    ChartCard,\r\n    MiniArea,\r\n    MiniBar,\r\n    MiniProgress,\r\n    RankList,\r\n    Bar,\r\n    Trend,\r\n    NumberInfo,\r\n    MiniSmoothArea\r\n  },\r\n  data () {\r\n    return {\r\n      loading: true,\r\n      rankList,\r\n\r\n      // 搜索用户数\r\n      searchUserData,\r\n      searchUserScale,\r\n      searchTableColumns,\r\n      searchData,\r\n\r\n      barData,\r\n      barData2,\r\n\r\n      //\r\n      pieScale,\r\n      pieData,\r\n      sourceData,\r\n      pieStyle: {\r\n        stroke: '#fff',\r\n        lineWidth: 1\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    setTimeout(() => {\r\n      this.loading = !this.loading\r\n    }, 1000)\r\n  }\r\n}\r\n",null]}