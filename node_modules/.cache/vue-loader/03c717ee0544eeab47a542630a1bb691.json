{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/ChgUserPwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/ChgUserPwd.vue","mtime":1587436453736},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nconst levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n}\nconst levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n}\nconst levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n}\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      }\n    }\n  },\n  computed: {\n    passwordLevelClass() {\n      return levelClass[this.state.passwordLevel]\n    },\n    passwordLevelName() {\n      return levelNames[this.state.passwordLevel]\n    },\n    passwordLevelColor() {\n      return levelColor[this.state.passwordLevel]\n    }\n  },\n  methods: {\n    add() {\n      this.form.resetFields()\n      this.visible = true\n      this.state.passwordLevelChecked = false\n    },\n    handlePasswordInputClick() {\n      this.state.passwordLevelChecked = true\n    },\n    handlePasswordLevel(rule, value, callback) {\n      let level = 0\n      if (value.length < 6) {\n        callback(new Error('长度不能小于6位'))\n      }\n      // 判断这个字符串中有没有数字\n      if (/[0-9]/.test(value)) {\n        level++\n      }\n      // 判断字符串中有没有字母\n      if (/[a-zA-Z]/.test(value)) {\n        level++\n      }\n      // 判断字符串中有没有特殊符号\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++\n      }\n      this.state.passwordLevel = level\n      this.state.percent = level * 30\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100\n        }\n        callback()\n      } else {\n        if (level === 0) {\n          this.state.percent = 10\n        }\n        callback(new Error('密码强度不够'))\n      }\n    },\n    // handlePasswordLevel (rule, value, callback) {\n    //   // 判断这个字符串是否是数字\n    //   if (!(/^[0-9]+$/.test(value)) || value.length < 6) {\n    //     callback(new Error('必须是数字,且长度不能小于6位'))\n    //   }\n    //   callback()\n    // },\n    handlePasswordCheck(rule, value, callback) {\n      const password = this.form.getFieldValue('password')\n      console.log('value', value)\n      if (value === undefined) {\n        callback(new Error('请输入密码'))\n      }\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'))\n      }\n      callback()\n    },\n    handleSubmit() {\n      console.log('提交')\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        console.log(!errors)\n        if (!errors) {\n          var userId = JSON.parse(localStorage.getItem('user')).id\n          var param = Object.assign(values, { id: userId })\n          console.log(param)\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/userManage/chgPassword').then(res => {\n              // eslint-disable-next-line eqeqeq\n              if (res.code == 0) {\n                _this.$message.success('密码修改成功，请重新登录')\n                this.visible = false\n                this.confirmLoading = false\n                this.$emit('ok', values)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",null]}