{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\components\\Result\\Result.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\components\\Result\\Result.vue","mtime":1562294713057},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nconst resultEnum = ['success', 'error']\r\n\r\nexport default {\r\n  name: 'Result',\r\n  props: {\r\n    /** @Deprecated */\r\n    isSuccess: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: resultEnum[0],\r\n      validator (val) {\r\n        return (val) => resultEnum.includes(val)\r\n      }\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    description: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  computed: {\r\n    localIsSuccess: function () {\r\n      return this.type === resultEnum[0]\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Result.vue","sourceRoot":"src/components/Result","sourcesContent":["<template>\r\n  <div class=\"result\">\r\n    <div>\r\n      <a-icon :class=\"{ 'icon': true, [`${type}`]: true }\" :type=\"localIsSuccess ? 'check-circle' : 'close-circle'\"/>\r\n    </div>\r\n    <div class=\"title\">\r\n      <slot name=\"title\">\r\n        {{ title }}\r\n      </slot>\r\n    </div>\r\n    <div class=\"description\">\r\n      <slot name=\"description\">\r\n        {{ description }}\r\n      </slot>\r\n    </div>\r\n    <div class=\"extra\" v-if=\"$slots.default\">\r\n      <slot></slot>\r\n    </div>\r\n    <div class=\"action\" v-if=\"$slots.action\">\r\n      <slot name=\"action\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst resultEnum = ['success', 'error']\r\n\r\nexport default {\r\n  name: 'Result',\r\n  props: {\r\n    /** @Deprecated */\r\n    isSuccess: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: resultEnum[0],\r\n      validator (val) {\r\n        return (val) => resultEnum.includes(val)\r\n      }\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    description: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  computed: {\r\n    localIsSuccess: function () {\r\n      return this.type === resultEnum[0]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .result {\r\n    text-align: center;\r\n    width: 72%;\r\n    margin: 0 auto;\r\n    padding: 24px 0 8px;\r\n\r\n    .icon {\r\n      font-size: 72px;\r\n      line-height: 72px;\r\n      margin-bottom: 24px;\r\n    }\r\n    .success {\r\n      color: #52c41a;\r\n    }\r\n    .error {\r\n      color: red;\r\n    }\r\n    .title {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, .85);\r\n      font-weight: 500;\r\n      line-height: 32px;\r\n      margin-bottom: 16px;\r\n    }\r\n    .description {\r\n      font-size: 14px;\r\n      line-height: 22px;\r\n      color: rgba(0, 0, 0, 0.45);\r\n      margin-bottom: 24px;\r\n    }\r\n    .extra {\r\n      background: #fafafa;\r\n      padding: 24px 40px;\r\n      border-radius: 2px;\r\n      text-align: left;\r\n    }\r\n    .action {\r\n      margin-top: 32px;\r\n    }\r\n  }\r\n\r\n  .mobile {\r\n    .result {\r\n      width: 100%;\r\n      margin: 0 auto;\r\n      padding: unset;\r\n    }\r\n  }\r\n</style>\r\n"]}]}