{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/Business.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/Business.vue","mtime":1584669526506},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { PageView } from '@/layouts'\nimport { STable } from '@/components'\nimport CreateQues from './modules/CreateQues'\nimport EditQues from './modules/EditQues'\nimport AllSkills from './modules/AllSkills'\nimport EditSkills from './modules/EditSkills'\nimport CmdList from '../Cmd'\nimport { queryData } from '@/api/common'\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateQues,\n    EditQues,\n    AllSkills,\n    EditSkills,\n    CmdList\n  },\n  data() {\n    return {\n      headers: {\n        authorization: 'authorization-text'\n      },\n      skillsList: [],\n      isShowList: true,\n      mapId: '',\n      mapList: [],\n      currectSel: 0, //当前业务id\n      businessName: '',\n      skillName: '',\n      // 业务表头\n      columnList: [\n        {\n          title: '业务名称',\n          dataIndex: 'title',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      //业务获取数据\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId\n        var param = { type: 1, orgId: orgId }\n        return queryData(Object.assign(parameter, this.queryParam, param), '/skills/getSkillsList').then(res => {\n          return res.result\n        })\n      },\n\n      // 技能表头\n      columnSkillList: [\n        {\n          title: '技能列表',\n          dataIndex: 'keywords',\n          scopedSlots: { customRender: 'keywords' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n\n      //点击业务获取技能列表\n      loadSkillOptionData: parameter => {\n        this.formVisible = false //点击业务以后重新隐藏表单\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId\n        var param = { skillsId: this.currectSel }\n        return queryData(Object.assign(parameter, this.queryParam, param), '/skillsOption/getSkillsOptionList').then(\n          res => {\n            return res.result\n          }\n        )\n        con\n      },\n\n      //业务问题选取的id集和\n      skillsIds: [],\n      optionAlertShow: false,\n      //技能问题选区的id集和\n      skillsOptionIds: [],\n      optionAlertShow2: false,\n\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      options2: {\n        alert: false,\n        rowSelection: null\n      },\n      labelCol: {\n        xs: { span: 35 },\n        sm: { span: 10 }\n      },\n      wrapperCol: {\n        xs: { span: 35 },\n        sm: { span: 10 }\n      },\n      form: this.$form.createForm(this),\n      formVisible: false,\n      showCmd: false,\n      fileList: [],\n      cmdList: [],\n      editSkills: { id: '', contents: '', netType: '', url: '', cmdName: '', cmd: '', map: '', mapName: '' }\n    }\n  },\n  created() {\n    this.getMap()\n    this.getCmd()\n  },\n  computed: {\n    title() {\n      return this.$route.meta.title\n    }\n  },\n\n  methods: {\n    //删除业务技能\n    deleteSkillsOption(record) {\n      var _this = this\n      console.log(record)\n      return new Promise((resolve, reject) => {\n        setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n        var id = { entityIds: [record.id] }\n        queryData(id, '/skillsOption/delete').then(res => {\n          if (res.code == 0) {\n            _this.$message.success('以删除')\n            _this.$refs.skillTable.refresh()\n          } else {\n            _this.$message.error(res.message)\n          }\n        })\n      }).catch(err => console.log(err))\n    },\n\n    updateCmd() {\n      let mapId = this.editSkills.map == undefined ? 0 : this.editSkills.map\n      console.log('地图ID' + mapId + '/场景名称' + this.skillName)\n      this.$refs.cmd.show(this.businessName + this.skillName, mapId, 0)\n    },\n    //清空动作集\n    delCmd() {\n      var _this = this\n      queryData({ entityId: this.editSkills.id }, '/skillsOption/deleteCmd').then(res => {\n        if (res.code == 0) {\n          _this.$message.success('删除成功')\n          _this.editSkills.map = ''\n          _this.editSkills.cmd = ''\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 获取编辑好的动作集id并赋值\n    getCmdId(cmd) {\n      this.getCmd()\n      console.log('-------渲染以后的值', cmd)\n      this.editSkills.cmd = parseInt(cmd)\n    },\n    //动作集列表\n    getCmd() {\n      let org = JSON.parse(localStorage.getItem('user')).orgId\n      let _this = this\n      queryData({ orgId: org }, '/cmdCollection/getCmdListByOrg').then(res => {\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    handleSubmit() {\n      this.showCmd = false\n    },\n\n    onSelectChange(skillsIds) {\n      this.skillsIds = skillsIds\n    },\n    onSelectChange2(skillsOptionIds) {\n      this.skillsOptionIds = skillsOptionIds\n    },\n\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.skillsIds = []\n            }\n          },\n          rowSelection: {\n            skillsIds: this.skillsIds,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    tableOption2() {\n      if (!this.optionAlertShow2) {\n        this.options2 = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.skillsOptionIds = []\n            }\n          },\n          rowSelection: {\n            skillsOptionIds: this.skillsOptionIds,\n            onChange: this.onSelectChange2,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow2 = true\n      } else {\n        this.options2 = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow2 = false\n      }\n    },\n\n    // 业务table选取id集和\n    showList(id, name) {\n      this.businessName = name\n      this.currectSel = id\n      this.isShowList = true\n      //this.showTable(id)\n      this.$refs.skillTable.refresh(true)\n    },\n    //刷新技能列表\n    skillTableRefresh() {\n      this.$refs.skillTable.refresh(true)\n    },\n    handleRefresh() {\n      this.$refs.table.refresh()\n    },\n    handleEditVisible(record) {\n      this.$refs.editQues.add(record)\n    },\n    // 批量删除业务方法\n    deleteSkillsList() {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = { entityIds: _this.skillsIds }\n            queryData(id, '/skills/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n                _this.currectSel = 0\n                _this.$refs.skillTable.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(err => console.log(err))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n\n    // 批量删除技能\n    deleteSkillsOptionList() {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = { entityIds: _this.skillsOptionIds }\n            queryData(id, '/skillsOption/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.skillTable.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(err => console.log(err))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n\n    //技能编辑点击\n    handleEditSkillVisible(record) {\n      console.log(record)\n      this.skillName = record.keywords\n      this.show(record)\n    },\n\n    // 文件上传\n    handleChangeFile(info) {\n      let fileList = [...info.fileList]\n      // fileList = fileList.slice(-1)\n      this.fileList = fileList\n      if (info.file.status == 'uploading') {\n      }\n      if (info.file.status === 'done') {\n        if (info.file.response.code == 0) {\n          this.$message.success(`${info.file.name} 上传成功`)\n        } else {\n          this.fileList.splice(-1, 1)\n          this.$message.success(`${info.file.response.message}`)\n        }\n      } else if (info.file.status === 'error') {\n        this.$message.error(`${info.file.name} 上传失败.`)\n      }\n    },\n\n    // 删除文件\n    handleRemoveFile(file) {\n      let _this = this\n      alert(file.response.fileUrl)\n      queryData({ fileUrl: file.response.fileUrl }, '/skillsOption/delFile').then(res => {\n        if (res.code == 0) {\n          _this.$message.success(res.message)\n          return true\n        } else {\n          _this.$message.error(res.message)\n          return false\n        }\n      })\n    },\n\n    handlePreview(file) {\n      window.open(file.response.fileUrl)\n    },\n\n    //获取地图列表\n    getMap() {\n      let org = JSON.parse(localStorage.getItem('user')).orgId\n      queryData({ orgId: org }, '/robotMapLib/getRobotMapLibList').then(res => {\n        console.log('-----------getMap', res)\n        this.mapList = res.result\n      })\n    },\n\n    // 获取技能详情(带文件)\n    show(record) {\n      let _this = this\n      this.editSkills.fileNameList = []\n      this.formVisible = true\n      let param = { entityId: record.id }\n      queryData(param, '/skillsOption/getSkillsOption').then(res => {\n        if (res.code == 0) {\n          _this.editSkills = res.result\n          _this.fileList = res.resultFile\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    // 提交编辑好的技能from表单\n    handleFormSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      var _this = this\n      validateFields((errors, values) => {\n        if (!errors) {\n          let user = JSON.parse(localStorage.getItem('user')).id\n          let org = JSON.parse(localStorage.getItem('user')).orgId\n          var param = _this.editSkills\n          param.fileNameList = _this.fileList.map((value, index) => {\n            return {\n              fileUrl: value.response.fileUrl,\n              type: value.response.type\n            }\n          })\n          values.org = org\n          values.user = user\n          queryData({ ...param, ...values }, '/skillsOption/updateContents').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('编辑成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n          })\n        } else {\n          // this.confirmLoading = false\n        }\n      })\n    }\n  }\n}\n",null]}