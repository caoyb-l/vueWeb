{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditCellcmd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditCellcmd.vue","mtime":1587436453711},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { addData ,queryData  } from '@/api/common'\n\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      editData:{},\n      cmdTypeList: [],\n      typeId:0,\n    }\n  },\n  created(){\n    this.getCmdType()\n  },\n  methods: {\n    add(record) {\n      console.log(record)\n      this.visible = true,\n      this.typeId = record.typeId;\n      this.editData = record;\n    },\n     // 获取单元指令类型\n    getCmdType() {\n      queryData({}, '/cmdUnitType/getCmdUnitTypeList').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          this.cmdTypeList = res.result\n        } else {\n          this.$message.error(res.message)\n        }\n      })\n    },\n    // 下拉框\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    handleSubmit() {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true;\n      validateFields((errors, values) => {\n        if (!errors) {\n          var _this = this\n          setTimeout(() => {\n            values.typeId = Number.isInteger(values.typeId) ? values.typeId : this.typeId;\n            var param = Object.assign(values,{entityId:this.editData.id})\n            addData(param,'/cmdUnit/save').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('编辑成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n                _this.visible = false\n                _this.confirmLoading = false\n                _this.$emit('ok', values);\n                // 重置输入框内容\n                _this.form.resetFields()\n            })\n\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["EditCellcmd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditCellcmd.vue","sourceRoot":"src/views/instruction/modules","sourcesContent":["<template>\n  <!-- 编辑弹框 -->\n      <a-modal\n      title=\"编辑\"\n      style=\"top: 20px;\"\n      :width=\"600\"\n      v-model=\"visible\"\n      @ok=\"handleSubmit\"\n      v-preventReClick\n      :destroyOnClose=\"true\"\n      :maskClosable = \"false\"\n    >\n    <a-form :form=\"form\">\n      <a-form-item\n        label=\"名称\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-input\n          v-decorator=\"[\n            'name',\n            {rules: [{ required: true, message: '请输入名称' }],\n            initialValue: editData.name,}\n          ]\"\n          placeholder=\"名称\" />\n      </a-form-item>\n      <a-form-item\n        label=\"单位指令类型\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n          <a-select\n            showSearch\n            placeholder=\"选择单位指令类型\"\n            optionFilterProp=\"children\"\n            :filterOption=\"filterOption\"\n            v-decorator=\"[\n              'typeId',\n              {rules: [{ required: true, message: '请选择' }],\n              initialValue:editData.typeName}\n            ]\"\n          >\n            <a-select-option v-for=\"(item ,key) in cmdTypeList\" :key=\"key\" :value=\"item.id\">\n              {{item.name}}\n            </a-select-option>\n          </a-select>\n        </a-form-item>\n    </a-form>\n    </a-modal>\n</template>\n\n<script>\nimport { addData ,queryData  } from '@/api/common'\n\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      editData:{},\n      cmdTypeList: [],\n      typeId:0,\n    }\n  },\n  created(){\n    this.getCmdType()\n  },\n  methods: {\n    add(record) {\n      console.log(record)\n      this.visible = true,\n      this.typeId = record.typeId;\n      this.editData = record;\n    },\n     // 获取单元指令类型\n    getCmdType() {\n      queryData({}, '/cmdUnitType/getCmdUnitTypeList').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          this.cmdTypeList = res.result\n        } else {\n          this.$message.error(res.message)\n        }\n      })\n    },\n    // 下拉框\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    handleSubmit() {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true;\n      validateFields((errors, values) => {\n        if (!errors) {\n          var _this = this\n          setTimeout(() => {\n            values.typeId = Number.isInteger(values.typeId) ? values.typeId : this.typeId;\n            var param = Object.assign(values,{entityId:this.editData.id})\n            addData(param,'/cmdUnit/save').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('编辑成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n                _this.visible = false\n                _this.confirmLoading = false\n                _this.$emit('ok', values);\n                // 重置输入框内容\n                _this.form.resetFields()\n            })\n\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"]}]}