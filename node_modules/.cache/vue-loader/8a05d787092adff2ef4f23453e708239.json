{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/FaceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/FaceList.vue","mtime":1583559735847},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport EditModal from './modules/EditFace'\nimport CreateModal from './modules/CreateFace'\nimport RobotCmd from './modules/RobotCmd'\nimport EditRobot from './modules/EditRobotcmd'\nimport { queryData } from '@/api/common'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    EditModal,\n    CreateModal,\n    RobotCmd,\n    EditRobot\n  },\n  data() {\n    return {\n      roleId: 0,\n      roleName: '',\n      mdl: {},\n      // 查询参数\n      queryParam: { name: '' },\n      // 表头\n      columns: [\n        // {\n        //   title: 'id',\n        //   dataIndex: 'id'\n        // },\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '人脸名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '文件名称',\n          dataIndex: 'photo'\n        },\n        {\n          title: '照片',\n          dataIndex: 'photoUrl',\n          scopedSlots: { customRender: 'photoUrl' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'actionDate'\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, this.queryParam,{org:orgId}),'/faceManage/queryFaceMsg').then(res => {\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    handleEdit(record) {\n      this.$refs.editModal.edit(record)\n    },\n    UpdateRobotCmd(){\n      this.$message.error('修改')\n    },\n    // 删除某一个机器人命令\n    DelRobotCmd(record){\n      console.log(record);\n      var _this = this;\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.robotCode} 的动作集吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [record.id]};\n            queryData(id,'/faceManage/delRobotFace').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n    // 配置机器人动作集\n    handleRobotCmd (record) {\n      this.$refs.robotCmd.show(record);\n    },\n    handleOk() {\n      // 新增/修改 成功时，重载列表\n      this.$refs.table.refresh(true)\n    },\n    // 处理重置\n    handleReset() {\n      this.queryParam.name = ''\n      this.$refs.table.refresh()\n    },\n    // 删除\n    handleDel(record){\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [{id:record.id,photo:record.photo}]};\n            queryData(id,'/faceManage/delFaceMsg').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n  }\n}\n",{"version":3,"sources":["FaceList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FaceList.vue","sourceRoot":"src/views/face","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"6\" :sm=\"24\">\n            <a-form-item label=\"姓名\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.name\" />\n            </a-form-item>\n          </a-col>\n\n          <a-col :md=\"6\" :sm=\"24\">\n            <a-button type=\"primary\" @click=\"$refs.table.refresh()\">查询</a-button>\n            <a-button style=\"margin-left: 8px\" @click=\"handleReset()\">重置</a-button>\n            <a-button style=\"margin-left: 8px\" type=\"dashed\" icon=\"plus\"  @click=\"$refs.addModal.add()\" v-action:add>新建</a-button>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n\n    <s-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <div\n        slot=\"expandedRowRender\"\n        slot-scope=\"record\"\n        style=\"margin: 0\">\n        <a-row\n          :gutter=\"24\"\n          :style=\"{ marginBottom: '12px' }\">\n          <a-col :span=\"12\" v-for=\"(role, index) in record.robotFaceList\" :key=\"index\" :style=\"{ marginBottom: '12px' }\">\n            <a-col :span=\"12\">\n              编码:<span>{{ role.robotCode }}</span><br>\n              动作集：<a-tag color=\"cyan\">{{ role.cmdName }}</a-tag>\n            </a-col>\n            <a-col :span=\"1\"></a-col>\n            <a-col :span=\"11\">\n              <a-button type=\"primary\" size=\"small\" @click=\"$refs.editRobot.show(role)\" v-action:edit>修改</a-button>\n              <a-button style=\"margin-left:10px;\" type=\"danger\" size=\"small\" @click=\"DelRobotCmd(role)\" v-action:delete>删除</a-button>\n            </a-col>\n          </a-col>\n        </a-row>\n      </div>\n      <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n      <span slot=\"photoUrl\" slot-scope=\"text\">\n            <a-popover>\n                <template slot=\"content\">\n                    <img :src=\"text\" style=\"width:200px;\"   />\n                </template>\n                <a-icon type=\"appstore\" />\n            </a-popover>\n        </span>\n\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a @click=\"handleEdit(record)\" v-action:edit>编辑</a>\n        <a-divider type=\"vertical\" />\n        <a @click=\"handleDel(record)\" v-action:delete>删除</a>\n        <a-divider type=\"vertical\" />\n        <a @click=\"handleRobotCmd(record)\">配置机器人</a>\n      </span>\n    </s-table>\n\n    <edit-modal ref=\"editModal\" @ok=\"handleOk\"></edit-modal>\n    <create-modal ref=\"addModal\" @ok=\"handleOk\"></create-modal>\n    <robot-cmd   ref=\"robotCmd\" @ok=\"handleOk\"></robot-cmd>\n    <edit-robot ref=\"editRobot\" @ok=\"handleOk\" ></edit-robot>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport EditModal from './modules/EditFace'\nimport CreateModal from './modules/CreateFace'\nimport RobotCmd from './modules/RobotCmd'\nimport EditRobot from './modules/EditRobotcmd'\nimport { queryData } from '@/api/common'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    EditModal,\n    CreateModal,\n    RobotCmd,\n    EditRobot\n  },\n  data() {\n    return {\n      roleId: 0,\n      roleName: '',\n      mdl: {},\n      // 查询参数\n      queryParam: { name: '' },\n      // 表头\n      columns: [\n        // {\n        //   title: 'id',\n        //   dataIndex: 'id'\n        // },\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '人脸名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '文件名称',\n          dataIndex: 'photo'\n        },\n        {\n          title: '照片',\n          dataIndex: 'photoUrl',\n          scopedSlots: { customRender: 'photoUrl' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'actionDate'\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, this.queryParam,{org:orgId}),'/faceManage/queryFaceMsg').then(res => {\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    handleEdit(record) {\n      this.$refs.editModal.edit(record)\n    },\n    UpdateRobotCmd(){\n      this.$message.error('修改')\n    },\n    // 删除某一个机器人命令\n    DelRobotCmd(record){\n      console.log(record);\n      var _this = this;\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.robotCode} 的动作集吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [record.id]};\n            queryData(id,'/faceManage/delRobotFace').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n    // 配置机器人动作集\n    handleRobotCmd (record) {\n      this.$refs.robotCmd.show(record);\n    },\n    handleOk() {\n      // 新增/修改 成功时，重载列表\n      this.$refs.table.refresh(true)\n    },\n    // 处理重置\n    handleReset() {\n      this.queryParam.name = ''\n      this.$refs.table.refresh()\n    },\n    // 删除\n    handleDel(record){\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [{id:record.id,photo:record.photo}]};\n            queryData(id,'/faceManage/delFaceMsg').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n  }\n}\n</script>\n"]}]}