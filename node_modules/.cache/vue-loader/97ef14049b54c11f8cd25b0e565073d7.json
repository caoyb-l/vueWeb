{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/SkillsType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/SkillsType.vue","mtime":1575082307861},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport UpdateExcel from './modules/UpdateExcel'\r\nimport EditChat from './modules/EditChat'\r\nimport { queryData } from '@/api/common'\r\nconst treeData = [];\r\nexport default {\r\n  components: {\r\n    STable,\r\n    UpdateExcel,\r\n    EditChat,\r\n  },\r\n  watch: {\r\n      value(value) {\r\n        console.log(\"Id:\"+ value);\r\n        this.queryParam.skillsId = value\r\n        this.$refs.table.refresh(true)\r\n      },\r\n    },\r\n  data() {\r\n    return {\r\n      selectedItems: [],\r\n      // 查询参数\r\n      queryParam: {\r\n        skillsId: '',\r\n        keywords: ''\r\n      },\r\n      editData: {},\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        {\r\n          title: '关键词',\r\n          dataIndex: 'keywords'\r\n        },\r\n        {\r\n          title: '回答内容',\r\n          dataIndex: 'contents'\r\n        },\r\n        {\r\n          title: '网页或图片',\r\n          dataIndex: 'url'\r\n        },\r\n        {\r\n          title: '命令集',\r\n          dataIndex: 'cmdName'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        return queryData(Object.assign(parameter, this.queryParam), '/skills/getSkillsList3').then(res => {\r\n          console.log(res)\r\n          this.skills = res.result.data\r\n          return res.result\r\n        })\r\n      },\r\n      roleNames: [],\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      options: {\r\n        alert: false,\r\n        rowSelection: null\r\n      },\r\n      optionAlertShow: false,\r\n      //树\r\n      value: '',\r\n      treeData,\r\n    }\r\n  },\r\n  created() {\r\n    this.handleSkillsTypeList()\r\n  },\r\n  methods: {\r\n    // 获取单位下的单位\r\n    handleSkillsTypeList() {\r\n      let orgId = JSON.parse(localStorage.getItem('user')).orgId\r\n      var _this = this\r\n      queryData({ orgId: orgId }, '/skillsType/getSkillsTypeList').then(res => {\r\n        console.log(res)\r\n        _this.treeData = res.data\r\n        if (!res.code == 0) {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 处理新增\r\n    handleAddSubmit() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 表单重置\r\n    resetQuery() {\r\n      this.queryParam = {\r\n        skillsId:'',\r\n        keywords: ''\r\n      },\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 显示状态修改\r\n    handleAddVisible() {\r\n      this.addVisible = true\r\n    },\r\n    //修改闲聊\r\n    handleEditVisible(record) {\r\n      this.editData = record\r\n      // this.$refs.editModal.add(record)\r\n      this.$refs.EditChat.add(record)\r\n    },\r\n    //下拉框\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 搜索内容\r\n    searchData() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    deleteSkills(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.title} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = { entityIds: [record.id] }\r\n            queryData(id, '/skills/delete').then(res => {\r\n              console.log('删除用户返回值：', res)\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 批量删除\r\n    deleteSkillsIds() {\r\n      console.log(this.selectedRowKeys)\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var ids = { entityIds: [_this.selectedRowKeys][0] }\r\n\r\n            queryData(ids, '/skills/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.selectedRowKeys = []\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    //清空命令集\r\n    delCmd(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: ` <${record.title}> 将不再使用 <${record.cmdName}> 命令集`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            queryData({ entityId: record.skillsOptionId }, '/skillsOption/deleteCmd').then(res => {\r\n              console.log('删除用户返回值：', res)\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    tableOption() {\r\n      if (!this.optionAlertShow) {\r\n        this.options = {\r\n          alert: {\r\n            show: true,\r\n            clear: () => {\r\n              this.selectedRowKeys = []\r\n            }\r\n          },\r\n          rowSelection: {\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            getCheckboxProps: record => ({\r\n              props: {\r\n                disabled: record.no === 'No 2', \r\n                name: record.no\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.optionAlertShow = true\r\n      } else {\r\n        this.options = {\r\n          alert: false,\r\n          rowSelection: null\r\n        }\r\n        this.optionAlertShow = false\r\n      }\r\n    },\r\n\r\n    onSelectChange(selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    }\r\n  }\r\n}\r\n",null]}