{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/Chat.vue","mtime":1584669526507},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable, Ellipsis } from '@/components'\nimport UpdateExcel from './modules/UpdateExcel'\nimport EditChat from './modules/EditChat'\nimport CreateChat from './modules/CreateChat'\nimport { queryData } from '@/api/common'\nexport default {\n  name: 'TableList',\n  components: {\n    Ellipsis,\n    STable,\n    UpdateExcel,\n    EditChat,\n    CreateChat\n  },\n  data() {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        keywords: ''\n      },\n      // editData: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '标题',\n          dataIndex: 'title',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '回答内容',\n          dataIndex: 'contents',\n          scopedSlots: { customRender: 'contents' }\n        },\n        {\n          title: '网页或图片',\n          dataIndex: 'url',\n          scopedSlots: { customRender: 'url' }\n        },\n        {\n          title: '状态',\n          dataIndex: 'isAble',\n          scopedSlots: { customRender: 'isAble' }\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName',\n        },\n        // {\n        //   title: '是否生效',\n        //   dataIndex: 'isDel',\n\n        //   scopedSlots: { customRender: 'isDel' }\n        // },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId\n        return queryData(\n          Object.assign(parameter, { orgId: orgId, type: 2 }, this.queryParam),\n          '/skills/getSkillsList'\n        ).then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      orgNames: [],\n      roleNames: [],\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    deriveExcel() {\n      console.alert('别着急快好了😭')\n    },\n\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2',\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n\n    //回掉函数\n    handleAddSubmit() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      (this.queryParam = {\n        title: '',\n        keywords: ''\n      }),\n        this.$refs.table.refresh(true)\n    },\n    // 显示状态修改\n    handleAddVisible() {\n      this.addVisible = true\n    },\n    //修改闲聊\n    handleEditVisible(record) {\n      this.$refs.EditChat.add(record)\n    },\n    // 查询\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    mieBa() {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `等待时间可能过长，是否确认?`,\n        okText: '确认',\n        okType: 'danger',\n        cancelText: '退出',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var user = JSON.parse(localStorage.getItem('user'))\n            queryData({ org: user.orgId, user: user.id }, '/skillsOption/mieBa').then(res => {\n              console.log('同步数据后返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('res.message')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 删除\n    deleteSkills(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.title} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { entityIds: [record.id] }\n            queryData(id, '/skills/delete').then(res => {\n              console.log('删除用户返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    deleteSkillsIds() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { entityIds: [_this.selectedRowKeys][0] }\n\n            queryData(ids, '/skills/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    //清空动作集\n    delCmd(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: ` <${record.title}> 将不再使用 <${record.cmdName}> 动作集`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            queryData({ entityId: record.skillsOptionId }, '/skillsOption/deleteCmd').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",null]}