{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\Sensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\Sensor.vue","mtime":1566376233531},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport { queryData } from '@/api/common'\r\nimport CreateSensor from './modules/CreateSensor'\r\nimport EditAllSensor from './modules/EditAllSensor'\r\nimport EditSensor from './modules/EditSensor'\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    CreateSensor,\r\n    EditAllSensor,\r\n    EditSensor\r\n  },\r\n  data() {\r\n    return {\r\n      cmdList: [],\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      // 查询参数\r\n      queryParam: {\r\n        robotName: '',\r\n        triggerName: ''\r\n      },\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n\r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'robotName',\r\n          scopedSlots: { customRender: 'robotName' }\r\n        },\r\n        {\r\n          title: '触发条件',\r\n          dataIndex: 'triggerName',\r\n          scopedSlots: { customRender: 'triggerName' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        var id = JSON.parse(localStorage.getItem('user')).id\r\n        console.log('user 请求', parameter)\r\n        var params = { orgId: id }\r\n        return queryData(Object.assign(parameter, params, this.queryParam), '/supercmdTriggerRobot/list').then(res => {\r\n          console.log(res)\r\n          return res.result\r\n        })\r\n      },\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      options: {\r\n        alert: {\r\n          show: true,\r\n          clear: () => {\r\n            this.selectedRowKeys = []\r\n          }\r\n        },\r\n        rowSelection: {          \r\n          selectedRowKeys: this.selectedRowKeys,\r\n          onChange: this.onSelectChange\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return this.$route.meta.title\r\n    }\r\n  },\r\n  created() {\r\n    this.getCmdList()\r\n  },\r\n  methods: {\r\n    tableOption() {\r\n      if (!this.optionAlertShow) {\r\n        this.options = {\r\n          alert: {\r\n            show: true,\r\n            clear: () => {\r\n              this.selectedRowKeys = []\r\n            }\r\n          },\r\n          rowSelection: {\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            getCheckboxProps: record => ({\r\n              props: {\r\n                disabled: record.no === 'No 2', // Column configuration not to be checked\r\n                name: record.no\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.optionAlertShow = true\r\n      } else {\r\n        this.options = {\r\n          alert: false,\r\n          rowSelection: null\r\n        }\r\n        this.optionAlertShow = false\r\n      }\r\n    },\r\n    onSelectChange(selectedRowKeys, selectedRows) {     \r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    handleCmdChange(value) {\r\n      console.log(`selected ${value}`)\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    //获取指令列表\r\n    getCmdList() {\r\n      var _this = this\r\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\r\n        console.log('指令列表', res)\r\n        if (res.code == 0) {\r\n          _this.cmdList = res.supercmdTriggerList\r\n        } else {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 处理刷新\r\n    handleRefresh() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 表单重置\r\n    resetQuery() {\r\n      this.queryParam = {}\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleEditVisible(record) {\r\n      this.$refs.editModal.add(record)\r\n    },\r\n    // 搜索内容\r\n    searchData() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = { id: [record.id] }\r\n            queryData(id, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 批量删除\r\n    handleDeletes() {\r\n      console.log(this.selectedRowKeys)\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var ids = { id: _this.selectedRowKeys }\r\n            queryData(ids, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.selectedRowKeys = []\r\n                _this.$refs.table.refresh()\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Sensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sensor.vue","sourceRoot":"src/views/instruction","sourcesContent":["<template>\r\n  <page-view :title=\"title\">\r\n    <a-card :bordered=\"false\">\r\n      <div class=\"table-page-search-wrapper\">\r\n        <a-form layout=\"inline\">\r\n          <a-row :gutter=\"48\">\r\n            <a-col :md=\"6\" :sm=\"24\">\r\n              <a-form-item label=\"机器人名称\">\r\n                <a-input v-model=\"queryParam.robotName\" />\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :md=\"8\" :sm=\"24\">\r\n              <a-form-item label=\"触发条件\">\r\n                <a-select\r\n                  showSearch\r\n                  placeholder=\"选择触发指令\"\r\n                  optionFilterProp=\"children\"\r\n                  style=\"width: 200px\"\r\n                  v-model=\"queryParam.triggerName\"\r\n                  @change=\"handleCmdChange\"\r\n                  :filterOption=\"filterOption\"\r\n                >\r\n                  <a-select-option\r\n                    v-for=\"(item) in cmdList\"\r\n                    :key=\"item.code\"\r\n                    :value=\"item.triggerName\"\r\n                  >{{item.triggerName}}</a-select-option>\r\n                </a-select>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :md=\"!advanced && 8 || 24\" :sm=\"24\">\r\n              <span\r\n                class=\"table-page-search-submitButtons\"\r\n                :style=\"advanced && { float: 'right', overflow: 'hidden' } || {} \"\r\n              >\r\n                <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\r\n                <a-button style=\"margin-left: 8px\" @click=\"resetQuery()\">重置</a-button>\r\n              </span>\r\n            </a-col>\r\n          </a-row>\r\n        </a-form>\r\n      </div>\r\n\r\n      <div class=\"table-operator\">\r\n        <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.createModal.add()\">新建</a-button>\r\n        <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.editAllModal.add()\">批量修改</a-button>\r\n        <a-button type=\"dashed\" @click=\"tableOption\">{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\r\n        <a-dropdown v-if=\"selectedRowKeys.length > 0\">\r\n          <a-menu slot=\"overlay\">\r\n            <a-menu-item key=\"1\" v-action:delete @click=\"handleDeletes()\">\r\n              <a-icon type=\"delete\" />删除\r\n            </a-menu-item>\r\n          </a-menu>\r\n          <a-button style=\"margin-left: 8px\">\r\n            批量操作\r\n            <a-icon type=\"down\" />\r\n          </a-button>\r\n        </a-dropdown>\r\n      </div>\r\n      <s-table\r\n        ref=\"table\"\r\n        size=\"default\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :data=\"loadData\"\r\n        :alert=\"options.alert\"\r\n        :rowSelection=\"options.rowSelection\"\r\n        showPagination=\"auto\"\r\n      >\r\n        <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <template>\r\n            <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\r\n            <a-divider type=\"vertical\" />\r\n            <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\r\n          </template>\r\n        </span>\r\n      </s-table>\r\n    </a-card>\r\n    <create-sensor ref=\"createModal\" @ok=\"handleRefresh\"></create-sensor>\r\n    <edit-all-sensor ref=\"editAllModal\" @ok=\"handleRefresh\"></edit-all-sensor>\r\n    <edit-sensor ref=\"editModal\" @ok=\"handleRefresh\"></edit-sensor>\r\n  </page-view>\r\n</template>\r\n\r\n<script>\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport { queryData } from '@/api/common'\r\nimport CreateSensor from './modules/CreateSensor'\r\nimport EditAllSensor from './modules/EditAllSensor'\r\nimport EditSensor from './modules/EditSensor'\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    CreateSensor,\r\n    EditAllSensor,\r\n    EditSensor\r\n  },\r\n  data() {\r\n    return {\r\n      cmdList: [],\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      // 查询参数\r\n      queryParam: {\r\n        robotName: '',\r\n        triggerName: ''\r\n      },\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n\r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'robotName',\r\n          scopedSlots: { customRender: 'robotName' }\r\n        },\r\n        {\r\n          title: '触发条件',\r\n          dataIndex: 'triggerName',\r\n          scopedSlots: { customRender: 'triggerName' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        var id = JSON.parse(localStorage.getItem('user')).id\r\n        console.log('user 请求', parameter)\r\n        var params = { orgId: id }\r\n        return queryData(Object.assign(parameter, params, this.queryParam), '/supercmdTriggerRobot/list').then(res => {\r\n          console.log(res)\r\n          return res.result\r\n        })\r\n      },\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      options: {\r\n        alert: {\r\n          show: true,\r\n          clear: () => {\r\n            this.selectedRowKeys = []\r\n          }\r\n        },\r\n        rowSelection: {          \r\n          selectedRowKeys: this.selectedRowKeys,\r\n          onChange: this.onSelectChange\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return this.$route.meta.title\r\n    }\r\n  },\r\n  created() {\r\n    this.getCmdList()\r\n  },\r\n  methods: {\r\n    tableOption() {\r\n      if (!this.optionAlertShow) {\r\n        this.options = {\r\n          alert: {\r\n            show: true,\r\n            clear: () => {\r\n              this.selectedRowKeys = []\r\n            }\r\n          },\r\n          rowSelection: {\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            getCheckboxProps: record => ({\r\n              props: {\r\n                disabled: record.no === 'No 2', // Column configuration not to be checked\r\n                name: record.no\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.optionAlertShow = true\r\n      } else {\r\n        this.options = {\r\n          alert: false,\r\n          rowSelection: null\r\n        }\r\n        this.optionAlertShow = false\r\n      }\r\n    },\r\n    onSelectChange(selectedRowKeys, selectedRows) {     \r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    handleCmdChange(value) {\r\n      console.log(`selected ${value}`)\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    //获取指令列表\r\n    getCmdList() {\r\n      var _this = this\r\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\r\n        console.log('指令列表', res)\r\n        if (res.code == 0) {\r\n          _this.cmdList = res.supercmdTriggerList\r\n        } else {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 处理刷新\r\n    handleRefresh() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 表单重置\r\n    resetQuery() {\r\n      this.queryParam = {}\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleEditVisible(record) {\r\n      this.$refs.editModal.add(record)\r\n    },\r\n    // 搜索内容\r\n    searchData() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = { id: [record.id] }\r\n            queryData(id, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    },\r\n    // 批量删除\r\n    handleDeletes() {\r\n      console.log(this.selectedRowKeys)\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var ids = { id: _this.selectedRowKeys }\r\n            queryData(ids, '/supercmdTriggerRobot/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.selectedRowKeys = []\r\n                _this.$refs.table.refresh()\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search {\r\n  margin-bottom: 54px;\r\n}\r\n\r\n.fold {\r\n  width: calc(100% - 216px);\r\n  display: inline-block;\r\n}\r\n\r\n.operator {\r\n  margin-bottom: 18px;\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .fold {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]}]}