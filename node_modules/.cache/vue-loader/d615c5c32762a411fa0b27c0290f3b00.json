{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\system\\modules\\EditUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\system\\modules\\EditUser.vue","mtime":1565761830618},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { queryData , addData} from '@/api/common';\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n\r\n      form: this.$form.createForm(this),\r\n      orgNames:[],\r\n      roleNames:[],\r\n      editData:{},\r\n      org:0,\r\n      role:0,\r\n      isDel:0,\r\n    }\r\n  },\r\n  created(){\r\n    this.handleRoleList();\r\n    this.handleOrgList();\r\n  },\r\n  methods: {\r\n    // 获取角色\r\n    handleRoleList(){\r\n      var _this = this;\r\n      var roleId = JSON.parse(localStorage.getItem('user')).roleId;\r\n        queryData({role:roleId},'/userManage/getAllSysRole').then(res => {\r\n        console.log(res);\r\n        _this.roleNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n      });\r\n    },\r\n    // 获取单位下的单位\r\n    handleOrgList(){\r\n      var param = {org : 1};\r\n      var _this = this;\r\n      queryData(param,'/userManage/getHrOrgByPid').then(res => {\r\n        console.log(res);\r\n        _this.orgNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n      });\r\n    },\r\n    add (record) {\r\n      console.log(record)\r\n      this.org = record.org;\r\n      this.role = record.role;\r\n      this.isDel = record.isDel;\r\n      this.visible = true;\r\n      this.editData = record;\r\n    },\r\n    handleChange(value){\r\n      this.isDel = value;\r\n    },\r\n    handleSubmit () {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          values.role = Number.isInteger(values.role) ? values.role : this.role;\r\n          values.org = Number.isInteger(values.org) ? values.org : this.org;\r\n          values.isDel = Number.isInteger(values.isDel) ? values.isDel : this.isDel;\r\n          var param = Object.assign(values,{id:this.editData.id} )\r\n          var _this = this;\r\n          setTimeout(() => {\r\n            addData(param,'/userManage/editUserMsg').then(res => {\r\n              \r\n              if(res.code == 0){\r\n                _this.$message.success('修改成功');\r\n                // 重置输入框内容\r\n                _this.form.resetFields();\r\n                this.visible = false\r\n                this.confirmLoading = false\r\n                this.$emit('ok', values)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n            \r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.visible = false\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n  }\r\n}\r\n",null]}