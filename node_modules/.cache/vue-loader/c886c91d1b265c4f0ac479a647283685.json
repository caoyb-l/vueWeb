{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobot.vue","mtime":1575082421407},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport moment from 'moment';\nexport default {\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      orgNames: [],\n      editData: '',\n      orgId: 0\n    }\n  },\n  created () {\n    this.handleOrgLists();\n  },\n  methods: {\n    moment,\n    // 获取该用户下的所属单位\n    handleOrgLists () {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: orgId }\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error('获取单位数据', res.message)\n        }\n      }).catch((err) => console.log(err))\n    },\n    add (record) {\n      this.form.resetFields();\n      this.orgId = record.orgId;\n      console.log('表单的值人脸时间应该' + this.editData.faceTime);\n      this.editData = record;\n      this.visible = true;\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          values.orgId = Number.isInteger(values.orgId) ? values.orgId : this.orgId;\n          var param = Object.assign(values,{entityId:this.editData.id} )\n          var param = { code: [this.editData.code] }\n          var _this = this;\n          setTimeout(() => {\n            queryData(param,'/robotInfo/save').then(res => {\n              console.log(res);\n              if(res.code == 0){\n                _this.$message.success('修改成功');\n              } else {\n                _this.$message.error(res.message);\n              }\n               // 重置输入框内容\n              _this.form.resetFields();\n            });\n            this.visible = false\n\n            this.confirmLoading = false\n            this.$emit('ok', values)\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false;\n      this.editData = {}\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  }\n}\n",null]}