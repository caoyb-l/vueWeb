{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/AiuiSceneList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/AiuiSceneList.vue","mtime":1578119341383},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport CreateAiuiScene from './modules/CreateAiuiScene'\nimport EditAiuiScene from './modules/EditAiuiScene'\nimport { queryData } from '@/api/common'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateAiuiScene,\n    EditAiuiScene\n  },\n  data() {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n        aiuiName: '',\n        aiuiDescn: ''\n      },\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'scene',\n          scopedSlots: { customRender: 'scene' }\n        },\n        {\n          title: '描述',\n          dataIndex: 'descn',\n          scopedSlots: { customRender: 'descn' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return queryData(Object.assign(parameter, this.queryParam), '/aiuiScene/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    handleOk() {\n      console.log('呵呵')\n      this.$refs.table.refresh(true)\n    },\n    handleUpdate(record) {\n      this.$refs.editAiui.add(record)\n    },\n    handleAdd() {\n      this.$refs.createAiui.add()\n    },\n    //禁用\n    handleIsAble(checked, record) {\n      console.log(checked)\n      var param = { entityId: record.id }\n      if (checked) {\n        param.isAble = 1\n      } else {\n        param.isAble = 0\n      }\n      queryData(param, '/aiuiScene/isAble')\n        .then(res => {\n          _this.orgNames = res.result\n          if (res.code !== 0) {\n            _this.$message.error(res.message)\n          }\n        })\n        .catch(err => console.log(err))\n    },\n    //删除\n    deleteSkillsType (record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.scene} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n            var id = { entityId: record.id }\n            queryData(id, '/aiuiScene/delete').then(res => {\n              if (res.code === 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",null]}