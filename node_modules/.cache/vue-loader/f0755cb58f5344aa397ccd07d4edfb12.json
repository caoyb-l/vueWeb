{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showSkillsType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showSkillsType.vue","mtime":1587436201984},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { queryData } from '@/api/common'\nexport default {\n  components: {\n    STable\n  },\n  watch: {\n    code(values) {\n      console.log(values), this.$refs.table.refresh(true)\n    }\n  },\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      columns: [\n        {\n          title: '序号',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '问答库名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '所属单位',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      code: '',\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      loadData: parameter => {\n        var parma = Object.assign(parameter, { code: this.code }, this.queryParam)\n        return queryData(parma, '/skillsRobot/getSkillsRobotList').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    add(record) {\n      this.code = record.code\n      this.visible = true\n      this.$refs.table.refresh(true)\n    },\n    // 重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    searchData() {\n      this.$refs.table.refresh()\n    },\n    //禁用\n    handleIsAble(checked, record) {\n      console.log(checked)\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { entityId: record.id }\n      if (checked) {\n        param.isAble = 1\n      } else {\n        param.isAble = 0\n      }\n      queryData(param, '/skillsRobot/isAble')\n        .then(res => {\n          _this.orgNames = res.result\n          if (res.code !== 0) {\n            _this.$message.error(res.message)\n          }\n        })\n        .catch(err => console.log(err))\n    },\n    //彻底删除\n    deleteSkillsType(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n            var id = { entityId: record.id }\n            queryData(id, '/skillsRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    handleSubmit() {\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["showSkillsType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"showSkillsType.vue","sourceRoot":"src/views/robot/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"问答库列表\"\n    style=\"top: 0px;\"\n    v-preventReClick\n    :destroyOnClose=\"true\"\n    :maskClosable=\"false\"\n    :width=\"1000\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n  >\n    <a-card :bordered=\"false\">\n      <div class=\"table-page-search-wrapper\">\n        <a-form layout=\"inline\">\n          <a-row :gutter=\"48\">\n            <a-col :md=\"8\" :sm=\"24\">\n              <a-form-item label=\"问答库名称\">\n                <a-input v-model=\"queryParam.name\" />\n              </a-form-item>\n            </a-col>\n            <a-col :md=\"8\" :sm=\"24\">\n              <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"resetQuery()\">重置</a-button>\n            </a-col>\n          </a-row>\n        </a-form>\n      </div>\n      <s-table\n        ref=\"table\"\n        size=\"middle\"\n        rowKey=\"no\"\n        :columns=\"columns\"\n        :data=\"loadData\"\n        showPagination=\"auto\"\n      >\n        <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <template>\n            <a-switch\n              :defaultChecked=\"record.isAble==1?true:false\"\n              @click=\"handleIsAble ($event,record)\"\n            >\n              <a-icon type=\"check\" slot=\"checkedChildren\" />\n              <a-icon type=\"close\" slot=\"unCheckedChildren\" />\n            </a-switch>\n            <a-divider type=\"vertical\" />\n            <a @click=\"deleteSkillsType(record)\">彻底删除</a>\n          </template>\n        </span>\n      </s-table>\n    </a-card>\n  </a-modal>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { queryData } from '@/api/common'\nexport default {\n  components: {\n    STable\n  },\n  watch: {\n    code(values) {\n      console.log(values), this.$refs.table.refresh(true)\n    }\n  },\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      columns: [\n        {\n          title: '序号',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '问答库名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '所属单位',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      code: '',\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      loadData: parameter => {\n        var parma = Object.assign(parameter, { code: this.code }, this.queryParam)\n        return queryData(parma, '/skillsRobot/getSkillsRobotList').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    add(record) {\n      this.code = record.code\n      this.visible = true\n      this.$refs.table.refresh(true)\n    },\n    // 重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    searchData() {\n      this.$refs.table.refresh()\n    },\n    //禁用\n    handleIsAble(checked, record) {\n      console.log(checked)\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { entityId: record.id }\n      if (checked) {\n        param.isAble = 1\n      } else {\n        param.isAble = 0\n      }\n      queryData(param, '/skillsRobot/isAble')\n        .then(res => {\n          _this.orgNames = res.result\n          if (res.code !== 0) {\n            _this.$message.error(res.message)\n          }\n        })\n        .catch(err => console.log(err))\n    },\n    //彻底删除\n    deleteSkillsType(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n            var id = { entityId: record.id }\n            queryData(id, '/skillsRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    handleSubmit() {\n      this.visible = false\n    }\n  }\n}\n</script>"]}]}