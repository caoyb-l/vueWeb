{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/Sensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/Sensor.vue","mtime":1584669518253},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateSensor from './modules/CreateSensor'\nimport EditAllSensor from './modules/EditAllSensor'\nimport EditSensor from './modules/EditSensor'\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateSensor,\n    EditAllSensor,\n    EditSensor\n  },\n  data() {\n    return {\n      cmdList: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n        robotName: '',\n        triggerName: ''\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '机器人名称',\n          dataIndex: 'robotName',\n          scopedSlots: { customRender: 'robotName' }\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'robotCode',\n          scopedSlots: { customRender: 'robotCode' }\n        },\n        {\n          title: '触发条件',\n          dataIndex: 'triggerName',\n          scopedSlots: { customRender: 'triggerName' }\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName',\n          scopedSlots: { customRender: 'cmdName' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var id = JSON.parse(localStorage.getItem('user')).orgId\n        var params = { orgId: id }\n        return queryData(Object.assign(parameter, params, this.queryParam), '/supercmdTriggerRobot/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  computed: {\n    title() {\n      return this.$route.meta.title\n    }\n  },\n  created() {\n    this.getCmdList()\n  },\n  methods: {\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleCmdChange(value) {\n      console.log(`selected ${value}`)\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    //获取指令列表\n    getCmdList() {\n      var _this = this\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\n        console.log('指令列表', res)\n        if (res.code == 0) {\n          _this.cmdList = res.supercmdTriggerList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    // 处理刷新\n    handleRefresh() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record) {\n      this.$refs.editModal.add(record)\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/supercmdTriggerRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    handleDeletes() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/supercmdTriggerRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Sensor.vue"],"names":[],"mappingsfile":"Sensor.vue","sourceRoot":"src/views/instruction","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"机器人名称\">\n              <a-input v-model=\"queryParam.robotName\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"触发条件\">\n              <a-select\n                showSearch\n                placeholder=\"选择触发指令\"\n                optionFilterProp=\"children\"\n                v-model=\"queryParam.triggerName\"\n                @change=\"handleCmdChange\"\n                :filterOption=\"filterOption\"\n              >\n                <a-select-option\n                  v-for=\"(item) in cmdList\"\n                  :key=\"item.code\"\n                  :value=\"item.triggerName\"\n                >{{item.triggerName}}</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"13\" :sm=\"24\">\n            <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n            <a-button style=\"margin-left: 8px\" @click=\"resetQuery()\">重置</a-button>\n            <a-button\n              type=\"primary\"\n              style=\"margin-left: 8px\"\n              icon=\"plus\"\n              @click=\"$refs.createModal.add()\"\n              v-action:add\n            >新建</a-button>\n            <a-button\n              type=\"primary\"\n              style=\"margin-left: 8px\"\n              @click=\"$refs.editAllModal.add()\"\n              v-action:edit\n            >批量修改</a-button>\n            <a-button\n              type=\"dashed\"\n              style=\"margin-left: 8px\"\n              @click=\"tableOption\"\n              v-action:delete\n            >{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\n            <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n              <a-menu slot=\"overlay\">\n                <a-menu-item key=\"1\" @click=\"handleDeletes()\">\n                  <a-icon type=\"delete\" />删除\n                </a-menu-item>\n              </a-menu>\n              <a-button style=\"margin-left: 8px\">\n                批量操作\n                <a-icon type=\"down\" />\n              </a-button>\n            </a-dropdown>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n\n    <!-- <div class=\"table-operator\">\n        \n    </div>-->\n    <s-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :alert=\"options.alert\"\n      :rowSelection=\"options.rowSelection\"\n      showPagination=\"auto\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <template>\n          <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n          <a-divider type=\"vertical\" />\n          <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\n        </template>\n      </span>\n    </s-table>\n    <create-sensor ref=\"createModal\" @ok=\"handleRefresh\"></create-sensor>\n    <edit-all-sensor ref=\"editAllModal\" @ok=\"handleRefresh\"></edit-all-sensor>\n    <edit-sensor ref=\"editModal\" @ok=\"handleRefresh\"></edit-sensor>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateSensor from './modules/CreateSensor'\nimport EditAllSensor from './modules/EditAllSensor'\nimport EditSensor from './modules/EditSensor'\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateSensor,\n    EditAllSensor,\n    EditSensor\n  },\n  data() {\n    return {\n      cmdList: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n        robotName: '',\n        triggerName: ''\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '机器人名称',\n          dataIndex: 'robotName',\n          scopedSlots: { customRender: 'robotName' }\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'robotCode',\n          scopedSlots: { customRender: 'robotCode' }\n        },\n        {\n          title: '触发条件',\n          dataIndex: 'triggerName',\n          scopedSlots: { customRender: 'triggerName' }\n        },\n        {\n          title: '动作集',\n          dataIndex: 'cmdName',\n          scopedSlots: { customRender: 'cmdName' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var id = JSON.parse(localStorage.getItem('user')).orgId\n        var params = { orgId: id }\n        return queryData(Object.assign(parameter, params, this.queryParam), '/supercmdTriggerRobot/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  computed: {\n    title() {\n      return this.$route.meta.title\n    }\n  },\n  created() {\n    this.getCmdList()\n  },\n  methods: {\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleCmdChange(value) {\n      console.log(`selected ${value}`)\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    //获取指令列表\n    getCmdList() {\n      var _this = this\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\n        console.log('指令列表', res)\n        if (res.code == 0) {\n          _this.cmdList = res.supercmdTriggerList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    // 处理刷新\n    handleRefresh() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record) {\n      this.$refs.editModal.add(record)\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/supercmdTriggerRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    handleDeletes() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/supercmdTriggerRobot/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.search {\n  margin-bottom: 54px;\n}\n\n.fold {\n  width: calc(100% - 216px);\n  display: inline-block;\n}\n\n.operator {\n  margin-bottom: 18px;\n}\n\n@media screen and (max-width: 900px) {\n  .fold {\n    width: 100%;\n  }\n}\n</style>\n"]}]}