{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/company/ComList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/company/ComList.vue","mtime":1578713142249},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport DetailList from '@/components/tools/DetailList'\nconst DetailListItem = DetailList.Item\nexport default {\n  components: {\n    DetailList,\n    DetailListItem\n  },\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      orgTree: [],\n      orgList: [],\n      comInfo: [],\n      pid: '',\n      isSelect: false,\n      addVisible: false,\n      editVisible: false,\n      addForm: {\n        name: '',\n        contact: '',\n        contactWay: '',\n        descn: ''\n      },\n      editForm: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      }\n    }\n  },\n  beforeMount() {\n    this.getDateTree()\n  },\n  methods: {\n    // 新增\n    handleAdd() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = { pid: this.pid, ...values.addForm }\n        console.log(param)\n\n        queryData(param, '/hrOrg/save').then(res => {\n          if (res.code == 0) {\n            _this.$message.success('新建成功')\n            _this.addVisible = false\n            _this.form.resetFields()\n            _this.getDateTree()\n          } else {\n            _this.$message.error(res.message)\n          }\n        })\n      })\n    },\n    // 编辑\n    handleEdit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = { entityId: this.pid, ...values.editForm }\n        console.log(param)\n\n        queryData(param, '/hrOrg/save').then(res => {\n          if (res.code == 0) {\n            _this.$message.success('编辑成功')\n            _this.editVisible = false\n            _this.form.resetFields()\n            _this.getDateTree()\n            _this.getComInfo(_this.pid)\n          } else {\n            _this.$message.error(res.message)\n          }\n        })\n      })\n    },\n    // 删除\n    handleDelete() {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除该单位吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var param = { entityId: _this.pid }\n            console.log(param)\n            queryData(param, '/hrOrg/delete').then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.getDateTree()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 处理显隐\n    handleAddVisible() {\n      if (this.pid != '') {\n        this.addVisible = true\n      }\n    },\n    // 编辑\n    handleEditVisible() {\n      this.form.resetFields()\n      this.editVisible = true\n      this.editForm = this.comInfo\n    },\n    //   获取树形结构数据\n    getDateTree() {\n      var id = JSON.parse(localStorage.getItem('user')).id\n      var _this = this\n      queryData({ userid: id }, 'hrOrg/list').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          _this.orgTree = res.result\n          _this.getOrgList(res.result)\n          var expandedKeys = []\n          res.result.map((value, index) => {\n            if (value.children) {\n              var item = value.children\n              item.map((value, index) => {\n                expandedKeys.push(value.key)\n              })\n            } else {\n              expandedKeys.push(value.key)\n            }\n          })\n          _this.expandedKeys = expandedKeys\n        }\n      })\n    },\n    //   获取用于搜索的list数组\n    getOrgList(data) {\n      for (let i = 0; i < data.length; i++) {\n        const node = data[i]\n        const key = node.key\n        const title = node.title\n        const orgid = node.orgId\n        const pid = node.pid\n        this.orgList.push({ key, title: title, orgid: orgid, pid: pid })\n        if (node.children) {\n          this.getOrgList(node.children)\n        }\n      }\n    },\n    // 获取当前点击单位\n    onSelect(key) {\n      this.getComInfo(key[0])\n    },\n    getComInfo(pid) {\n      var param = { orgId: pid }\n      var _this = this\n      queryData(param, '/hrOrg/getOrgMessage').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          _this.comInfo = Object(res.hrOrg)\n          if (Object.keys(_this.comInfo).length) {\n            _this.isSelect = true\n            _this.pid = pid\n          } else {\n            _this.isSelect = false\n          }\n        }\n      })\n    },\n    onExpand(expandedKeys) {\n      //console.log(expandedKeys);\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    // 搜索\n    onChange(e) {\n      const value = e.target.value\n\n      const expandedKeys = this.orgList\n        .map(item => {\n          if (item.title.indexOf(value) > -1) {\n            return this.getParentKey(item.title, this.orgTree)\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      })\n    },\n    // 定位树形结构的数据\n    getParentKey(title, tree) {\n      let parentKey = 0\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.title === title)) {\n            parentKey = node.key\n          } else if (this.getParentKey(title, node.children)) {\n            parentKey = this.getParentKey(title, node.children)\n          }\n        }\n      }\n      return parentKey\n    }\n  }\n}\n",{"version":3,"sources":["ComList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"ComList.vue","sourceRoot":"src/views/company","sourcesContent":["<template>\n  <div>\n    <a-card :bordered=\"false\">\n      <a-row :gutter=\"8\">\n        <a-col :span=\"5\">\n          <a-input-search placeholder=\"关键字\" @change=\"onChange\" />\n          <a-tree\n            ref=\"tree\"\n            @expand=\"onExpand\"\n            :expandedKeys=\"expandedKeys\"\n            :autoExpandParent=\"autoExpandParent\"\n            @select=\"onSelect\"\n            :treeData=\"orgTree\"\n          >\n            <template slot=\"title\" slot-scope=\"{title}\">\n              <span v-if=\"title.indexOf(searchValue) > -1\">\n                {{title.substr(0, title.indexOf(searchValue))}}\n                <span\n                  style=\"color: #f50\"\n                >{{searchValue}}</span>\n                {{title.substr(title.indexOf(searchValue) + searchValue.length)}}\n              </span>\n              <span v-else>{{title}}</span>\n            </template>\n          </a-tree>\n        </a-col>\n        <a-col :span=\"17\">\n          <div class=\"table-operator\">\n            <a-button\n              type=\"primary\"\n              v-if=\"isSelect\"\n              icon=\"plus\"\n              style=\"margin-left:30px;\"\n              @click=\"handleAddVisible()\"\n              v-action:add\n            >新建下级</a-button>\n            <a-button\n              type=\"dashed\"\n              v-if=\"isSelect\"\n              icon=\"form\"\n              style=\"margin-left:30px;\"\n              @click=\"handleEditVisible()\"\n              v-action:edit\n            >编辑信息</a-button>\n            <a-button\n              type=\"danger\"\n              v-if=\"isSelect\"\n              icon=\"delete\"\n              style=\"margin-left:30px;\"\n              @click=\"handleDelete()\"\n              v-action:delete\n            >删除</a-button>\n            <a-card :bordered=\"false\" v-if=\"isSelect\">\n              <detail-list title=\"单位信息\" ref=\"list\">\n                <detail-list-item term=\"单位名称\">{{comInfo.name}}</detail-list-item>\n                <detail-list-item term=\"联系人\">{{comInfo.contact}}</detail-list-item>\n                <detail-list-item term=\"联系方式\">{{comInfo.contactWay}}</detail-list-item>\n                <detail-list-item term=\"备注\">{{comInfo.descn}}</detail-list-item>\n              </detail-list>\n              <a-divider style=\"margin-bottom: 32px\" />\n            </a-card>\n          </div>\n        </a-col>\n      </a-row>\n    </a-card>\n    <!-- 新增 -->\n    <a-modal title=\"新建下级\" v-model=\"addVisible\" @ok=\"handleAdd\">\n      <a-form :form=\"form\">\n        <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input\n            v-decorator=\"[\n            'addForm.name',\n            {rules: [{ required: true, message: '请输入名称' }]}\n          ]\"\n            placeholder=\"名称\"\n          />\n        </a-form-item>\n        <a-form-item label=\"联系人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[\n            'addForm.contact'\n          ]\" placeholder=\"联系人\" />\n        </a-form-item>\n        <a-form-item label=\"联系方式\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[\n            'addForm.contactWay'\n          ]\" placeholder=\"联系方式\" />\n        </a-form-item>\n        <a-form-item label=\"备注\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-textarea\n            v-decorator=\"[\n            'addForm.descn'\n          ]\"\n            placeholder=\"备注\"\n            :rows=\"4\"\n          />\n        </a-form-item>\n      </a-form>\n    </a-modal>\n\n    <!-- 编辑 -->\n    <a-modal title=\"编辑\" v-model=\"editVisible\" @ok=\"handleEdit\">\n      <a-form :form=\"form\">\n        <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input\n            v-decorator=\"[\n            'editForm.name',\n            {rules: [{ required: true, message: '请输入名称' }],\n            initialValue: editForm.name}\n          ]\"\n            placeholder=\"名称\"\n          />\n        </a-form-item>\n        <a-form-item label=\"联系人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input\n            v-decorator=\"[\n            'editForm.contact',\n            {initialValue: editForm.contact}\n          ]\"\n            placeholder=\"联系人\"\n          />\n        </a-form-item>\n        <a-form-item label=\"联系方式\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input\n            v-decorator=\"[\n            'editForm.contactWay',\n            {initialValue: editForm.contactWay}\n          ]\"\n            placeholder=\"联系方式\"\n          />\n        </a-form-item>\n        <a-form-item label=\"备注\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-textarea\n            v-decorator=\"[\n            'editForm.descn',\n            {initialValue: editForm.descn}\n          ]\"\n            placeholder=\"备注\"\n            :rows=\"4\"\n          />\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport { queryData } from '@/api/common'\nimport DetailList from '@/components/tools/DetailList'\nconst DetailListItem = DetailList.Item\nexport default {\n  components: {\n    DetailList,\n    DetailListItem\n  },\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      orgTree: [],\n      orgList: [],\n      comInfo: [],\n      pid: '',\n      isSelect: false,\n      addVisible: false,\n      editVisible: false,\n      addForm: {\n        name: '',\n        contact: '',\n        contactWay: '',\n        descn: ''\n      },\n      editForm: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      }\n    }\n  },\n  beforeMount() {\n    this.getDateTree()\n  },\n  methods: {\n    // 新增\n    handleAdd() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = { pid: this.pid, ...values.addForm }\n        console.log(param)\n\n        queryData(param, '/hrOrg/save').then(res => {\n          if (res.code == 0) {\n            _this.$message.success('新建成功')\n            _this.addVisible = false\n            _this.form.resetFields()\n            _this.getDateTree()\n          } else {\n            _this.$message.error(res.message)\n          }\n        })\n      })\n    },\n    // 编辑\n    handleEdit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = { entityId: this.pid, ...values.editForm }\n        console.log(param)\n\n        queryData(param, '/hrOrg/save').then(res => {\n          if (res.code == 0) {\n            _this.$message.success('编辑成功')\n            _this.editVisible = false\n            _this.form.resetFields()\n            _this.getDateTree()\n            _this.getComInfo(_this.pid)\n          } else {\n            _this.$message.error(res.message)\n          }\n        })\n      })\n    },\n    // 删除\n    handleDelete() {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除该单位吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var param = { entityId: _this.pid }\n            console.log(param)\n            queryData(param, '/hrOrg/delete').then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.getDateTree()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 处理显隐\n    handleAddVisible() {\n      if (this.pid != '') {\n        this.addVisible = true\n      }\n    },\n    // 编辑\n    handleEditVisible() {\n      this.form.resetFields()\n      this.editVisible = true\n      this.editForm = this.comInfo\n    },\n    //   获取树形结构数据\n    getDateTree() {\n      var id = JSON.parse(localStorage.getItem('user')).id\n      var _this = this\n      queryData({ userid: id }, 'hrOrg/list').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          _this.orgTree = res.result\n          _this.getOrgList(res.result)\n          var expandedKeys = []\n          res.result.map((value, index) => {\n            if (value.children) {\n              var item = value.children\n              item.map((value, index) => {\n                expandedKeys.push(value.key)\n              })\n            } else {\n              expandedKeys.push(value.key)\n            }\n          })\n          _this.expandedKeys = expandedKeys\n        }\n      })\n    },\n    //   获取用于搜索的list数组\n    getOrgList(data) {\n      for (let i = 0; i < data.length; i++) {\n        const node = data[i]\n        const key = node.key\n        const title = node.title\n        const orgid = node.orgId\n        const pid = node.pid\n        this.orgList.push({ key, title: title, orgid: orgid, pid: pid })\n        if (node.children) {\n          this.getOrgList(node.children)\n        }\n      }\n    },\n    // 获取当前点击单位\n    onSelect(key) {\n      this.getComInfo(key[0])\n    },\n    getComInfo(pid) {\n      var param = { orgId: pid }\n      var _this = this\n      queryData(param, '/hrOrg/getOrgMessage').then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          _this.comInfo = Object(res.hrOrg)\n          if (Object.keys(_this.comInfo).length) {\n            _this.isSelect = true\n            _this.pid = pid\n          } else {\n            _this.isSelect = false\n          }\n        }\n      })\n    },\n    onExpand(expandedKeys) {\n      //console.log(expandedKeys);\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    // 搜索\n    onChange(e) {\n      const value = e.target.value\n\n      const expandedKeys = this.orgList\n        .map(item => {\n          if (item.title.indexOf(value) > -1) {\n            return this.getParentKey(item.title, this.orgTree)\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      })\n    },\n    // 定位树形结构的数据\n    getParentKey(title, tree) {\n      let parentKey = 0\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.title === title)) {\n            parentKey = node.key\n          } else if (this.getParentKey(title, node.children)) {\n            parentKey = this.getParentKey(title, node.children)\n          }\n        }\n      }\n      return parentKey\n    }\n  }\n}\n</script>\n<style lang=\"less\">\n.ant-tree {\n  line-height: 2.3rem;\n}\n.ant-layout-content {\n  background: #fff;\n}\n.custom-tree {\n  /deep/ .ant-menu-item-group-title {\n    position: relative;\n    &:hover {\n      .btn {\n        display: block;\n      }\n    }\n  }\n\n  /deep/ .ant-menu-item {\n    &:hover {\n      .btn {\n        display: block;\n      }\n    }\n  }\n\n  /deep/ .btn {\n    display: none;\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 20px;\n    height: 40px;\n    line-height: 40px;\n    z-index: 1050;\n\n    &:hover {\n      transform: scale(1.2);\n      transition: 0.5s all;\n    }\n  }\n}\n</style>\n"]}]}