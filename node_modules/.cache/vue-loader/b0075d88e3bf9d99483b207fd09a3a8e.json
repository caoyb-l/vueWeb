{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/CmdType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/CmdType.vue","mtime":1578713142234},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport { queryData } from '@/api/common'\r\nimport CreateModel from './modules/CreateCmdType'\r\nimport EditModel from './modules/EditCmdType'\r\nconst statusMap = {\r\n  1: {\r\n    status: 'processing',\r\n    text: '声音 '\r\n  },\r\n  2: {\r\n    status: 'success',\r\n    text: '串口'\r\n  },\r\n  3: {\r\n    status: 'warning',\r\n    text: '思岚'\r\n  },\r\n  5: {\r\n    status: 'default',\r\n    text: '技能'\r\n  }\r\n}\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    CreateModel,\r\n    EditModel\r\n  },\r\n  data() {\r\n    return {\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      // 查询参数\r\n      queryParam: {\r\n        name: '',\r\n        type: ''\r\n      },\r\n      cmdTypeList: [],\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '序号',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        {\r\n          title: '命令类型名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '命令名称参数类型',\r\n          dataIndex: 'type',\r\n          scopedSlots: { customRender: 'type' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        return queryData(Object.assign(parameter, this.queryParam), '/cmdUnitType/list').then(res => {\r\n          console.log(res)\r\n          return res.result\r\n        })\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return this.$route.meta.title\r\n    }\r\n  },\r\n  filters: {\r\n    statusFilter(type) {\r\n      return statusMap[type].text\r\n    },\r\n    statusTypeFilter(type) {\r\n      return statusMap[type].status\r\n    }\r\n  },\r\n  methods: {\r\n    // 下拉框\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 处理刷新\r\n    handleRefresh() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 表单重置\r\n    resetQuery() {\r\n      this.queryParam = {}\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleEditVisible(record) {\r\n      this.$refs.editModal.add(record)\r\n    },\r\n    // 搜索内容\r\n    searchData() {\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record) {\r\n      var _this = this\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.name} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 200)\r\n            var id = { entityId: record.id }\r\n            queryData(id, '/cmdUnitType/delete').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('删除成功')\r\n                _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            })\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}