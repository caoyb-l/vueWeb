{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditAllSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditAllSensor.vue","mtime":1584669518260},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data() {\n    return {\n      showEditCmd: false,\n      cmdId: '',\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      triggerCmdList: [],\n      cmdList: [],\n      triggerId: 0,\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '机器人名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'code',\n          scopedSlots: { customRender: 'code' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var id = JSON.parse(localStorage.getItem('user')).id\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId\n        var params = {\n          type: 2,\n          triggerId: this.triggerId,\n          code: '',\n          name: '',\n          orgId: orgId,\n          userId: id,\n          validityDate: ''\n        }\n        return queryData(\n          Object.assign(parameter, params, this.queryParam),\n          '/robotInfo/loadPageListByTruggerRobot'\n        ).then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    changeCmd(event) {\n      this.cmdId = event\n      this.showEditCmd = true\n      console.log('下拉框值：' + this.cmdId)\n    },\n    // 新增动作集\n    addCmd() {\n      this.$refs.cmd.show('批量修改传感器', '', 0)\n    },\n    // 修改动作集\n    editCmd() {\n      console.log('修改：' + this.cmdId)\n      this.$refs.cmd.show('批量修改传感器', '', this.cmdId)\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId(cmd) {\n      this.getCmdList()\n      this.cmdId = cmd\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      })\n    },\n    handleTriggerCmdChange(value) {\n      console.log(`selected ${value}`)\n      this.triggerId = value\n      this.$refs.table.refresh()\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 选择机器人\n    onSelectChange(record, selected, nativeEvent) {\n      if (selected) {\n        this.selectedRowKeys.add(record.id)\n      } else {\n        this.selectedRowKeys.delete(record.id)\n      }\n    },\n    onSelectChangeAll(selected, changeRows) {\n      if (selected) {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.add(value.id)\n        })\n      } else {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.delete(value.id)\n        })\n      }\n    },\n    // 获取指令列表\n    getTriggerCmdList() {\n      var _this = this\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\n        console.log('指令列表', res)\n        if (res.code == 0) {\n          _this.triggerCmdList = res.supercmdTriggerList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    // 获取动作集\n    getCmdList() {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: orgId }\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\n        console.log('动作集', res)\n        if (res.code == 0 || res.code == 2) {\n          _this.cmdList = res.cmdList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n\n    add() {\n      this.visible = true\n      this.showEditCmd = false\n      this.cmdId = ''\n      this.getTriggerCmdList()\n      this.getCmdList()\n      // this.selectedRowKeys.clear()\n      // if (this.$refs.table) {\n      //   this.$refs.table.refresh()\n      // }\n    },\n\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            robotId: [..._this.selectedRowKeys],\n            cmdId: '1'\n          }\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/updateAll').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('批量修改成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",null]}