{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobotNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/EditRobotNote.vue","mtime":1583139285073},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nexport default {\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      editData: {}\n    }\n  },\n  methods: {\n    edit (record) {\n      this.form.resetFields()\n      this.visible = true\n      this.editData = record\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = Object.assign(values, { id: this.editData.id })\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/RobotNote/editRobotNote').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('修改成功')\n                // 重置输入框内容\n                _this.form.resetFields()\n                this.visible = false\n                this.confirmLoading = false\n                this.$emit('ok', values)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false\n      this.editData = {}\n    }\n  }\n}\n",{"version":3,"sources":["EditRobotNote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditRobotNote.vue","sourceRoot":"src/views/robot/modules","sourcesContent":["<template>\n  <!-- 编辑弹框 -->\n      <a-modal\n      title=\"编辑备注\"\n      style=\"top: 20px;\"\n      :width=\"600\"\n      v-model=\"visible\"\n      @ok=\"handleSubmit\"\n    >\n    <a-form :form=\"form\">\n      <a-form-item\n        label=\"备注\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\">\n        <a-textarea\n          placeholder=\"请输入备注\" :rows=\"4\"\n          v-decorator=\"[\n            'remark',\n            {\n              rules: [{message: '请输入备注' }],\n              initialValue: editData.remark,\n            }]\"\n          />\n      </a-form-item>\n    </a-form>\n    </a-modal>\n</template>\n\n<script>\nimport { queryData } from '@/api/common'\nexport default {\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      editData: {}\n    }\n  },\n  methods: {\n    edit (record) {\n      this.form.resetFields()\n      this.visible = true\n      this.editData = record\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = Object.assign(values, { id: this.editData.id })\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/RobotNote/editRobotNote').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('修改成功')\n                // 重置输入框内容\n                _this.form.resetFields()\n                this.visible = false\n                this.confirmLoading = false\n                this.$emit('ok', values)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false\n      this.editData = {}\n    }\n  }\n}\n</script>\n"]}]}