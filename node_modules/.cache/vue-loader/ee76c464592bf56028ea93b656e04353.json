{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/User.vue","mtime":1587718932125},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport EditModal from './modules/EditUser'\nimport CreateModal from './modules/CreateUser'\nimport { queryData } from '@/api/common'\nconst statusMap = {\n  0: {\n    status: 'default',\n    text: '无效'\n  },\n  1: {\n    status: 'processing',\n    text: '有效'\n  }\n}\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    EditModal,\n    CreateModal\n  },\n  data() {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        queryOrgId: '',\n        userName: '',\n        loginName: ''\n      },\n      editData: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '登录名',\n          dataIndex: 'loginName',\n          scopedSlots: { customRender: 'loginName' }\n        },\n        {\n          title: '单位名称',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '角色名称',\n          dataIndex: 'roleNames',\n          scopedSlots: { customRender: 'roleNames' }\n        },\n        {\n          title: '用户姓名',\n          dataIndex: 'userName',\n          scopedSlots: { customRender: 'userName' }\n        },\n        {\n          title: '手机号',\n          dataIndex: 'mobile',\n          scopedSlots: { customRender: 'mobile' }\n        },\n        {\n          title: '是否生效',\n          dataIndex: 'isDel',\n\n          scopedSlots: { customRender: 'isDel' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        console.log('user 请求', parameter)\n        let id = JSON.parse(localStorage.getItem('user')).orgId\n\n        var orgId = { orgId: id }\n        return queryData(Object.assign(parameter, this.queryParam, orgId), '/userManage/queryUserMsg').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      orgNames: [],\n      roleNames: [],\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {\n    this.handleOrgList()\n    this.handleRoleList()\n  },\n  computed: {\n    title() {\n      return this.$route.meta.title\n    }\n  },\n  filters: {\n    statusFilter(type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter(type) {\n      return statusMap[type].status\n    }\n  },\n  methods: {\n    // 获取单位下的单位\n    handleOrgList() {\n      let id = JSON.parse(localStorage.getItem('user')).orgId\n      var _this = this\n      queryData({ org: id }, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      }else{\n        this.options = {\n          alert: false,\n          rowSelection: null\n        },\n        this.optionAlertShow = false\n      }\n    },\n\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 获取角色\n    handleRoleList() {\n      var _this = this\n      var roleId = JSON.parse(localStorage.getItem('user')).roleId\n      queryData({ role: roleId }, '/userManage/getAllSysRole').then(res => {\n        _this.roleNames = res\n      })\n    },\n\n    // 处理新增\n    handleAddSubmit() {\n      this.$refs.table.refresh(true)\n    },\n\n    // 重置密码\n    handleResetPwd(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要重置 ${record.loginName}的密码吗?`,\n        okText: '重置',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n            var param = { id: record.id }\n            queryData(param, '/userManage/revertPassword')\n              .then(res => {\n                if (res.code == 0) {\n                  _this.$message.success('密码重置成功')\n                }\n              })\n              .catch(() => _this.$message.error(res.message))\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 表单重置\n    resetQuery () {\n      this.queryParam = { queryOrgId: '', userName: '', loginName: '' }\n      this.$refs.table.refresh(true)\n    },\n    // 显示状态修改\n    handleAddVisible () {\n      this.addVisible = true\n    },\n    handleEditVisible(record) {\n      this.editData = record\n      this.$refs.editModal.add(record)\n    },\n    handleChangeOption(value) {\n      console.log(`select ${value}`)\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDeleteUser(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.loginName} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/userManage/delUserMsg').then(res => {\n              console.log('删除用户返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    deleteUsers() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/userManage/delUserMsg').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <!-- <a-col :md=\"6\" :sm=\"24\">//暂且不开放\n            <a-form-item label=\"登录名/手机号\">\n              <a-input v-model=\"queryParam.loginName\"/>\n            </a-form-item>\n          </a-col> -->\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"用户姓名\">\n              <a-input v-model=\"queryParam.userName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"登录名\">\n              <a-input v-model=\"queryParam.loginName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"单位名称\">\n              <a-select\n                showSearch\n                placeholder=\"选择单位名称\"\n                optionFilterProp=\"children\"\n                :filterOption=\"filterOption\"\n                v-model=\"queryParam.queryOrgId \"\n              >\n              <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\n                {{item.name}}\n              </a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=5 :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n              <a-button style=\"margin-left: 10px\" @click=\"resetQuery()\">重置</a-button>\n              <a-button style=\"margin-left: 10px\" type=\"primary\" icon=\"plus\" @click=\"$refs.createModal.add()\" v-action:add>新建</a-button>\n              <a-button style=\"margin-left: 10px\" type=\"dashed\" @click=\"tableOption\">{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\n              <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n                <a-menu slot=\"overlay\">\n                  <a-menu-item key=\"1\" @click=\"deleteUsers()\">\n                    <a-icon type=\"delete\" v-action:delete/>删除\n                </a-menu-item>\n                </a-menu>\n                <a-button style=\"margin-left: 10px\">\n                  批量操作 <a-icon type=\"down\" />\n                </a-button>\n      </a-dropdown>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <s-table\n        ref=\"table\"\n        size=\"middle\"\n        rowKey=\"id\"\n        :columns=\"columns\"\n        :data=\"loadData\"\n        :alert=\"options.alert\"\n        :rowSelection=\"options.rowSelection\"\n        showPagination=\"auto\"\n      >\n        <span slot=\"serial\" slot-scope=\"text, record, index\">\n          {{ index + 1 }}\n        </span>\n        <span slot=\"roleNames\"  slot-scope=\"text\">\n          <a-tag color=\"blue\">{{ text }}</a-tag>\n        </span>\n        <span slot=\"isDel\" slot-scope=\"text\">\n          <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\n        </span>\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <template>\n            <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n            <a-divider type=\"vertical\" v-action:delete />\n            <a @click=\"handleDeleteUser(record)\" v-action:delete>删除</a>\n            <a-divider type=\"vertical\" v-action:resetPwd  />\n            <a @click=\"handleResetPwd(record)\" v-action:resetPwd>密码重置</a>\n          </template>\n        </span>\n      </s-table>\n    <create-modal ref=\"createModal\" @ok=\"handleAddSubmit\" />\n    <edit-modal ref=\"editModal\" @ok=\"handleAddSubmit\" />\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport EditModal from './modules/EditUser'\nimport CreateModal from './modules/CreateUser'\nimport { queryData } from '@/api/common'\nconst statusMap = {\n  0: {\n    status: 'default',\n    text: '无效'\n  },\n  1: {\n    status: 'processing',\n    text: '有效'\n  }\n}\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    EditModal,\n    CreateModal\n  },\n  data() {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        queryOrgId: '',\n        userName: '',\n        loginName: ''\n      },\n      editData: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '登录名',\n          dataIndex: 'loginName',\n          scopedSlots: { customRender: 'loginName' }\n        },\n        {\n          title: '单位名称',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '角色名称',\n          dataIndex: 'roleNames',\n          scopedSlots: { customRender: 'roleNames' }\n        },\n        {\n          title: '用户姓名',\n          dataIndex: 'userName',\n          scopedSlots: { customRender: 'userName' }\n        },\n        {\n          title: '手机号',\n          dataIndex: 'mobile',\n          scopedSlots: { customRender: 'mobile' }\n        },\n        {\n          title: '是否生效',\n          dataIndex: 'isDel',\n\n          scopedSlots: { customRender: 'isDel' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        console.log('user 请求', parameter)\n        let id = JSON.parse(localStorage.getItem('user')).orgId\n\n        var orgId = { orgId: id }\n        return queryData(Object.assign(parameter, this.queryParam, orgId), '/userManage/queryUserMsg').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      orgNames: [],\n      roleNames: [],\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {\n    this.handleOrgList()\n    this.handleRoleList()\n  },\n  computed: {\n    title() {\n      return this.$route.meta.title\n    }\n  },\n  filters: {\n    statusFilter(type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter(type) {\n      return statusMap[type].status\n    }\n  },\n  methods: {\n    // 获取单位下的单位\n    handleOrgList() {\n      let id = JSON.parse(localStorage.getItem('user')).orgId\n      var _this = this\n      queryData({ org: id }, '/userManage/getHrOrgByPid').then(res => {\n        console.log(res)\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    tableOption() {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      }else{\n        this.options = {\n          alert: false,\n          rowSelection: null\n        },\n        this.optionAlertShow = false\n      }\n    },\n\n    onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 获取角色\n    handleRoleList() {\n      var _this = this\n      var roleId = JSON.parse(localStorage.getItem('user')).roleId\n      queryData({ role: roleId }, '/userManage/getAllSysRole').then(res => {\n        _this.roleNames = res\n      })\n    },\n\n    // 处理新增\n    handleAddSubmit() {\n      this.$refs.table.refresh(true)\n    },\n\n    // 重置密码\n    handleResetPwd(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要重置 ${record.loginName}的密码吗?`,\n        okText: '重置',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\n            var param = { id: record.id }\n            queryData(param, '/userManage/revertPassword')\n              .then(res => {\n                if (res.code == 0) {\n                  _this.$message.success('密码重置成功')\n                }\n              })\n              .catch(() => _this.$message.error(res.message))\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 表单重置\n    resetQuery () {\n      this.queryParam = { queryOrgId: '', userName: '', loginName: '' }\n      this.$refs.table.refresh(true)\n    },\n    // 显示状态修改\n    handleAddVisible () {\n      this.addVisible = true\n    },\n    handleEditVisible(record) {\n      this.editData = record\n      this.$refs.editModal.add(record)\n    },\n    handleChangeOption(value) {\n      console.log(`select ${value}`)\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDeleteUser(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.loginName} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/userManage/delUserMsg').then(res => {\n              console.log('删除用户返回值：', res)\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    deleteUsers() {\n      console.log(this.selectedRowKeys)\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/userManage/delUserMsg').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.search {\n  margin-bottom: 54px;\n}\n\n.fold {\n  width: calc(100% - 216px);\n  display: inline-block;\n}\n\n.operator {\n  margin-bottom: 18px;\n}\n\n@media screen and (max-width: 900px) {\n  .fold {\n    width: 100%;\n  }\n}\n</style>\n"]}]}