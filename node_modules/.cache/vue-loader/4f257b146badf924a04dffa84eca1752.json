{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/modules/EditChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/modules/EditChat.vue","mtime":1582121008073},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport CmdList from '../../Cmd'\n\nexport default {\n  components: {\n    CmdList\n  },\n  data () {\n    return {\n      showEditCmd: false,\n      headers: {\n        authorization: 'authorization-text'\n      },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      cmdList: [],\n      visible: false,\n      skillList: [],\n      selectSkills: [],\n      form: this.$form.createForm(this),\n      editData: {},\n      isAble: false,\n      mapList: []\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    changeCmd (event) {\n      this.editData.cmd = event\n      this.showEditCmd = true\n    },\n    add (record) {\n      if (record.cmd != '') {\n        this.showEditCmd = true\n      } else {\n        this.showEditCmd = false\n      }\n      this.visible = true;\n      this.editData = record;\n      this.isAble = record.isAble == 1 ? true : false\n      this.entityId = record.id\n      this.getCmd()\n      this.getMap()\n    },\n    getMap () {\n      let org = JSON.parse(localStorage.getItem('user')).orgId;\n      queryData({ orgId: org }, '/robotMapLib/getRobotMapLibList').then(res => {\n        this.mapList = res.result;\n      })\n    },\n    getCmdId (cmd) {\n      this.getCmd();\n      this.editData.cmd = cmd\n      this.form.setFieldsValue({\n      cmd: parseInt(cmd)\n      });\n    },\n    // 新增动作集\n    addCmd () {\n      let formData = this.form.getFieldsValue();\n      let mapId = formData.mapId == undefined ? 0 : formData.mapId\n      this.$refs.cmd.show(this.editData.title, mapId, 0)\n    },\n    // 修改动作集\n    editCmd () {\n      let formData = this.form.getFieldsValue();\n      let mapId = formData.mapId == undefined ? 0 : formData.mapId\n      this.$refs.cmd.show(this.editData.title, mapId, this.editData.cmd)\n    },\n    getCmd(){\n      let org = JSON.parse(localStorage.getItem('user')).orgId;\n      let _this = this;\n      queryData({ orgId: org }, '/cmdCollection/getCmdListByOrg').then(res => {\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        } else {\n          _this.$message.error(res.message)\n        }\n      });\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var _this = this;\n          let user = JSON.parse(localStorage.getItem('user'));\n          let orgId = user.orgId\n          let userId = user.id;\n          // let isAble =\n          values.isAble = values.isAble == false ? 0 : 1\n          var param = { \n            orgId: orgId,\n            user: userId,\n            entityId: this.editData.id,\n            cmd: this.editData.cmd }\n          console.log(values);\n          queryData(Object.assign(param, values), '/skills/saveOrUpdateXL').then(res => {\n            console.log(res)\n            if (res.code == 0) {\n              _this.$message.success('编辑成功')\n              _this.visible = false\n              _this.$emit('ok', values)\n            } else {\n              _this.$message.error(res.message)\n            }\n          })\n        }\n      })\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  }\n}\n",null]}