{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/CmdCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/CmdCollection.vue","mtime":1584669518252},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport CmdList from '../Cmd'\nimport EditCmdColl from './modules/EditCmdColl'\n// import EditRobot from './modules/EditRobot'\nimport { queryData } from '@/api/common'\nimport CreateCmdColl from './modules/CreateCmdColl'\n\nexport default {\n  name: 'TableList',\n  components: {\n    CreateCmdColl,\n    STable,\n    PageView,\n    EditCmdColl,\n    // EditRobot,\n    CmdList\n  },\n  data () {\n    return {\n      advanced: false,\n      addVisible: false,\n      editVisible: false,\n      // orgId: this.$store.getters.orgId\n      orgId: {\n        orgId:1\n      },\n      selectedItems: [],\n       // 查询参数\n      queryParam: {\n        name:'',\n        orgId:'',\n      },\n    //   editData:{},\n      cmdpage: {\n          alert: false,\n          rowSelection: null\n      },\n      // userId:localStorage.getItem('userId')\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '命令集ID',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'id' }\n        },\n        {\n          title: '循环次数',\n          dataIndex: 'circulation',\n          scopedSlots: { customRender: 'circulation' }\n\n        },\n        {\n          title: '操作时间',\n          dataIndex: 'create_date',\n          scopedSlots: { customRender: 'create_date' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId\n        return queryData(Object.assign(parameter, this.queryParam,{orgId:orgId}),'/cmdCollection/getCmdCollectionPage')\n          .then(res => {\n            console.log(res);\n            return res.result\n          })\n      },\n      mapList: [],\n      roleNames: [],\n      selectedRowKeys: [],\n    }\n  },\n  created () {\n    this.getMap();\n  },\n  computed: {\n    title () {\n      return this.$route.meta.title\n    },\n\n  },\n  methods: {\n    // 获取该单位下的地图\n   getMap() {\n      let org = JSON.parse(localStorage.getItem('user')).orgId\n      queryData({ orgId: org }, '/robotMapLib/getRobotMapLibList').then(res => {\n        console.log('-----------getMap', res)\n        this.mapList = res.result\n      })\n    },\n    onChange(date, dateString) {\n      this.queryParam.validityDate = dateString;\n      console.log(date, dateString);\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 处理新增\n    handleAddSubmit () {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery () {\n      this.queryParam = {};\n      this.$refs.table.refresh(true)\n    },\n    // 显示状态修改\n    handleAddVisible () {\n      this.addVisible = true;\n    },\n    // 编辑动作集\n    handleEditVisible(record) {\n      // let mapId = this.editSkills.map == undefined ? 0 : this.editSkills.map\n      // let cmd = this.editSkills.cmd == undefined ? 0 : this.editSkills.cmd\n      // console.log(\"编辑动作集\"+mapId+\"/\"+cmd +\"/\"+ this.businessName +\"/\"+ this.skillName)\n      // this.$refs.cmd.show(this.businessName + this.skillName,mapId,cmd)\n\n      console.info(record)\n      // this.editData = record\n      // this.$refs.editModal.add(record)\n      this.$refs.EditCmdColl.add(record)\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 搜索内容\n    searchData(){\n      this.$refs.table.refresh(true)\n    },\n    handleOk(){\n      this.$refs.table.refresh(true)\n    },\n    // 删除命令集\n    handleDelete(record){\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = {entityId: record.id};\n            queryData(id,'/cmdCollection/delete').then(res => {\n              console.log('删除返回值：',res);\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    }\n  }\n\n}\n",null]}