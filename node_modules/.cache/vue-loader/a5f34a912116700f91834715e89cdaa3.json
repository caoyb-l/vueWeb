{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\Company\\List.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\Company\\List.vue","mtime":1563522814172},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\css-loader\\index.js","mtime":1562295121744},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1562295154751},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1553149098236},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":1558661264691},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.ant-input-search{\r\n  display: none;\r\n}\r\n  .custom-tree {\r\n\r\n    /deep/ .ant-menu-item-group-title {\r\n      position: relative;\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .ant-menu-item {\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .btn {\r\n      display: none;\r\n      position: absolute;\r\n      top: 0;\r\n      right: 10px;\r\n      width: 20px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      z-index: 1050;\r\n\r\n      &:hover {\r\n        transform: scale(1.2);\r\n        transition: 0.5s all;\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/Company","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <a-row :gutter=\"8\">\r\n      <a-col :span=\"5\">\r\n        <a-input-search style= \"margin-bottom: 8px\" placeholder=\"Search\" @change=\"onChange\" />\r\n        <s-tree\r\n          :dataSource=\"orgTree\"\r\n          :openKeys.sync=\"openKeys\"\r\n          :search=\"true\"\r\n          @click=\"handleClick\"\r\n          @add=\"handleAdd\"\r\n          @titleClick=\"handleTitleClick\"></s-tree>\r\n      </a-col>\r\n    </a-row>\r\n    <!-- 新增 -->\r\n    <org-modal ref=\"modal\" @ok=\"handleSaveOk\" @close=\"handleSaveClose\" />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport STree from '@/components/Tree/Tree'\r\nimport { STable } from '@/components'\r\nimport OrgModal from './modules/OrgModal'\r\nimport { getOrgTree, getServiceList } from '@/api/manage'\r\n\r\nexport default {\r\n  name: 'TreeList',\r\n  components: {\r\n    STable,\r\n    STree,\r\n    OrgModal,\r\n    orgList:[]\r\n  },\r\n  data () {\r\n    return {\r\n      openKeys: ['key-01'],\r\n\r\n      // 查询参数\r\n      queryParam: {},\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no'\r\n        },\r\n        {\r\n          title: '成员名称',\r\n          dataIndex: 'description'\r\n        },\r\n        {\r\n          title: '登录次数',\r\n          dataIndex: 'callNo',\r\n          sorter: true,\r\n          needTotal: true,\r\n          customRender: (text) => text + ' 次'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'status',\r\n          needTotal: true\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          dataIndex: 'updatedAt',\r\n          sorter: true\r\n        },\r\n        {\r\n          table: '操作',\r\n          dataIndex: 'action',\r\n          width: '150px',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        return getServiceList(Object.assign(parameter, this.queryParam))\r\n          .then(res => {\r\n            return res.result\r\n          })\r\n      },\r\n      orgTree: [],\r\n      selectedRowKeys: [],\r\n      selectedRows: []\r\n    }\r\n  },\r\n  created () {\r\n      var id = {userid:1};\r\n      var _this = this;\r\n    getOrgTree(id).then(res => {\r\n      console.log(res);\r\n      _this.orgTree = res.result\r\n      _this.getOrgList(res.result);\r\n    })\r\n  },\r\n  methods: {\r\n    handleClick (e) {\r\n      console.log('handleClick', e)\r\n      this.queryParam = {\r\n        key: e.key\r\n      }\r\n      // this.$refs.table.refresh(true)\r\n    },\r\n    handleAdd (item) {\r\n      console.log('add button, item', item)\r\n      this.$message.info(`提示：你点了 ${item.key} - ${item.title} `)\r\n      this.$refs.modal.add(item.key)\r\n    },\r\n    handleTitleClick (item) {\r\n      console.log('handleTitleClick', item)\r\n    },\r\n    titleClick (e) {\r\n      console.log('titleClick', e)\r\n    },\r\n    handleSaveOk () {\r\n\r\n    },\r\n    handleSaveClose () {\r\n\r\n    },\r\n\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    //   获取用于搜索的list数组\r\n    getOrgList(data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const node = data[i]\r\n        const key = node.title;\r\n        const orgid = node.orgid;\r\n        const pid = node.pid;\r\n        this.orgList.push({ key, title: key, orgid : orgid, pid : pid })\r\n        if (node.children) {\r\n          this.getOrgList(node.children, node.key)\r\n        }\r\n      }\r\n    },\r\n    onChange(e) {\r\n      const value = e.target.value\r\n      console.log(this.orgList);\r\n      const expandedKeys = this.orgList\r\n        .map(item => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return this.getParentKey(item.title, this.orgTree)\r\n          }\r\n          return null\r\n        })\r\n        .filter((item, i, self) => item && self.indexOf(item) === i)\r\n      Object.assign(this, {\r\n        expandedKeys,\r\n        searchValue: value,\r\n        autoExpandParent: true\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.ant-input-search{\r\n  display: none;\r\n}\r\n  .custom-tree {\r\n\r\n    /deep/ .ant-menu-item-group-title {\r\n      position: relative;\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .ant-menu-item {\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .btn {\r\n      display: none;\r\n      position: absolute;\r\n      top: 0;\r\n      right: 10px;\r\n      width: 20px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      z-index: 1050;\r\n\r\n      &:hover {\r\n        transform: scale(1.2);\r\n        transition: 0.5s all;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}