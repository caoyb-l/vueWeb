{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\robot\\RobotList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\robot\\RobotList.vue","mtime":1566530286851},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport EditRobot from './modules/EditRobot'\r\nimport { queryData } from '@/api/common'\r\n\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    EditRobot\r\n  },\r\n  data () {\r\n    return {\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      addVisible: false,\r\n      editVisible: false,\r\n      // orgId: this.$store.getters.orgId\r\n      orgId: {\r\n        orgId:1\r\n      },\r\n      selectedItems: [],\r\n       // 查询参数\r\n      queryParam: {\r\n        code:'',\r\n        name:'',\r\n        orgId:'',\r\n        validityDate:'',\r\n      },\r\n      editData:{}, \r\n      options: {\r\n          alert: false,\r\n          rowSelection: null\r\n      },\r\n      // userId:localStorage.getItem('userId')\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        \r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '机器人编码',\r\n          dataIndex: 'code',\r\n          scopedSlots: { customRender: 'code' }\r\n        },\r\n        {\r\n          title: '单位名称',\r\n          dataIndex: 'orgName',\r\n          scopedSlots: { customRender: 'orgName' },\r\n\r\n        },\r\n        {\r\n          title: '地图名称',\r\n          dataIndex: 'mapName',\r\n          scopedSlots: { customRender: 'mapName' }\r\n        },\r\n        {\r\n          title: '有效截止时间',\r\n          dataIndex: 'validityDate',\r\n          scopedSlots: { customRender: 'validityDate' }\r\n        },\r\n        {\r\n          title: '人脸失效时间(分钟)',\r\n          dataIndex: 'faceTime',\r\n          scopedSlots: { customRender: 'faceTime' }\r\n        },\r\n        \r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        let userId = JSON.parse(localStorage.getItem('user')).id;\r\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId;\r\n        return queryData(Object.assign(parameter, this.queryParam,{userId:userId,orgId:orgId}),'/robotInfo/list')\r\n          .then(res => {\r\n            console.log(res);\r\n            return res.result\r\n          })\r\n      },\r\n      orgNames:[],\r\n      roleNames:[],\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n    }\r\n  },\r\n  created(){\r\n    this.handleOrgLists();\r\n  },\r\n  computed: {\r\n    title () {\r\n      return this.$route.meta.title\r\n    },\r\n    \r\n  },\r\n  methods: {\r\n    // 获取该用户下的所属单位\r\n    handleOrgLists(){\r\n      var _this = this;\r\n      var id = JSON.parse(localStorage.getItem('user')).id;\r\n      var param = { userId : id }\r\n      queryData(param,'/robotInfo/getOrglist').then(res => {\r\n        _this.orgNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n          \r\n      }).catch( (err) => console.log(err))\r\n    },\r\n    onChange(date, dateString) {\r\n      this.queryParam.validityDate = dateString;\r\n      console.log(date, dateString);\r\n    },\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    // 表单重置\r\n    resetQuery(){\r\n      this.queryParam = {};\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 显示状态修改\r\n    handleAddVisible(){\r\n      this.addVisible = true;\r\n    },\r\n    handleEditVisible(record){\r\n      this.editData = record;\r\n      console.log(record);\r\n      this.$refs.editModal.add(record);\r\n      this.editVisible = true;\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 搜索内容\r\n    searchData(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleOk(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record){\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.name} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = {entityId: record.id};\r\n            queryData(id,'/robotInfo/delete').then(res => {\r\n              console.log('删除返回值：',res);\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n  }\r\n\r\n}\r\n",null]}