{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/AddAiuiScene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/AddAiuiScene.vue","mtime":1581472875036},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { addData, queryData } from '@/api/common'\nimport { STable } from '@/components'\nexport default {\n  name: 'TableList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      // orgId: '',\n      robotCode: '',\n      orgNames: [],\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      selectedRowKeys: '',\n      // 查询参数\n      queryParam: {\n        orgId: '',\n        name: ''\n      },\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          // onSelectAll: this.onSelectChangeAll,\n          type: 'radio'\n        }\n      },\n      optionAlertShow: false,\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: 'AIUI场景名称',\n          dataIndex: 'descn',\n          scopedSlots: { customRender: 'descn' }\n        },\n        {\n          title: 'AIUI场景编码',\n          dataIndex: 'scene',\n          scopedSlots: { customRender: 'scene' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return queryData(Object.assign(parameter, this.queryParam, { robotCode: this.robotCode }), '/aiuiScene/getAdditableAiui').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  created () {\n  },\n  methods: {\n    show (record) {\n      this.visible = true\n      // this.orgId = record.orgId\n      this.robotCode = record.code\n      this.selectedRowKeys = ''\n    },\n    // 搜索内容\n    searchData () {\n      this.$refs.table.refresh(true)\n    },\n\n    // 表单重置\n    resetQuery () {\n      this.queryParam = { orgId: '', name: '' }\n      this.$refs.table.refresh(true)\n    },\n    handleSubmit () {\n      // console.log(this.selectedRowKeys.size)\n      // if (this.selectedRowKeys.size > 1) {\n      //   this.$message.error('只能选择一项aiui场景！')\n      //   return\n      // }\n      // if (this.selectedRowKeys.size == 0) {\n      //   this.$message.error('请选择一项aiui场景！')\n      //   return\n      // }\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          const param = { robotCode: this.robotCode, aiuiScene: this.selectedRowKeys }\n          const _this = this\n          queryData(param, '/aiuiRobot/saveAiuiRobot').then(res => {\n            console.log(res)\n            if (res.code == 0) {\n              _this.$message.success('配置成功')\n              _this.visible = false\n              _this.$emit('ok', values)\n            } else {\n              _this.$message.error(res.message)\n            }\n          })\n        }\n      })\n    },\n\n    onSelectChange (record, selected, nativeEvent) {\n      if (selected) {\n        this.selectedRowKeys = record.scene\n      } else {\n        this.selectedRowKeys = ''\n      }\n    }\n  }\n}\n",null]}