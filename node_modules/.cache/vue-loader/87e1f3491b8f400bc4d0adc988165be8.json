{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/AddTimedTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/modules/AddTimedTask.vue","mtime":1585642031956},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nconst week = ['1', '2', '3', '4', '5', '6', '7']\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data () {\n    return {\n      headers: {\n        authorization: 'authorization-text'\n      },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      week,\n      showTimePoint: false,\n      showWeek: false,\n      showTime: false,\n      timePoint: '',\n      time: '',\n      weekList: [], // 日期集合\n      cmdList: [], // 命令集集合\n      mapList: [], // 地图集合\n      showEditCmd: false,\n      cmd: '',\n      queryParam: { orgId: '-1' },\n      orgNames: [],\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '机器人名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'code'\n        }\n      ],\n      loadData: parameter => {\n        console.log('请求啦')\n        return queryData(\n          Object.assign(parameter, this.queryParam),\n          '/robotInfo/loadRobotListByOrg'\n        ).then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      }\n    }\n  },\n  created () {\n    this.getCmd()\n    this.getMap()\n    this.handleOrgList()\n  },\n  methods: {\n    // 获取单位下的单位\n    handleOrgList () {\n      const id = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { org: id }\n      var _this = this\n      queryData(param, '/userManage/getHrOrgByPid').then(res => {\n        _this.orgNames = res.result\n        if (res.code !== 0) {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    getRobotList (value) {\n      this.queryParam.orgId = value\n      this.$refs.table.refresh()\n    },\n    // filterOption (input, option) {\n    //   return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    // },\n    // 选择机器人\n    onSelectChange (record, selected, nativeEvent) {\n      console.log(record, selected)\n      if (selected) {\n        this.selectedRowKeys.add(record.code)\n      } else {\n        this.selectedRowKeys.delete(record.code)\n      }\n    },\n    onSelectChangeAll (selected, changeRows) {\n      if (selected) {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.add(value.code)\n        })\n      } else {\n        this.selectedRowKeys.clear()\n      }\n    },\n    changeCmd (event) {\n      this.cmd = event\n      this.showEditCmd = true\n    },\n    getCmdId (cmd) {\n      console.log(cmd)\n      this.getCmd()\n      this.form.setFieldsValue({\n        cmd: parseInt(cmd)\n        // 'cmd': parseInt(cmd)\n      })\n    },\n    // 修改动作集\n    editCmd () {\n      const formData = this.form.getFieldsValue()\n      const mapId = formData.mapId === undefined ? 0 : formData.mapId\n      console.log(mapId)\n      this.$refs.cmd.show('编辑动作集', mapId, this.cmd)\n    },\n    // 新增动作集\n    addCmd () {\n      const formData = this.form.getFieldsValue()\n      const mapId = formData.mapId === undefined ? 0 : formData.mapId\n      this.$refs.cmd.show('新增动作集', mapId, 0)\n    },\n    getMap () {\n      const org = JSON.parse(localStorage.getItem('user')).orgId\n      queryData({ orgId: org }, '/robotMapLib/getRobotMapLibList').then(res => {\n        console.log('-----------getMap', res)\n        this.mapList = res.result\n      })\n    },\n    getCmd () {\n      const org = JSON.parse(localStorage.getItem('user')).orgId\n      const _this = this\n      queryData({ orgId: org }, '/cmdCollection/getCmdListByOrg').then(res => {\n        console.log(res)\n        if (res.code === 0) {\n          _this.cmdList = res.cmdList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    timePointStr (dates, dateStrings) {\n      this.timePoint = dateStrings\n    },\n    timeStr (dates, dateStrings) {\n      this.time = dateStrings\n    },\n    // 控制显示内容\n    display (value) {\n      console.log(value)\n      if (value === '1') {\n        this.showTime = true\n        this.showTimePoint = false\n        this.showWeek = false\n      }\n      if (value === '2') {\n        this.showTime = true\n        this.showTimePoint = false\n        this.showWeek = true\n      }\n      if (value === '3') {\n        this.showTime = true\n        this.showTimePoint = true\n        this.showWeek = false\n      }\n      console.log(this.showTime)\n      console.log(this.showTimePoint)\n      console.log(this.showWeek)\n    },\n    selectWeek (value) {\n      // console.log(value)\n      this.weekList = value\n      console.log(this.weekList)\n    },\n    add () {\n      this.form.resetFields()\n      this.showEditCmd = false\n      this.queryParam.orgId = '-1'\n      this.visible = true\n      this.showTime = false\n      this.showTimePoint = false\n      this.showWeek = false\n      this.selectedRowKeys.clear()\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log(values)\n          values.time = this.time\n          values.timePoint = this.timePoint\n          var _this = this\n          setTimeout(() => {\n            var param = Object.assign(values, { robotCode: [...this.selectedRowKeys] })\n            queryData(param, '/timedTask/addTaskMsg').then(res => {\n              if (res.code === 0) {\n                _this.$message.success('新建成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n              _this.visible = false\n              _this.confirmLoading = false\n              _this.$emit('ok', values)\n              // 重置输入框内容\n              _this.form.resetFields()\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false\n    }\n  }\n}\n",null]}