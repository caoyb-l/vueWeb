{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/company/ComList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/company/ComList.vue","mtime":1571637124194},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryData } from '@/api/common'\nimport DetailList from '@/components/tools/DetailList'\nconst DetailListItem = DetailList.Item\nexport default {\n  components: {\n    DetailList,\n    DetailListItem,\n  },\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      orgTree: [],\n      orgList: [],\n      comInfo:[],\n      pid:'',\n      isSelect:false,\n      addVisible:false,\n      editVisible:false,\n      addForm:{\n        name:'',\n        contact:'',\n        contactWay:'',\n        descn:''\n      },\n      editForm:{\n      },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n    }\n  },\n  beforeMount() {\n    this.getDateTree();\n  },\n  methods: {\n    // 新增\n    handleAdd(){\n      const { form: { validateFields } } = this;\n      var _this = this;\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = {pid:this.pid,...values.addForm};\n        console.log(param);\n\n        queryData(param,'/hrOrg/save').then(res => {\n           if(res.code == 0){\n             _this.$message.success('新建成功');\n             _this.addVisible = false;\n             _this.form.resetFields();\n             _this.getDateTree();\n           } else {\n              _this.$message.error(res.message);\n           }\n        });\n\n      });\n    },\n    // 编辑\n    handleEdit(){\n      const { form: { validateFields } } = this;\n      var _this = this;\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n        var param = {entityId:this.pid,...values.editForm};\n        console.log(param);\n\n        queryData(param,'/hrOrg/save').then(res => {\n           if(res.code == 0){\n             _this.$message.success('编辑成功');\n             _this.editVisible = false;\n             _this.form.resetFields();\n             _this.getDateTree();\n             _this.getComInfo(_this.pid);\n           } else {\n              _this.$message.error(res.message);\n           }\n        });\n\n      });\n    },\n    // 删除\n    handleDelete(){\n      var _this = this;\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除该单位吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var param = {entityId:_this.pid};\n            console.log(param);\n            queryData(param,'/hrOrg/delete').then(res => {\n              console.log(res)\n              if(res.code == 0){\n                _this.$message.success('删除成功');\n                _this.getDateTree();\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 处理显隐\n    handleAddVisible(){\n      if(this.pid != '' ) {\n        this.addVisible = true;\n      }\n    },\n    // 编辑\n    handleEditVisible(){\n      this.form.resetFields();\n      this.editVisible = true;\n      this.editForm = this.comInfo;\n    },\n    //   获取树形结构数据\n    getDateTree() {\n      var id = JSON.parse(localStorage.getItem('user')).id;\n      var _this = this\n      queryData({ userid: id },'hrOrg/list').then(res => {\n        console.log(res);\n        if(res.code == 0){\n          _this.orgTree = res.result\n          _this.getOrgList(res.result);\n          var expandedKeys=[];\n           res.result.map((value,index)=>{\n             if(value.children){\n               var item=value.children;\n               item.map((value,index)=>{\n                  expandedKeys.push(value.key);\n               })\n             }else{\n                expandedKeys.push(value.key);\n             }\n           })\n           _this.expandedKeys =expandedKeys;\n\n        }\n      })\n    },\n    //   获取用于搜索的list数组\n    getOrgList(data) {\n      for (let i = 0; i < data.length; i++) {\n        const node = data[i]\n        const key = node.key;\n        const title = node.title;\n        const orgid = node.orgId;\n        const pid = node.pid;\n        this.orgList.push({ key, title: title, orgid : orgid, pid : pid })\n        if (node.children) {\n          this.getOrgList(node.children)\n        }\n      }\n    },\n    // 获取当前点击单位\n    onSelect(key){\n      this.getComInfo(key[0]);\n\n    },\n    getComInfo(pid){\n      var param = {orgId:pid};\n      var _this = this;\n      queryData(param,'/hrOrg/getOrgMessage').then(res => {\n        console.log(res);\n        if(res.code == 0){\n          _this.comInfo  = Object(res.hrOrg);\n          if(Object.keys(_this.comInfo).length){\n            _this.isSelect = true;\n            _this.pid = pid;\n          } else {\n            _this.isSelect = false;\n          }\n        }\n      });\n    },\n    onExpand(expandedKeys) {\n      //console.log(expandedKeys);\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    // 搜索\n    onChange(e) {\n      const value = e.target.value\n\n      const expandedKeys = this.orgList\n        .map(item => {\n          if (item.title.indexOf(value) > -1) {\n            return this.getParentKey(item.title, this.orgTree)\n          }\n          return null\n        })\n        .filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      })\n    },\n    // 定位树形结构的数据\n    getParentKey(title, tree) {\n      let parentKey = 0\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.title === title)) {\n            parentKey = node.key\n          } else if (this.getParentKey(title, node.children)) {\n            parentKey = this.getParentKey(title, node.children)\n          }\n        }\n      }\n      return parentKey\n    }\n  }\n}\n",null]}