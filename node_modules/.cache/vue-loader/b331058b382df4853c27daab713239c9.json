{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/PhoneApp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/PhoneApp.vue","mtime":1578713140384},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport EditForm from './modules/EditPhoneApp'\r\nimport CreateForm from './modules/CreatePhoneApp'\r\nimport { queryData } from '@/api/common'\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    EditForm,\r\n    CreateForm\r\n  },\r\n  data () {\r\n    return {\r\n      headers: {\r\n        authorization: 'authorization-text',\r\n      },\r\n       // 查询参数\r\n      queryParam: {\r\n        appVersion:''\r\n      },\r\n      editData:{}, \r\n      options:{\r\n          alert: false,\r\n          rowSelection: null\r\n      },\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        \r\n        {\r\n          title: '名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '版本号',\r\n          dataIndex: 'appVersion',\r\n          scopedSlots: { customRender: 'appVersion' }\r\n        },\r\n        {\r\n          title: '描述',\r\n          dataIndex: 'contents',\r\n          scopedSlots: { customRender: 'contents' },\r\n\r\n        },\r\n        {\r\n          title: '路径',\r\n          dataIndex: 'url',\r\n          scopedSlots: { customRender: 'url' }\r\n        },\r\n        {\r\n          title: '二维码',\r\n          dataIndex: 'QrCodeImage',\r\n          scopedSlots: { customRender: 'QrCodeImage' }\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          dataIndex: 'createDate',\r\n          scopedSlots: { customRender: 'createDate' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        console.log('App 请求',parameter);\r\n        return queryData(Object.assign(parameter, this.queryParam),'/AppManage/queryAppMsg')\r\n          .then(res => {\r\n            console.log(res);\r\n            return res.result\r\n          })\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    title () {\r\n      return this.$route.meta.title\r\n    },\r\n  },\r\n  methods: {\r\n    handleChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n            this.$message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n            this.$message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    },\r\n    // 处理更新\r\n    handleRefresh(){\r\n      this.$refs.table.refresh()\r\n    },\r\n    // 表单重置\r\n    resetQuery(){\r\n      this.queryParam = {};\r\n      this.$refs.table.refresh(true);\r\n    },\r\n    handleEditVisible(record){\r\n      this.$refs.editModal.add(record);\r\n    },\r\n    // 搜索内容\r\n    searchData(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDeleteUser(record){\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.name} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var param = {id: record.id,url:record.url};\r\n            queryData(param,'/AppManage/delRobotAppMsg').then(res => {\r\n              console.log('删除返回值：',res);\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.$refs.table.refresh()\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n  }\r\n\r\n}\r\n",null]}