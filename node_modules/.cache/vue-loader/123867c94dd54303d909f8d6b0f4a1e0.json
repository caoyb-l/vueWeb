{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/AppImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/AppImage.vue","mtime":1578713140981},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable, Ellipsis } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateImage from './modules/CreateImage'\nimport EditAllImage from './modules/EditAllImage'\nimport EditImage from './modules/EditImage'\nexport default {\n  name: 'TableList',\n  components: {\n    Ellipsis,\n    STable,\n    PageView,\n    CreateImage,\n    EditAllImage,\n    EditImage\n  },\n  data () {\n    return {\n      appImageList: [\n        {\n          'typeId': 0,\n          'type': '开机'\n        }, {\n          'typeId': 1,\n          'type': '休息'\n        }, {\n          'typeId': 2,\n          'type': 'LOGO'\n        }, {\n          'typeId': 3,\n          'type': '主页'\n        }\n      ],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '文件名称',\n          dataIndex: 'fileName',\n          scopedSlots: { customRender: 'fileName' }\n        },\n        {\n          title: '照片',\n          dataIndex: 'fileUrl',\n          scopedSlots: { customRender: 'fileUrl' }\n        },\n        {\n          title: '显示类型',\n          dataIndex: 'type'\n        }, {\n          title: '机器人',\n          dataIndex: 'robotName'\n        }, {\n          title: '编码',\n          dataIndex: 'code'\n        }, {\n          title: '备注',\n          dataIndex: 'descn',\n          scopedSlots: { customRender: 'descn' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId\n        console.log('user 请求', parameter)\n        var params = { orgId: orgId }\n        return queryData(Object.assign(parameter, params, this.queryParam), '/appImage/loadPageList').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  // computed: {\n  //   title() {\n  //     return this.$route.meta.title\n  //   }\n  // },\n  created () {\n    // this.getCmdList()\n  },\n  methods: {\n    tableOption () {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 处理刷新\n    handleRefresh () {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery () {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible (record) {\n      this.$refs.editImage.add(record)\n    },\n    // 删除\n    handleDelete (record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/appImage/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    handleDeletes () {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/appImage/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["AppImage.vue"],"names":[],"mappingsfile":"AppImage.vue","sourceRoot":"src/views/robot","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"24\">\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"机器人编码\">\n              <a-input v-model=\"queryParam.code\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"24\">\n            <a-form-item label=\"显示类型\">\n              <a-select\n                showSearch\n                placeholder=\"选择触发指令\"\n                optionFilterProp=\"children\"\n                v-model=\"queryParam.type\"\n                :filterOption=\"filterOption\">\n                <a-select-option v-for=\"(item) in appImageList\" :key=\"item.typeId\" :value=\"item.typeId\" >{{ item.type }}</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"10\" :sm=\"24\">\n            <a-button type=\"primary\" @click=\"handleRefresh()\">查询</a-button>\n            <a-button style=\"margin-left: 10px\" @click=\"resetQuery()\">重置</a-button>\n            <a-button style=\"margin-left: 10px\" type=\"primary\" icon=\"plus\" @click=\"$refs.editAllImage.add()\">批量修改</a-button>\n            <a-button style=\"margin-left: 10px\" type=\"primary\" icon=\"plus\" @click=\"$refs.createImage.add()\">新建</a-button>\n            <a-button style=\"margin-left: 10px\" type=\"dashed\" @click=\"tableOption\">{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\n            <a-dropdown style=\"margin-left: 10px\" v-if=\"selectedRowKeys.length > 0\">\n              <a-menu slot=\"overlay\">\n                <a-menu-item key=\"1\" v-action:delete @click=\"handleDeletes()\"><a-icon type=\"delete\" />删除</a-menu-item>\n              </a-menu>\n              <a-button style=\"margin-left: 8px\">批量操作<a-icon type=\"down\" /></a-button>\n            </a-dropdown>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <s-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :alert=\"options.alert\"\n      :rowSelection=\"options.rowSelection\"\n      showPagination=\"auto\"\n    >\n      <!-- 表单文字过长，省略展示文字内容 -->\n      <span slot=\"fileName\" slot-scope=\"text\">\n         <ellipsis :length=\"10\" tooltip>{{ text }}</ellipsis>\n      </span>\n      <span slot=\"descn\" slot-scope=\"text\">\n         <ellipsis :length=\"10\" tooltip>{{ text }}</ellipsis>\n      </span>\n      <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n      <span slot=\"fileUrl\" slot-scope=\"text\">\n        <a-popover>\n          <template slot=\"content\">\n            <img :src=\"text\" style=\"width:200px;\" />\n          </template>\n          <a-icon type=\"appstore\" />\n        </a-popover>\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <template>\n          <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n          <a-divider type=\"vertical\" />\n          <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\n        </template>\n      </span>\n    </s-table>\n    <create-image ref=\"createImage\" @ok=\"handleRefresh\"></create-image>\n    <edit-all-image ref=\"editAllImage\" @ok=\"handleRefresh\"></edit-all-image>\n    <edit-image ref=\"editImage\" @ok=\"handleRefresh\"></edit-image>\n  </a-card>\n</template>\n\n<script>\nimport { STable, Ellipsis } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateImage from './modules/CreateImage'\nimport EditAllImage from './modules/EditAllImage'\nimport EditImage from './modules/EditImage'\nexport default {\n  name: 'TableList',\n  components: {\n    Ellipsis,\n    STable,\n    PageView,\n    CreateImage,\n    EditAllImage,\n    EditImage\n  },\n  data () {\n    return {\n      appImageList: [\n        {\n          'typeId': 0,\n          'type': '开机'\n        }, {\n          'typeId': 1,\n          'type': '休息'\n        }, {\n          'typeId': 2,\n          'type': 'LOGO'\n        }, {\n          'typeId': 3,\n          'type': '主页'\n        }\n      ],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '文件名称',\n          dataIndex: 'fileName',\n          scopedSlots: { customRender: 'fileName' }\n        },\n        {\n          title: '照片',\n          dataIndex: 'fileUrl',\n          scopedSlots: { customRender: 'fileUrl' }\n        },\n        {\n          title: '显示类型',\n          dataIndex: 'type'\n        }, {\n          title: '机器人',\n          dataIndex: 'robotName'\n        }, {\n          title: '编码',\n          dataIndex: 'code'\n        }, {\n          title: '备注',\n          dataIndex: 'descn',\n          scopedSlots: { customRender: 'descn' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId\n        console.log('user 请求', parameter)\n        var params = { orgId: orgId }\n        return queryData(Object.assign(parameter, params, this.queryParam), '/appImage/loadPageList').then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    }\n  },\n  // computed: {\n  //   title() {\n  //     return this.$route.meta.title\n  //   }\n  // },\n  created () {\n    // this.getCmdList()\n  },\n  methods: {\n    tableOption () {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: () => {\n              this.selectedRowKeys = []\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    filterOption (input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 处理刷新\n    handleRefresh () {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery () {\n      this.queryParam = {}\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible (record) {\n      this.$refs.editImage.add(record)\n    },\n    // 删除\n    handleDelete (record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = { id: [record.id] }\n            queryData(id, '/appImage/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    },\n    // 批量删除\n    handleDeletes () {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = { id: _this.selectedRowKeys }\n            queryData(ids, '/appImage/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.selectedRowKeys = []\n                _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.search {\n  margin-bottom: 54px;\n}\n\n.fold {\n  width: calc(100% - 216px);\n  display: inline-block;\n}\n\n.operator {\n  margin-bottom: 18px;\n}\n\n@media screen and (max-width: 900px) {\n  .fold {\n    width: 100%;\n  }\n}\n</style>\n"]}]}