{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/layouts/BasicLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/layouts/BasicLayout.vue","mtime":1571637125643},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { triggerWindowResizeEvent } from '@/utils/util'\r\nimport { mapState, mapActions } from 'vuex'\r\nimport { mixin, mixinDevice } from '@/utils/mixin'\r\nimport config from '@/config/defaultSettings'\r\n\r\nimport RouteView from './RouteView'\r\nimport MultiTab from '@/components/MultiTab'\r\nimport SideMenu from '@/components/Menu/SideMenu'\r\nimport GlobalHeader from '@/components/GlobalHeader'\r\nimport GlobalFooter from '@/components/GlobalFooter'\r\nimport SettingDrawer from '@/components/SettingDrawer'\r\n\r\nexport default {\r\n  name: 'BasicLayout',\r\n  mixins: [mixin, mixinDevice],\r\n  components: {\r\n    RouteView,\r\n    MultiTab,\r\n    SideMenu,\r\n    GlobalHeader,\r\n    GlobalFooter,\r\n    SettingDrawer\r\n  },\r\n  data () {\r\n    return {\r\n      production: config.production,\r\n      collapsed: false,\r\n      menus: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      // 动态主路由\r\n      mainMenu: state => state.permission.addRouters\r\n    }),\r\n    contentPaddingLeft () {\r\n      if (!this.fixSidebar || this.isMobile()) {\r\n        return '0'\r\n      }\r\n      if (this.sidebarOpened) {\r\n        return '256px'\r\n      }\r\n      return '80px'\r\n    }\r\n  },\r\n  watch: {\r\n    sidebarOpened (val) {\r\n      this.collapsed = !val\r\n    }\r\n  },\r\n  created () {\r\n    this.menus = this.mainMenu.find(item => item.path === '/').children\r\n    this.collapsed = !this.sidebarOpened\r\n  },\r\n  mounted () {\r\n    const userAgent = navigator.userAgent\r\n    if (userAgent.indexOf('Edge') > -1) {\r\n      this.$nextTick(() => {\r\n        this.collapsed = !this.collapsed\r\n        setTimeout(() => {\r\n          this.collapsed = !this.collapsed\r\n        }, 16)\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['setSidebar']),\r\n    toggle () {\r\n      this.collapsed = !this.collapsed\r\n      this.setSidebar(!this.collapsed)\r\n      triggerWindowResizeEvent()\r\n    },\r\n    paddingCalc () {\r\n      let left = ''\r\n      if (this.sidebarOpened) {\r\n        left = this.isDesktop() ? '256px' : '80px'\r\n      } else {\r\n        left = (this.isMobile() && '0') || ((this.fixSidebar && '80px') || '0')\r\n      }\r\n      return left\r\n    },\r\n    menuSelect () {\r\n      if (!this.isDesktop()) {\r\n        this.collapsed = false\r\n      }\r\n    },\r\n    drawerClose () {\r\n      this.collapsed = false\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["BasicLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BasicLayout.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\r\n  <a-layout :class=\"['layout', device]\">\r\n    <!-- SideMenu -->\r\n    <a-drawer\r\n      v-if=\"isMobile()\"\r\n      placement=\"left\"\r\n      :wrapClassName=\"`drawer-sider ${navTheme}`\"\r\n      :closable=\"false\"\r\n      :visible=\"collapsed\"\r\n      @close=\"drawerClose\"\r\n    >\r\n      <side-menu\r\n        mode=\"inline\"\r\n        :menus=\"menus\"\r\n        :theme=\"navTheme\"\r\n        :collapsed=\"false\"\r\n        :collapsible=\"true\"\r\n        @menuSelect=\"menuSelect\"\r\n      ></side-menu>\r\n    </a-drawer>\r\n\r\n    <side-menu\r\n      v-else-if=\"isSideMenu()\"\r\n      mode=\"inline\"\r\n      :menus=\"menus\"\r\n      :theme=\"navTheme\"\r\n      :collapsed=\"collapsed\"\r\n      :collapsible=\"true\"\r\n    ></side-menu>\r\n\r\n    <a-layout :class=\"[layoutMode, `content-width-${contentWidth}`]\" :style=\"{ paddingLeft: contentPaddingLeft, minHeight: '100vh' }\">\r\n      <!-- layout header -->\r\n      <global-header\r\n        :mode=\"layoutMode\"\r\n        :menus=\"menus\"\r\n        :theme=\"navTheme\"\r\n        :collapsed=\"collapsed\"\r\n        :device=\"device\"\r\n        @toggle=\"toggle\"\r\n      />\r\n\r\n      <!-- layout content -->\r\n      <a-layout-content :style=\"{ height: '100%', margin: '24px 24px 0', paddingTop: fixedHeader ? '64px' : '0' }\">\r\n        <multi-tab v-if=\"multiTab\"></multi-tab>\r\n        <transition name=\"page-transition\">\r\n          <route-view />\r\n        </transition>\r\n      </a-layout-content>\r\n\r\n      <!-- layout footer -->\r\n      <a-layout-footer>\r\n        <global-footer />\r\n      </a-layout-footer>\r\n\r\n      <!-- Setting Drawer (show in development mode) -->\r\n      <setting-drawer v-if=\"!production\"></setting-drawer>\r\n    </a-layout>\r\n  </a-layout>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { triggerWindowResizeEvent } from '@/utils/util'\r\nimport { mapState, mapActions } from 'vuex'\r\nimport { mixin, mixinDevice } from '@/utils/mixin'\r\nimport config from '@/config/defaultSettings'\r\n\r\nimport RouteView from './RouteView'\r\nimport MultiTab from '@/components/MultiTab'\r\nimport SideMenu from '@/components/Menu/SideMenu'\r\nimport GlobalHeader from '@/components/GlobalHeader'\r\nimport GlobalFooter from '@/components/GlobalFooter'\r\nimport SettingDrawer from '@/components/SettingDrawer'\r\n\r\nexport default {\r\n  name: 'BasicLayout',\r\n  mixins: [mixin, mixinDevice],\r\n  components: {\r\n    RouteView,\r\n    MultiTab,\r\n    SideMenu,\r\n    GlobalHeader,\r\n    GlobalFooter,\r\n    SettingDrawer\r\n  },\r\n  data () {\r\n    return {\r\n      production: config.production,\r\n      collapsed: false,\r\n      menus: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      // 动态主路由\r\n      mainMenu: state => state.permission.addRouters\r\n    }),\r\n    contentPaddingLeft () {\r\n      if (!this.fixSidebar || this.isMobile()) {\r\n        return '0'\r\n      }\r\n      if (this.sidebarOpened) {\r\n        return '256px'\r\n      }\r\n      return '80px'\r\n    }\r\n  },\r\n  watch: {\r\n    sidebarOpened (val) {\r\n      this.collapsed = !val\r\n    }\r\n  },\r\n  created () {\r\n    this.menus = this.mainMenu.find(item => item.path === '/').children\r\n    this.collapsed = !this.sidebarOpened\r\n  },\r\n  mounted () {\r\n    const userAgent = navigator.userAgent\r\n    if (userAgent.indexOf('Edge') > -1) {\r\n      this.$nextTick(() => {\r\n        this.collapsed = !this.collapsed\r\n        setTimeout(() => {\r\n          this.collapsed = !this.collapsed\r\n        }, 16)\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['setSidebar']),\r\n    toggle () {\r\n      this.collapsed = !this.collapsed\r\n      this.setSidebar(!this.collapsed)\r\n      triggerWindowResizeEvent()\r\n    },\r\n    paddingCalc () {\r\n      let left = ''\r\n      if (this.sidebarOpened) {\r\n        left = this.isDesktop() ? '256px' : '80px'\r\n      } else {\r\n        left = (this.isMobile() && '0') || ((this.fixSidebar && '80px') || '0')\r\n      }\r\n      return left\r\n    },\r\n    menuSelect () {\r\n      if (!this.isDesktop()) {\r\n        this.collapsed = false\r\n      }\r\n    },\r\n    drawerClose () {\r\n      this.collapsed = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import url('../components/global.less');\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"page-transition\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the page transition by editing\r\n * these styles.\r\n */\r\n\r\n.page-transition-enter {\r\n  opacity: 0;\r\n}\r\n\r\n.page-transition-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n.page-transition-enter .page-transition-container,\r\n.page-transition-leave-active .page-transition-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n"]}]}