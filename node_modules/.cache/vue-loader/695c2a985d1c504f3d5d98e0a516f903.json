{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/FaceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/FaceList.vue","mtime":1578713141547},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport EditModal from './modules/EditFace'\nimport CreateModal from './modules/CreateFace'\nimport RobotCmd from './modules/RobotCmd'\nimport EditRobot from './modules/EditRobotcmd'\nimport { queryData } from '@/api/common'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    EditModal,\n    CreateModal,\n    RobotCmd,\n    EditRobot\n  },\n  data() {\n    return {\n      roleId: 0,\n      roleName: '',\n      mdl: {},\n      // 查询参数\n      queryParam: { name: '' },\n      // 表头\n      columns: [\n        // {\n        //   title: 'id',\n        //   dataIndex: 'id'\n        // },\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '人脸名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '文件名称',\n          dataIndex: 'photo'\n        },\n        {\n          title: '照片',\n          dataIndex: 'photoUrl',\n          scopedSlots: { customRender: 'photoUrl' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'actionDate'\n        },\n        {\n          title: '命令集',\n          dataIndex: 'cmdName'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n\n      loadData: parameter => {\n        let orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, this.queryParam,{org:orgId}),'/faceManage/queryFaceMsg').then(res => {\n          return res.result\n        })\n      }\n    }\n  },\n  methods: {\n    handleEdit(record) {\n      this.$refs.editModal.edit(record)\n    },\n    UpdateRobotCmd(){\n      this.$message.error('修改')\n    },\n    // 删除某一个机器人命令\n    DelRobotCmd(record){\n      console.log(record);\n      var _this = this;\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.robotCode} 的命令集吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [record.id]};\n            queryData(id,'/faceManage/delRobotFace').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n    // 配置机器人命令集\n    handleRobotCmd (record) {\n      this.$refs.robotCmd.show(record);\n    },\n    handleOk() {\n      // 新增/修改 成功时，重载列表\n      this.$refs.table.refresh(true)\n    },\n    // 处理重置\n    handleReset() {\n      this.queryParam.name = ''\n      this.$refs.table.refresh()\n    },\n    // 删除\n    handleDel(record){\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 300)\n            var id = {id: [{id:record.id,photo:record.photo}]};\n            queryData(id,'/faceManage/delFaceMsg').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n  }\n}\n",null]}