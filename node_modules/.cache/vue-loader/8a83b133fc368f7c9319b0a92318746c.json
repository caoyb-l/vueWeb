{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robotTheme/robotTheme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robotTheme/robotTheme.vue","mtime":1587786141789},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateModel from './modules/CreateTheme'\nimport EditModel from './modules/EditTheme'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateModel,\n    EditModel\n  },\n  data() {\n    return {\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      cmdTypeList: [],\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '模版名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '单位',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '系统版本',\n          dataIndex: 'robot_Version',\n          scopedSlots: { customRender: 'robot_Version' }\n        },\n        {\n          title: '创建人',\n          dataIndex: 'created_User',\n          scopedSlots: { customRender: 'created_User' }\n        },\n        {\n          title: '时间',\n          dataIndex: 'codecreated_Time',\n          scopedSlots: { customRender: 'created_Time' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        const org = JSON.parse(localStorage.getItem('user')).orgId\n        const user = JSON.parse(localStorage.getItem('user')).id\n        return queryData(Object.assign(parameter,{ orgId: org, user: user},this.queryParam), '/robotTheme/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  computed: {\n    // title() {\n    //   return this.$route.meta.title\n    // }\n  },\n  methods: {\n    // 处理刷新\n    handleRefresh() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {\n          name: ''\n        }\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record) {\n      this.$refs.editModal.edit(record)\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 200)\n            var id = { entityId: record.id }\n            queryData(id, '/robotTheme/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["robotTheme.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"robotTheme.vue","sourceRoot":"src/views/robotTheme","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"6\" :sm=\"24\">\n            <a-form-item label=\"主题名称\">\n              <a-input v-model=\"queryParam.name\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n            <a-button style=\"margin-left: 10px\" @click=\"resetQuery()\">重置</a-button>\n            <a-button style=\"margin-left: 10px\" type=\"primary\" icon=\"plus\" @click=\"$refs.createModal.add()\">新建</a-button>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <s-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      showPagination=\"auto\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <template>\n          <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n          <a-divider type=\"vertical\" />\n          <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\n        </template>\n      </span>\n    </s-table>\n    <create-model ref=\"createModal\" @ok=\"handleRefresh\"></create-model>\n    <edit-model ref=\"editModal\" @ok=\"handleRefresh\"></edit-model>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateModel from './modules/CreateTheme'\nimport EditModel from './modules/EditTheme'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateModel,\n    EditModel\n  },\n  data() {\n    return {\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      cmdTypeList: [],\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '模版名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '单位',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '系统版本',\n          dataIndex: 'robot_Version',\n          scopedSlots: { customRender: 'robot_Version' }\n        },\n        {\n          title: '创建人',\n          dataIndex: 'created_User',\n          scopedSlots: { customRender: 'created_User' }\n        },\n        {\n          title: '时间',\n          dataIndex: 'codecreated_Time',\n          scopedSlots: { customRender: 'created_Time' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        const org = JSON.parse(localStorage.getItem('user')).orgId\n        const user = JSON.parse(localStorage.getItem('user')).id\n        return queryData(Object.assign(parameter,{ orgId: org, user: user},this.queryParam), '/robotTheme/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  computed: {\n    // title() {\n    //   return this.$route.meta.title\n    // }\n  },\n  methods: {\n    // 处理刷新\n    handleRefresh() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {\n          name: ''\n        }\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record) {\n      this.$refs.editModal.edit(record)\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 200)\n            var id = { entityId: record.id }\n            queryData(id, '/robotTheme/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}