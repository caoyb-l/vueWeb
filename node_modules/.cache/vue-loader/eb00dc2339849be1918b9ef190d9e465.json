{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\RobotList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\RobotList.vue","mtime":1565147662346},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport EditRobot from './modules/EditRobot'\r\nimport CreateRobot from './modules/CreateRobot'\r\nimport { queryData } from '@/api/common'\r\n\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    EditRobot,\r\n    CreateRobot\r\n  },\r\n  data () {\r\n    return {\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      addVisible: false,\r\n      editVisible: false,\r\n      // orgId: this.$store.getters.orgId\r\n      orgId: {\r\n        orgId:1\r\n      },\r\n      selectedItems: [],\r\n       // 查询参数\r\n      queryParam: {\r\n        code:'',\r\n        name:'',\r\n        orgId:'',\r\n        validityDate:'',\r\n      },\r\n      editData:{}, \r\n      options: {\r\n          alert: false,\r\n          rowSelection: null\r\n      },\r\n      // userId:localStorage.getItem('userId')\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        \r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '机器人编码',\r\n          dataIndex: 'code',\r\n          scopedSlots: { customRender: 'code' }\r\n        },\r\n        {\r\n          title: '单位名称',\r\n          dataIndex: 'orgName',\r\n          scopedSlots: { customRender: 'orgName' },\r\n\r\n        },\r\n        {\r\n          title: '地图名称',\r\n          dataIndex: 'mapName',\r\n          scopedSlots: { customRender: 'mapName' }\r\n        },\r\n        {\r\n          title: '有效截止时间',\r\n          dataIndex: 'validityDate',\r\n          scopedSlots: { customRender: 'validityDate' }\r\n        },\r\n        {\r\n          title: '人脸失效时间(分钟)',\r\n          dataIndex: 'faceTime',\r\n          scopedSlots: { customRender: 'faceTime' }\r\n        },\r\n        \r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        var userId = JSON.parse(localStorage.getItem('user')).id;\r\n        return queryData(Object.assign(parameter, this.queryParam,{userId:userId}),'/robotInfo/list')\r\n          .then(res => {\r\n            console.log(res);\r\n            return res.result\r\n          })\r\n      },\r\n      orgNames:[],\r\n      roleNames:[],\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n    }\r\n  },\r\n  created(){\r\n    this.handleOrgLists();\r\n  },\r\n  computed: {\r\n    title () {\r\n      return this.$route.meta.title\r\n    },\r\n    \r\n  },\r\n  methods: {\r\n    // 获取该用户下的所属单位\r\n    handleOrgLists(){\r\n      var _this = this;\r\n      var id = localStorage.getItem('userId');\r\n      var param = { userId : id }\r\n      queryData(param,'/robotInfo/getOrglist').then(res => {\r\n        _this.orgNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n          \r\n      }).catch( (err) => console.log(err))\r\n    },\r\n    onChange(date, dateString) {\r\n      this.queryParam.validityDate = dateString;\r\n      console.log(date, dateString);\r\n    },\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    // 表单重置\r\n    resetQuery(){\r\n      this.queryParam = {};\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 显示状态修改\r\n    handleAddVisible(){\r\n      this.addVisible = true;\r\n    },\r\n    handleEditVisible(record){\r\n      this.editData = record;\r\n      console.log(record);\r\n      this.$refs.editModal.add(record);\r\n      this.editVisible = true;\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 搜索内容\r\n    searchData(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleOk(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record){\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.name} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = {entityId: record.id};\r\n            queryData(id,'/robotInfo/delete').then(res => {\r\n              console.log('删除返回值：',res);\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n  }\r\n\r\n}\r\n",{"version":3,"sources":["RobotList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"RobotList.vue","sourceRoot":"src/views/robot","sourcesContent":["<template>\r\n<page-view :title=\"title\">\r\n  <a-card :bordered=\"false\">\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"48\">\r\n          <a-col :md=\"8\" :sm=\"24\">\r\n            <a-form-item label=\"机器人名称\">\r\n              <a-input v-model=\"queryParam.name\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"8\" :sm=\"24\">\r\n            <a-form-item label=\"机器人编码\">\r\n              <a-input v-model=\"queryParam.code\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          \r\n          <a-col :md=\"8\" :sm=\"24\">\r\n            <a-form-item label=\"所属单位\">\r\n              <a-select\r\n                v-model=\"queryParam.orgId\"\r\n                showSearch\r\n                placeholder=\"选择所属单位\"\r\n                optionFilterProp=\"children\"\r\n                :filterOption=\"filterOption\"\r\n              >\r\n                <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\r\n                  {{item.name}}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n           <a-col :md=\"8\" :sm=\"24\">\r\n            <a-form-item label=\"有效截止时间\">\r\n              <a-date-picker showTime format=\"YYYY-MM-DD HH:mm:ss\" @change=\"onChange\"  />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"8\" :sm=\"24\" style=\"margin-bottom:20px;\">\r\n              <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\r\n              <a-button style=\"margin-left: 8px\" @click=\"resetQuery()\">重置</a-button>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n    <s-table\r\n        ref=\"table\"\r\n        size=\"default\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :data=\"loadData\"\r\n        :alert=\"options.alert\"\r\n        :rowSelection=\"options.rowSelection\"\r\n        showPagination=\"auto\"\r\n      >\r\n        <span slot=\"serial\" slot-scope=\"text, record, index\">\r\n          {{ index + 1 }}\r\n        </span>\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <template>\r\n            <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\r\n            <a-divider type=\"vertical\" v-action:edit />\r\n            <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\r\n          </template>\r\n        </span>\r\n      </s-table>\r\n    <edit-robot ref=\"editModal\" @ok=\"handleOk\" /> \r\n  </a-card>\r\n  </page-view>\r\n</template>\r\n\r\n<script>\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport EditRobot from './modules/EditRobot'\r\nimport CreateRobot from './modules/CreateRobot'\r\nimport { queryData } from '@/api/common'\r\n\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    EditRobot,\r\n    CreateRobot\r\n  },\r\n  data () {\r\n    return {\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      addVisible: false,\r\n      editVisible: false,\r\n      // orgId: this.$store.getters.orgId\r\n      orgId: {\r\n        orgId:1\r\n      },\r\n      selectedItems: [],\r\n       // 查询参数\r\n      queryParam: {\r\n        code:'',\r\n        name:'',\r\n        orgId:'',\r\n        validityDate:'',\r\n      },\r\n      editData:{}, \r\n      options: {\r\n          alert: false,\r\n          rowSelection: null\r\n      },\r\n      // userId:localStorage.getItem('userId')\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        \r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '机器人编码',\r\n          dataIndex: 'code',\r\n          scopedSlots: { customRender: 'code' }\r\n        },\r\n        {\r\n          title: '单位名称',\r\n          dataIndex: 'orgName',\r\n          scopedSlots: { customRender: 'orgName' },\r\n\r\n        },\r\n        {\r\n          title: '地图名称',\r\n          dataIndex: 'mapName',\r\n          scopedSlots: { customRender: 'mapName' }\r\n        },\r\n        {\r\n          title: '有效截止时间',\r\n          dataIndex: 'validityDate',\r\n          scopedSlots: { customRender: 'validityDate' }\r\n        },\r\n        {\r\n          title: '人脸失效时间(分钟)',\r\n          dataIndex: 'faceTime',\r\n          scopedSlots: { customRender: 'faceTime' }\r\n        },\r\n        \r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        var userId = JSON.parse(localStorage.getItem('user')).id;\r\n        return queryData(Object.assign(parameter, this.queryParam,{userId:userId}),'/robotInfo/list')\r\n          .then(res => {\r\n            console.log(res);\r\n            return res.result\r\n          })\r\n      },\r\n      orgNames:[],\r\n      roleNames:[],\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n    }\r\n  },\r\n  created(){\r\n    this.handleOrgLists();\r\n  },\r\n  computed: {\r\n    title () {\r\n      return this.$route.meta.title\r\n    },\r\n    \r\n  },\r\n  methods: {\r\n    // 获取该用户下的所属单位\r\n    handleOrgLists(){\r\n      var _this = this;\r\n      var id = localStorage.getItem('userId');\r\n      var param = { userId : id }\r\n      queryData(param,'/robotInfo/getOrglist').then(res => {\r\n        _this.orgNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n          \r\n      }).catch( (err) => console.log(err))\r\n    },\r\n    onChange(date, dateString) {\r\n      this.queryParam.validityDate = dateString;\r\n      console.log(date, dateString);\r\n    },\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    // 表单重置\r\n    resetQuery(){\r\n      this.queryParam = {};\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 显示状态修改\r\n    handleAddVisible(){\r\n      this.addVisible = true;\r\n    },\r\n    handleEditVisible(record){\r\n      this.editData = record;\r\n      console.log(record);\r\n      this.$refs.editModal.add(record);\r\n      this.editVisible = true;\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 搜索内容\r\n    searchData(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    handleOk(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDelete(record){\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.name} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = {entityId: record.id};\r\n            queryData(id,'/robotInfo/delete').then(res => {\r\n              console.log('删除返回值：',res);\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .search {\r\n    margin-bottom: 54px;\r\n  }\r\n\r\n  .fold {\r\n    width: calc(100% - 216px);\r\n    display: inline-block\r\n  }\r\n\r\n  .operator {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .fold {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n"]}]}