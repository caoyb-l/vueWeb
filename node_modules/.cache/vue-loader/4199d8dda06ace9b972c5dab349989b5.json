{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue","mtime":1566376233534},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { queryData, addData } from '@/api/common'\r\nimport { STable } from '@/components'\r\nexport default {\r\n  components: {\r\n    STable\r\n  },\r\n  data() {\r\n    return {\r\n        edit:{triggerId:0,triggerName:\"\",cmdId:\"\"},\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),     \r\n      cmdList: [],    \r\n      queryParam:{},\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n\r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'robotName',\r\n          scopedSlots: { customRender: 'robotName' }\r\n        },\r\n        {\r\n          title: '机器人ID',\r\n          dataIndex: 'id',\r\n          scopedSlots: { customRender: 'id' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      data:[],\r\n      selectedRowKeys: new Set([]),\r\n      selectedRows: [],\r\n      options: {\r\n        alert: {\r\n          show: true\r\n        },\r\n        rowSelection: {        \r\n          onSelect:this.onSelectChange,\r\n          onSelectAll:this.onSelectChangeAll\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  created() {},\r\n  methods: {  \r\n     filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    //选择机器人\r\n    onSelectChange (record, selected, selectedRows, nativeEvent) {          \r\n        if(selected){\r\n            this.selectedRowKeys.add(record.id)           \r\n        }else{\r\n             this.selectedRowKeys.delete(record.id)\r\n        }\r\n    console.log([...this.selectedRowKeys])  \r\n    },\r\n    onSelectChangeAll(selected, selectedRows, changeRows){    \r\n     if(selected){           \r\n             changeRows.map((value,index)=>{\r\n                 this.selectedRowKeys.add(value.id)   \r\n             })       \r\n        }else{           \r\n             changeRows.map((value,index)=>{\r\n                 this.selectedRowKeys.delete(value.id)   \r\n             })   \r\n        }\r\n    },\r\n   \r\n //获取命令集\r\n    getCmdList() {\r\n      var _this = this\r\n       var id = JSON.parse(localStorage.getItem('user')).id\r\n       var param={ \"orgId\": id}\r\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\r\n       // console.log('命令集', res)\r\n        if (res.code == 0) {\r\n          _this.cmdList = res.cmdList\r\n        } else {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    add(record) {\r\n      console.log(\"----------record\")\r\n      console.log(record)\r\n      this.visible = true\r\n      this.edit=record;   \r\n      this.data=[];   \r\n      this.data.push(record);      \r\n      this.getCmdList()\r\n        this.selectedRowKeys.clear(); \r\n      if(this.$refs.table){\r\n          this.$refs.table.refresh()\r\n       }   \r\n    },\r\n\r\n    handleSubmit() {\r\n      const {\r\n        form: { validateFields }\r\n      } = this\r\n      var _this = this     \r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          var param = {\r\n            robotId: [..._this.selectedRowKeys],\r\n            cmdId: '1',\r\n            triggerId:_this.edit.triggerId,\r\n            entityId:_this.edit.id\r\n          }\r\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\r\n            if (res.code == 0) {\r\n              _this.$message.success('新建成功')\r\n            } else {\r\n              _this.$message.error(res.message)\r\n            }\r\n            _this.visible = false\r\n            _this.confirmLoading = false\r\n            _this.$emit('ok', values)\r\n            // 重置输入框内容\r\n            _this.form.resetFields()\r\n          })\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n",null]}