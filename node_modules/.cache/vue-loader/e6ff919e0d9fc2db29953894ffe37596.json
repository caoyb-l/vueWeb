{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditCmdType.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditCmdType.vue","mtime":1565144578235},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addData ,queryData  } from '@/api/common'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      editData:{},\r\n      cmdTypeList: [],\r\n      type:0,\r\n    }\r\n  },\r\n  methods: {\r\n    add(record) {\r\n      this.visible = true,\r\n      this.type = parseInt(record.type);\r\n      this.editData = record;\r\n    },\r\n    // 下拉框\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    handleSubmit() {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          var _this = this\r\n          setTimeout(() => {\r\n            \r\n            // values.type = Number.isInteger(values.type) ? values.type : this.type;\r\n            var param = Object.assign(values,{entityId:this.editData.id})\r\n            addData(param,'/cmdUnitType/save').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('编辑成功')\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n                _this.visible = false\r\n                _this.confirmLoading = false\r\n                _this.$emit('ok', values);\r\n                // 重置输入框内容\r\n                _this.form.resetFields()\r\n            })\r\n            \r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["EditCmdType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditCmdType.vue","sourceRoot":"src/views/instruction/modules","sourcesContent":["<template>\r\n  <!-- 编辑弹框 -->\r\n      <a-modal\r\n      title=\"编辑\"\r\n      style=\"top: 20px;\"\r\n      :width=\"600\"\r\n      v-model=\"visible\"\r\n      @ok=\"handleSubmit\"\r\n    >\r\n    <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"类型名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'name',\r\n            {rules: [{ required: true, message: '请输入类型名称' }],\r\n            initialValue: editData.name,}\r\n          ]\"\r\n          placeholder=\"类型名称\" />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"命令单元参数类型\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n          <a-select\r\n            showSearch\r\n            placeholder=\"选择命令单元参数类型\"\r\n            optionFilterProp=\"children\"\r\n            :filterOption=\"filterOption\"\r\n            v-decorator=\"[\r\n              'type',\r\n              {rules: [{ required: true, message: '请选择' }],\r\n              initialValue:editData.type}\r\n            ]\"\r\n          >\r\n            <a-select-option value=1>声音</a-select-option>\r\n            <a-select-option value=2>串口</a-select-option>\r\n            <a-select-option value=3>思岚</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n    </a-form>\r\n    </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { addData ,queryData  } from '@/api/common'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      editData:{},\r\n      cmdTypeList: [],\r\n      type:0,\r\n    }\r\n  },\r\n  methods: {\r\n    add(record) {\r\n      this.visible = true,\r\n      this.type = parseInt(record.type);\r\n      this.editData = record;\r\n    },\r\n    // 下拉框\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    handleSubmit() {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true;\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          var _this = this\r\n          setTimeout(() => {\r\n            \r\n            // values.type = Number.isInteger(values.type) ? values.type : this.type;\r\n            var param = Object.assign(values,{entityId:this.editData.id})\r\n            addData(param,'/cmdUnitType/save').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('编辑成功')\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n                _this.visible = false\r\n                _this.confirmLoading = false\r\n                _this.$emit('ok', values);\r\n                // 重置输入框内容\r\n                _this.form.resetFields()\r\n            })\r\n            \r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}