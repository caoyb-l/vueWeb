{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/modules/EditQues.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/ques/modules/EditQues.vue","mtime":1587436453727},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { addBusinessQues } from '@/api/ques'\n\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      isAble: true,\n      editData: [],\n      entityId: ''\n    }\n  },\n  methods: {\n    onChange(check) {\n      console.log('check:', check)\n    },\n    add(record) {\n      this.visible = true\n      this.editData = record\n      this.isAble = record.isAble == 1 ? true : false\n      this.entityId = record.id\n    },\n\n    //回调函数\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var _this = this\n          setTimeout(() => {\n            let isAble = this.isAble == undefined || this.isAble == false ? 0 : 1\n            console.log('isAble=' + isAble)\n            values.isAble = isAble\n            let userObj = JSON.parse(localStorage.getItem('user'))\n            let [orgId, user, type] = [userObj.orgId, userObj.id, 1]\n            let param = Object.assign(values, { orgId, user, type }, { entityId: this.entityId })\n            addBusinessQues(param).then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('编辑成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n              _this.visible = false\n              _this.confirmLoading = false\n              _this.$emit('ok', values)\n              _this.entityId = ''\n              // 重置输入框内容\n              _this.form.resetFields()\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["EditQues.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditQues.vue","sourceRoot":"src/views/ques/modules","sourcesContent":["<template>\n  <!-- 编辑业务弹框 -->\n  <a-modal\n    title=\"编辑\"\n    style=\"top: 150px;\"\n    :width=\"600\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    v-preventReClick\n    :destroyOnClose=\"true\"\n    :maskClosable=\"false\"\n  >\n    <a-form :form=\"form\">\n      <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-input\n          v-decorator=\"[\n            'title',\n            {rules: [{ required: true, message: '请输入名称' }],\n            initialValue:editData.title}\n          ]\"\n          placeholder=\"名称\"\n        />\n      </a-form-item>\n      <a-form-item label=\"别名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-input\n          v-decorator=\"[\n            'depict',\n            {rules: [{ message: '请输入别名' }],\n            initialValue:editData.depict}\n          ]\"\n          placeholder=\"别名\"\n        />\n      </a-form-item>\n      <!-- 默认回答输入框 -->\n      <a-form-item label=\"回答：\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-textarea\n          placeholder=\"默认回答内容\"\n          rows=\"5\"\n          v-decorator=\"[\n            'contents',\n            {rules: [{ required: true,message: '请输入默认回答内容' }],\n            initialValue:editData.contents}\n          ]\"\n        />\n      </a-form-item>\n      <a-form-item label=\"是否启用\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-switch\n          v-decorator=\"[\n            'isAble'\n          ]\"\n          checkedChildren=\"是\"\n          unCheckedChildren=\"否\"\n          v-model=\"isAble\"\n        />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { addBusinessQues } from '@/api/ques'\n\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      isAble: true,\n      editData: [],\n      entityId: ''\n    }\n  },\n  methods: {\n    onChange(check) {\n      console.log('check:', check)\n    },\n    add(record) {\n      this.visible = true\n      this.editData = record\n      this.isAble = record.isAble == 1 ? true : false\n      this.entityId = record.id\n    },\n\n    //回调函数\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var _this = this\n          setTimeout(() => {\n            let isAble = this.isAble == undefined || this.isAble == false ? 0 : 1\n            console.log('isAble=' + isAble)\n            values.isAble = isAble\n            let userObj = JSON.parse(localStorage.getItem('user'))\n            let [orgId, user, type] = [userObj.orgId, userObj.id, 1]\n            let param = Object.assign(values, { orgId, user, type }, { entityId: this.entityId })\n            addBusinessQues(param).then(res => {\n              console.log(res)\n              if (res.code == 0) {\n                _this.$message.success('编辑成功')\n              } else {\n                _this.$message.error(res.message)\n              }\n              _this.visible = false\n              _this.confirmLoading = false\n              _this.$emit('ok', values)\n              _this.entityId = ''\n              // 重置输入框内容\n              _this.form.resetFields()\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"]}]}