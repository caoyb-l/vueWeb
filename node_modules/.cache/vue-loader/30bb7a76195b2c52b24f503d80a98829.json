{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/Expression.vue?vue&type=style&index=0&id=1093261a&lang=less&scoped=true&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/Expression.vue","mtime":1578713142235},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/css-loader/index.js","mtime":1571637287866},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1571637450641},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/postcss-loader/src/index.js","mtime":1571637379039},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/less-loader/dist/cjs.js","mtime":1571637352092},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search {\n  margin-bottom: 54px;\n}\n\n.fold {\n  width: calc(100% - 216px);\n  display: inline-block\n}\n\n.operator {\n  margin-bottom: 18px;\n}\n\n@media screen and (max-width: 900px) {\n  .fold {\n    width: 100%;\n  }\n}\n",{"version":3,"sources":["Expression.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Expression.vue","sourceRoot":"src/views/instruction","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"6\" :sm=\"24\">\n            <a-form-item label=\"名称\">\n              <a-input v-model=\"queryParam.name\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"!advanced && 8 || 24\" :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\" :style=\"advanced && { float: 'right', overflow: 'hidden' } || {} \">\n\n              <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n              <a-button style=\"margin-left: 8px\"  @click=\"resetQuery()\">重置</a-button>\n\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n\n    <div class=\"table-operator\">\n      <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.createModal.add()\" v-action:add>新建</a-button>\n      <a-button type=\"dashed\" @click=\"tableOption\">{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n          <a-menu slot=\"overlay\">\n            <a-menu-item key=\"1\" v-action:delete @click=\"handleDeletes()\"><a-icon type=\"delete\"/>删除</a-menu-item>\n          </a-menu>\n          <a-button style=\"margin-left: 8px\">\n            批量操作 <a-icon type=\"down\" />\n          </a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n        ref=\"table\"\n        size=\"middle\"\n        rowKey=\"id\"\n        :columns=\"columns\"\n        :data=\"loadData\"\n        :alert=\"options.alert\"\n        :rowSelection=\"options.rowSelection\"\n        showPagination=\"auto\"\n      >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">\n          {{ index + 1 }}\n        </span>\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <template>\n            <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n            <a-divider type=\"vertical\" />\n            <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\n          </template>\n        </span>\n      </s-table>\n  <create-expression ref=\"createModal\" @ok=\"handleRefresh\"></create-expression>\n  <edit-expression ref=\"editModal\" @ok=\"handleRefresh\"></edit-expression>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common';\nimport CreateExpression from './modules/CreateExpression'\nimport EditExpression from './modules/EditExpression'\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateExpression,\n    EditExpression\n  },\n  data () {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n       // 查询参数\n      queryParam: {\n        name:'',\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '编码',\n          dataIndex: 'code',\n          scopedSlots: { customRender: 'code' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        console.log('user 请求',parameter);\n        return queryData(Object.assign(parameter, this.queryParam),'/robotExpManage/queryRobotExpMsg')\n          .then(res => {\n            console.log(res);\n            return res.result\n          })\n      },\n      selectedRowKeys: [],\n      options: {\n        alert: { show: true, clear: () => { this.selectedRowKeys = [] } },\n        rowSelection: {\n          selectedRowKeys: this.selectedRowKeys,\n          onChange: this.onSelectChange\n        }\n      },\n      optionAlertShow: false\n    }\n  },\n  computed: {\n    title () {\n      return this.$route.meta.title\n    },\n  },\n  methods: {\n    tableOption () {\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: { show: true, clear: () => { this.selectedRowKeys = [] } },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: record => ({\n              props: {\n                disabled: record.no === 'No 2', // Column configuration not to be checked\n                name: record.no\n              }\n            })\n          }\n        }\n        this.optionAlertShow = true\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }\n        this.optionAlertShow = false\n      }\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 处理刷新\n    handleRefresh(){\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery(){\n      this.queryParam = {};\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record){\n      this.$refs.editModal.add(record);\n    },\n    // 搜索内容\n    searchData(){\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record){\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var id = {id: [record.id]};\n            queryData(id,'/robotExpManage/delRobotExpMsg').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n\n    },\n    // 批量删除\n    handleDeletes(){\n      console.log(this.selectedRowKeys);\n      var _this = this;\n       this.$confirm({\n        title: '警告',\n        content: `真的要删除吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk () {\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\n            var ids = {id:_this.selectedRowKeys}\n            queryData(ids,'/robotExpManage/delRobotExpMsg').then(res => {\n              if(res.code == 0){\n                 _this.$message.success('删除成功');\n                 _this.selectedRowKeys = []\n                 _this.$refs.table.refresh()\n              } else {\n                _this.$message.error(res.message)\n              }\n            });\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel () {\n          console.log('Cancel')\n        }\n      })\n    }\n  },\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .search {\n    margin-bottom: 54px;\n  }\n\n  .fold {\n    width: calc(100% - 216px);\n    display: inline-block\n  }\n\n  .operator {\n    margin-bottom: 18px;\n  }\n\n  @media screen and (max-width: 900px) {\n    .fold {\n      width: 100%;\n    }\n  }\n</style>\n"]}]}