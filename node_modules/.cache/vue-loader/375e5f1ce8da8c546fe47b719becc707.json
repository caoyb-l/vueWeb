{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/Login.vue","mtime":1571637124435},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport md5 from 'md5'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport { getSmsCaptcha, get2step } from '@/api/login'\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha\r\n  },\r\n  data () {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      state: {\r\n        time: 60,\r\n        loginBtn: false,\r\n        // login type: 0 email, 1 username, 2 telephone\r\n        loginType: 0,\r\n        smsSendBtn: false\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    get2step({ })\r\n      .then(res => {\r\n        this.requiredTwoStepCaptcha = res.result.stepCode\r\n      })\r\n      .catch(() => {\r\n        this.requiredTwoStepCaptcha = false\r\n      })\r\n    // this.requiredTwoStepCaptcha = true\r\n  },\r\n  methods: {\r\n    //  this.$store.dispatch('xxx')\r\n    ...mapActions(['Login', 'Logout']),\r\n    // handler\r\n    handleUsernameOrEmail (rule, value, callback) {\r\n      const { state } = this\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        state.loginType = 0\r\n      } else {\r\n        state.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick (key) {\r\n      this.customActiveKey = key\r\n    },\r\n    handleSubmit (e) {\r\n      e.preventDefault()\r\n      const {\r\n        form: { validateFields },\r\n        state,\r\n        customActiveKey,\r\n        Login\r\n      } = this\r\n       \r\n      state.loginBtn = true\r\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\r\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\r\n        if (!err) {\r\n          const loginParams = { ...values }\r\n          delete loginParams.username\r\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\r\n          // loginParams.password = md5(values.password)\r\n\r\n          Login(loginParams).then(res => {\r\n            if(res.code == 0){\r\n              this.loginSuccess(res)\r\n            } else {\r\n              this.requestFailed(res.message)\r\n            }\r\n          }).catch(err => this.requestFailed(err))\r\n            .finally(() => {\r\n              state.loginBtn = false\r\n            })\r\n        } else {\r\n          setTimeout(() => {\r\n            state.loginBtn = false\r\n          }, 600)\r\n        }\r\n      })\r\n    },\r\n    loginSuccess (res) {\r\n      // 延迟 1 秒显示欢迎信息\r\n      setTimeout(() => {\r\n       this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`\r\n        });\r\n        this.$router.push({ name: 'systemUser' })\r\n      }, 200)\r\n       \r\n    },\r\n    requestFailed (err) {\r\n      console.log(err);\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}