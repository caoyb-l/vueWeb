{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditAllSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditAllSensor.vue","mtime":1573785801773},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nimport CmdList from \"../../Cmd\";\nexport default {\n  components: {\n    CmdList: CmdList,\n    STable: STable\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      showEditCmd: false,\n      cmdId: '',\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      triggerCmdList: [],\n      cmdList: [],\n      triggerId: 0,\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '机器人编码',\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var id = JSON.parse(localStorage.getItem('user')).id;\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        var params = {\n          type: 2,\n          triggerId: _this2.triggerId,\n          code: '',\n          name: '',\n          orgId: orgId,\n          userId: id,\n          validityDate: ''\n        };\n        return queryData(Object.assign(parameter, params, _this2.queryParam), '/robotInfo/loadPageListByTruggerRobot').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      selectedRowKeys: new Set([]),\n      selectedRows: [],\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    changeCmd: function changeCmd(event) {\n      this.cmdId = event;\n      this.showEditCmd = true;\n      console.log('下拉框值：' + this.cmdId);\n    },\n    // 新增命令集\n    addCmd: function addCmd() {\n      this.$refs.cmd.show('批量修改传感器', '', 0);\n    },\n    // 修改命令集\n    editCmd: function editCmd() {\n      console.log('修改：' + this.cmdId);\n      this.$refs.cmd.show('批量修改传感器', '', this.cmdId);\n    },\n    // 编辑命令集后，获取命令集ID\n    getCmdId: function getCmdId(cmd) {\n      this.getCmdList();\n      this.cmdId = cmd;\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      });\n    },\n    handleTriggerCmdChange: function handleTriggerCmdChange(value) {\n      console.log(\"selected \".concat(value));\n      this.triggerId = value;\n      this.$refs.table.refresh();\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 选择机器人\n    onSelectChange: function onSelectChange(record, selected, selectedRows, nativeEvent) {\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, selectedRows, changeRows) {\n      var _this3 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this3.selectedRowKeys.add(value.id);\n        });\n      } else {\n        changeRows.map(function (value, index) {\n          _this3.selectedRowKeys.delete(value.id);\n        });\n      }\n    },\n    // 获取指令列表\n    getTriggerCmdList: function getTriggerCmdList() {\n      var _this = this;\n\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(function (res) {\n        console.log('指令列表', res);\n\n        if (res.code == 0) {\n          _this.triggerCmdList = res.supercmdTriggerList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    // 获取命令集\n    getCmdList: function getCmdList() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        orgId: orgId\n      };\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        console.log('命令集', res);\n\n        if (res.code == 0 || res.code == 2) {\n          _this.cmdList = res.cmdList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    add: function add() {\n      this.visible = true;\n      this.showEditCmd = false;\n      this.cmdId = '';\n      this.getTriggerCmdList();\n      this.getCmdList(); // this.selectedRowKeys.clear()\n      // if (this.$refs.table) {\n      //   this.$refs.table.refresh()\n      // }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            robotId: _toConsumableArray(_this.selectedRowKeys),\n            cmdId: '1'\n          };\n          queryData(_objectSpread({}, param, values), '/supercmdTriggerRobot/updateAll').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('批量修改成功');\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this4.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",null]}