{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/components/MultiTab/MultiTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/components/MultiTab/MultiTab.vue","mtime":1571637124678},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'MultiTab',\n  data: function data() {\n    return {\n      fullPathList: [],\n      pages: [],\n      activeKey: '',\n      newTabIndex: 0\n    };\n  },\n  created: function created() {\n    this.pages.push(this.$route);\n    this.fullPathList.push(this.$route.fullPath);\n    this.selectedLastPath();\n  },\n  methods: {\n    onEdit: function onEdit(targetKey, action) {\n      this[action](targetKey);\n    },\n    remove: function remove(targetKey) {\n      this.pages = this.pages.filter(function (page) {\n        return page.fullPath !== targetKey;\n      });\n      this.fullPathList = this.fullPathList.filter(function (path) {\n        return path !== targetKey;\n      }); // 判断当前标签是否关闭，若关闭则跳转到最后一个还存在的标签页\n\n      if (!this.fullPathList.includes(this.activeKey)) {\n        this.selectedLastPath();\n      }\n    },\n    selectedLastPath: function selectedLastPath() {\n      this.activeKey = this.fullPathList[this.fullPathList.length - 1];\n    },\n    // content menu\n    closeThat: function closeThat(e) {\n      this.remove(e);\n    },\n    closeLeft: function closeLeft(e) {\n      var _this = this;\n\n      var currentIndex = this.fullPathList.indexOf(e);\n\n      if (currentIndex > 0) {\n        this.fullPathList.forEach(function (item, index) {\n          if (index < currentIndex) {\n            _this.remove(item);\n          }\n        });\n      } else {\n        this.$message.info('左侧没有标签');\n      }\n    },\n    closeRight: function closeRight(e) {\n      var _this2 = this;\n\n      var currentIndex = this.fullPathList.indexOf(e);\n\n      if (currentIndex < this.fullPathList.length - 1) {\n        this.fullPathList.forEach(function (item, index) {\n          if (index > currentIndex) {\n            _this2.remove(item);\n          }\n        });\n      } else {\n        this.$message.info('右侧没有标签');\n      }\n    },\n    closeAll: function closeAll(e) {\n      var _this3 = this;\n\n      var currentIndex = this.fullPathList.indexOf(e);\n      this.fullPathList.forEach(function (item, index) {\n        if (index !== currentIndex) {\n          _this3.remove(item);\n        }\n      });\n    },\n    closeMenuClick: function closeMenuClick(_ref) {\n      var key = _ref.key,\n          item = _ref.item,\n          domEvent = _ref.domEvent;\n      var vkey = domEvent.target.getAttribute('data-vkey');\n\n      switch (key) {\n        case 'close-right':\n          this.closeRight(vkey);\n          break;\n\n        case 'close-left':\n          this.closeLeft(vkey);\n          break;\n\n        case 'close-all':\n          this.closeAll(vkey);\n          break;\n\n        default:\n        case 'close-that':\n          this.closeThat(vkey);\n          break;\n      }\n    },\n    renderTabPaneMenu: function renderTabPaneMenu(e) {\n      var h = this.$createElement;\n      return h(\"a-menu\", {\n        \"on\": _objectSpread({}, {\n          click: this.closeMenuClick\n        })\n      }, [h(\"a-menu-item\", {\n        \"key\": \"close-that\",\n        \"attrs\": {\n          \"data-vkey\": e\n        }\n      }, [\"\\u5173\\u95ED\\u5F53\\u524D\\u6807\\u7B7E\"]), h(\"a-menu-item\", {\n        \"key\": \"close-right\",\n        \"attrs\": {\n          \"data-vkey\": e\n        }\n      }, [\"\\u5173\\u95ED\\u53F3\\u4FA7\"]), h(\"a-menu-item\", {\n        \"key\": \"close-left\",\n        \"attrs\": {\n          \"data-vkey\": e\n        }\n      }, [\"\\u5173\\u95ED\\u5DE6\\u4FA7\"]), h(\"a-menu-item\", {\n        \"key\": \"close-all\",\n        \"attrs\": {\n          \"data-vkey\": e\n        }\n      }, [\"\\u5173\\u95ED\\u5168\\u90E8\"])]);\n    },\n    // render\n    renderTabPane: function renderTabPane(title, keyPath) {\n      var h = this.$createElement;\n      var menu = this.renderTabPaneMenu(keyPath);\n      return h(\"a-dropdown\", {\n        \"attrs\": {\n          \"overlay\": menu,\n          \"trigger\": ['contextmenu']\n        }\n      }, [h(\"span\", {\n        \"style\": {\n          userSelect: 'none'\n        }\n      }, [title])]);\n    }\n  },\n  watch: {\n    '$route': function $route(newVal) {\n      this.activeKey = newVal.fullPath;\n\n      if (this.fullPathList.indexOf(newVal.fullPath) < 0) {\n        this.fullPathList.push(newVal.fullPath);\n        this.pages.push(newVal);\n      }\n    },\n    activeKey: function activeKey(newPathKey) {\n      this.$router.push({\n        path: newPathKey\n      });\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var onEdit = this.onEdit,\n        pages = this.$data.pages;\n    var panes = pages.map(function (page) {\n      return h(\"a-tab-pane\", {\n        \"style\": {\n          height: 0\n        },\n        \"attrs\": {\n          \"tab\": _this4.renderTabPane(page.meta.title, page.fullPath),\n          \"closable\": pages.length > 1\n        },\n        \"key\": page.fullPath\n      });\n    });\n    return h(\"div\", {\n      \"class\": \"ant-pro-multi-tab\"\n    }, [h(\"div\", {\n      \"class\": \"ant-pro-multi-tab-wrapper\"\n    }, [h(\"a-tabs\", {\n      \"attrs\": {\n        \"hideAdd\": true,\n        \"type\": 'editable-card',\n        \"tabBarStyle\": {\n          background: '#FFF',\n          margin: 0,\n          paddingLeft: '16px',\n          paddingTop: '1px'\n        }\n      },\n      \"on\": _objectSpread({}, {\n        edit: onEdit\n      }),\n      \"model\": {\n        value: _this4.activeKey,\n        callback: function callback($$v) {\n          _this4.activeKey = $$v;\n        }\n      }\n    }, [panes])])]);\n  }\n};",null]}