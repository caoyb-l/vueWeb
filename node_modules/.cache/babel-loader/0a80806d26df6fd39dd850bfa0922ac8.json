{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/ChgUserPwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/user/ChgUserPwd.vue","mtime":1587436453736},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData } from '@/api/common';\nvar levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n};\nvar levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n};\nvar levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n};\nexport default {\n  data: function data() {\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      }\n    };\n  },\n  computed: {\n    passwordLevelClass: function passwordLevelClass() {\n      return levelClass[this.state.passwordLevel];\n    },\n    passwordLevelName: function passwordLevelName() {\n      return levelNames[this.state.passwordLevel];\n    },\n    passwordLevelColor: function passwordLevelColor() {\n      return levelColor[this.state.passwordLevel];\n    }\n  },\n  methods: {\n    add: function add() {\n      this.form.resetFields();\n      this.visible = true;\n      this.state.passwordLevelChecked = false;\n    },\n    handlePasswordInputClick: function handlePasswordInputClick() {\n      this.state.passwordLevelChecked = true;\n    },\n    handlePasswordLevel: function handlePasswordLevel(rule, value, callback) {\n      var level = 0;\n\n      if (value.length < 6) {\n        callback(new Error('长度不能小于6位'));\n      } // 判断这个字符串中有没有数字\n\n\n      if (/[0-9]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有字母\n\n\n      if (/[a-zA-Z]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有特殊符号\n\n\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++;\n      }\n\n      this.state.passwordLevel = level;\n      this.state.percent = level * 30;\n\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100;\n        }\n\n        callback();\n      } else {\n        if (level === 0) {\n          this.state.percent = 10;\n        }\n\n        callback(new Error('密码强度不够'));\n      }\n    },\n    // handlePasswordLevel (rule, value, callback) {\n    //   // 判断这个字符串是否是数字\n    //   if (!(/^[0-9]+$/.test(value)) || value.length < 6) {\n    //     callback(new Error('必须是数字,且长度不能小于6位'))\n    //   }\n    //   callback()\n    // },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.form.getFieldValue('password');\n      console.log('value', value);\n\n      if (value === undefined) {\n        callback(new Error('请输入密码'));\n      }\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n\n      callback();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      console.log('提交');\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        console.log(!errors);\n\n        if (!errors) {\n          var userId = JSON.parse(localStorage.getItem('user')).id;\n          var param = Object.assign(values, {\n            id: userId\n          });\n          console.log(param);\n          var _this = _this2;\n          setTimeout(function () {\n            queryData(param, '/userManage/chgPassword').then(function (res) {\n              // eslint-disable-next-line eqeqeq\n              if (res.code == 0) {\n                _this.$message.success('密码修改成功，请重新登录');\n\n                _this2.visible = false;\n                _this2.confirmLoading = false;\n\n                _this2.$emit('ok', values);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }, 300);\n        } else {\n          _this2.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["ChgUserPwd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 编辑弹框 -->\n  <a-modal\n    title=\"修改密码\"\n    style=\"top: 20px;\"\n    :width=\"600\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    v-preventReClick\n    :destroyOnClose=\"true\"\n    :maskClosable=\"false\"\n  >\n    <a-form :form=\"form\">\n      <a-popover\n        placement=\"rightTop\"\n        :trigger=\"['focus']\"\n        :getPopupContainer=\"(trigger) => trigger.parentElement\"\n        v-model=\"state.passwordLevelChecked\"\n      >\n        <template slot=\"content\">\n          <div :style=\"{ width: '240px' }\">\n            <div :class=\"['user-register', passwordLevelClass]\">\n              强度：\n              <span>{{ passwordLevelName }}</span>\n            </div>\n            <a-progress\n              :percent=\"state.percent\"\n              :showInfo=\"false\"\n              :strokeColor=\" passwordLevelColor \"\n            />\n            <div style=\"margin-top: 10px;\">\n              <span>请至少输入6个字符,且必须同时包含字符和数字。</span>\n            </div>\n          </div>\n        </template>\n        <a-form-item label=\"新密码\">\n          <a-input\n            size=\"large\"\n            type=\"password\"\n            autocomplete=\"false\"\n            @click=\"handlePasswordInputClick\"\n            placeholder=\"至少6位密码\"\n            v-decorator=\"['password', {rules: [{ required: true, message: '至少6位密码'}, { validator: this.handlePasswordLevel }], validateTrigger: ['change', 'blur']}]\"\n          ></a-input>\n        </a-form-item>\n      </a-popover>\n\n      <a-form-item label=\"密码确认\">\n        <a-input\n          size=\"large\"\n          type=\"password\"\n          autocomplete=\"false\"\n          placeholder=\"确认密码\"\n          v-decorator=\"['password2', {rules: [{ required: true, message: '至少6位密码' }, { validator: this.handlePasswordCheck }], validateTrigger: ['change', 'blur']}]\"\n        ></a-input>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { queryData } from '@/api/common'\nconst levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n}\nconst levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n}\nconst levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n}\nexport default {\n  data() {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      }\n    }\n  },\n  computed: {\n    passwordLevelClass() {\n      return levelClass[this.state.passwordLevel]\n    },\n    passwordLevelName() {\n      return levelNames[this.state.passwordLevel]\n    },\n    passwordLevelColor() {\n      return levelColor[this.state.passwordLevel]\n    }\n  },\n  methods: {\n    add() {\n      this.form.resetFields()\n      this.visible = true\n      this.state.passwordLevelChecked = false\n    },\n    handlePasswordInputClick() {\n      this.state.passwordLevelChecked = true\n    },\n    handlePasswordLevel(rule, value, callback) {\n      let level = 0\n      if (value.length < 6) {\n        callback(new Error('长度不能小于6位'))\n      }\n      // 判断这个字符串中有没有数字\n      if (/[0-9]/.test(value)) {\n        level++\n      }\n      // 判断字符串中有没有字母\n      if (/[a-zA-Z]/.test(value)) {\n        level++\n      }\n      // 判断字符串中有没有特殊符号\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++\n      }\n      this.state.passwordLevel = level\n      this.state.percent = level * 30\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100\n        }\n        callback()\n      } else {\n        if (level === 0) {\n          this.state.percent = 10\n        }\n        callback(new Error('密码强度不够'))\n      }\n    },\n    // handlePasswordLevel (rule, value, callback) {\n    //   // 判断这个字符串是否是数字\n    //   if (!(/^[0-9]+$/.test(value)) || value.length < 6) {\n    //     callback(new Error('必须是数字,且长度不能小于6位'))\n    //   }\n    //   callback()\n    // },\n    handlePasswordCheck(rule, value, callback) {\n      const password = this.form.getFieldValue('password')\n      console.log('value', value)\n      if (value === undefined) {\n        callback(new Error('请输入密码'))\n      }\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'))\n      }\n      callback()\n    },\n    handleSubmit() {\n      console.log('提交')\n      const {\n        form: { validateFields }\n      } = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        console.log(!errors)\n        if (!errors) {\n          var userId = JSON.parse(localStorage.getItem('user')).id\n          var param = Object.assign(values, { id: userId })\n          console.log(param)\n          var _this = this\n          setTimeout(() => {\n            queryData(param, '/userManage/chgPassword').then(res => {\n              // eslint-disable-next-line eqeqeq\n              if (res.code == 0) {\n                _this.$message.success('密码修改成功，请重新登录')\n                this.visible = false\n                this.confirmLoading = false\n                this.$emit('ok', values)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }, 300)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/user"}]}