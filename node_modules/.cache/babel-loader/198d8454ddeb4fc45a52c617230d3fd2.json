{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/RobotList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/RobotList.vue","mtime":1583559735717},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport EditRobot from \"./modules/EditRobot\";\nimport { queryData } from '@/api/common';\nimport ShowType from \"./modules/showSkillsType\";\nimport ShowRobotNote from \"./modules/showRobotNote\";\nimport { uploadUrl } from '@/api/upload';\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    EditRobot: EditRobot,\n    ShowType: ShowType,\n    ShowRobotNote: ShowRobotNote\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      addVisible: false,\n      editVisible: false,\n      orgId: {\n        orgId: 1\n      },\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        code: '',\n        name: '',\n        orgId: '',\n        validityDate: ''\n      },\n      editData: {},\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '名称',\n        dataIndex: 'name'\n      }, {\n        title: '编码',\n        dataIndex: 'code'\n      }, {\n        title: '单位名称',\n        dataIndex: 'orgName'\n      }, {\n        title: '地图名称',\n        dataIndex: 'mapName'\n      }, {\n        title: '最后一次在线时间',\n        dataIndex: 'lastLoginTime'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var userId = JSON.parse(localStorage.getItem('user')).id;\n        var orgId;\n\n        if (_this2.queryParam.orgId > 0) {\n          orgId = _this2.queryParam.orgId;\n        } else {\n          orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        }\n\n        return queryData(Object.assign(parameter, _this2.queryParam, {\n          userId: userId,\n          orgId: orgId\n        }), '/robotInfo/list').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      orgNames: [],\n      roleNames: [],\n      selectedRowKeys: [],\n      url: uploadUrl + 'robotInfo/excel?robot='\n    };\n  },\n  created: function created() {\n    this.handleOrgLists();\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  methods: {\n    // 获取该用户下的所属单位\n    handleOrgLists: function handleOrgLists() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        org: orgId\n      };\n      queryData(param, '/userManage/getHrOrgByPid').then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    onChange: function onChange(date, dateString) {\n      this.queryParam.validityDate = dateString;\n      console.log(date, dateString);\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    // 显示状态修改\n    handleAddVisible: function handleAddVisible() {\n      this.addVisible = true;\n    },\n    // 查看问答库\n    selectSkillsType: function selectSkillsType(record) {\n      this.$refs.showSkillsType.add(record);\n    },\n    // 查看运行记录\n    showRobotNote: function showRobotNote(record) {\n      this.$refs.showRobotNote.show(record);\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      // this.editData = record;\n      this.$refs.editModal.add(record);\n      this.editVisible = true;\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    // 初始化机器人\n    handleRecovery: function handleRecovery(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u673A\\u5668\\u4EBA <\".concat(record.name, \">\\u5C06\\u5220\\u9664\\u540E\\u53F0\\u6240\\u6709\\u914D\\u7F6E\\uFF0C\\u4F46\\u662F\\u4F1A\\u4FDD\\u7559\\u81EA\\u5B9A\\u4E49\\u5E93\\u3002\\u662F\\u5426\\u786E\\u5B9A\\uFF1F\"),\n        okText: '确定',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var id = {\n              code: record.code\n            };\n            queryData(id, '/robotInfo/recoveryRobot').then(function (res) {\n              console.log('机器人初始化返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('初始化成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 删除机器人\n    handleDelete: function handleDelete(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u673A\\u5668\\u4EBA <\".concat(record.name, \">\\u4FE1\\u606F\\u5C06\\u88AB\\u79FB\\u9664\\uFF0C\\u5E76\\u4E14\\u4FE1\\u606F\\u65E0\\u6CD5\\u627E\\u56DE\\uFF0C\\u662F\\u5426\\u786E\\u5B9A\\uFF1F\"),\n        okText: '确定',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var id = {\n              code: record.code\n            };\n            queryData(id, '/robotInfo/delete').then(function (res) {\n              console.log('移除机器人：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('移除成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",null]}