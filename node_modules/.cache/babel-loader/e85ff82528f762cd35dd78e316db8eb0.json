{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue","mtime":1566376233534},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\XiangMu\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"E:\\\\XiangMu\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nexport default {\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    return {\n      edit: {\n        triggerId: 0,\n        triggerName: \"\",\n        cmdId: \"\"\n      },\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'robotName',\n        scopedSlots: {\n          customRender: 'robotName'\n        }\n      }, {\n        title: '机器人ID',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'id'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      selectedRowKeys: new Set([]),\n      selectedRows: [],\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    //选择机器人\n    onSelectChange: function onSelectChange(record, selected, selectedRows, nativeEvent) {\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n\n      console.log(_toConsumableArray(this.selectedRowKeys));\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, selectedRows, changeRows) {\n      var _this2 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this2.selectedRowKeys.add(value.id);\n        });\n      } else {\n        changeRows.map(function (value, index) {\n          _this2.selectedRowKeys.delete(value.id);\n        });\n      }\n    },\n    //获取命令集\n    getCmdList: function getCmdList() {\n      var _this = this;\n\n      var id = JSON.parse(localStorage.getItem('user')).id;\n      var param = {\n        \"orgId\": id\n      };\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        // console.log('命令集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    add: function add(record) {\n      console.log(\"----------record\");\n      console.log(record);\n      this.visible = true;\n      this.edit = record;\n      this.data = [];\n      this.data.push(record);\n      this.getCmdList();\n      this.selectedRowKeys.clear();\n\n      if (this.$refs.table) {\n        this.$refs.table.refresh();\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            robotId: _toConsumableArray(_this.selectedRowKeys),\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          };\n          queryData(_objectSpread({}, param, values), '/supercmdTriggerRobot/save').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('新建成功');\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this3.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",null]}