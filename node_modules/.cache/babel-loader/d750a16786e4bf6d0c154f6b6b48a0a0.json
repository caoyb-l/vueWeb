{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\List.vue","mtime":1564132250393},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\antd_vue\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport EditForm from \"./modules/EditForm\";\nimport CreateForm from \"./modules/CreateForm\";\nimport { getRobotLists, getOrgLists } from '@/api/robot';\nvar statusMap = {\n  0: {\n    status: 'default',\n    text: '无效'\n  },\n  1: {\n    status: 'processing',\n    text: '有效'\n  }\n};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    CreateForm: CreateForm,\n    EditForm: EditForm\n  },\n  data: function data() {\n    var _this2 = this,\n        _ref;\n\n    return _ref = {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      addVisible: false,\n      editVisible: false,\n      // orgId: this.$store.getters.orgId\n      orgId: {\n        orgId: 1\n      },\n      orgNames: [],\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        code: '',\n        name: '',\n        orgId: '',\n        validityDate: ''\n      },\n      editData: {},\n      // userId:localStorage.getItem('userId')\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '机器人编码',\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code'\n        }\n      }, {\n        title: '单位名称',\n        dataIndex: 'orgName',\n        scopedSlots: {\n          customRender: 'orgName'\n        }\n      }, {\n        title: '地图名称',\n        dataIndex: 'mapName',\n        scopedSlots: {\n          customRender: 'mapName'\n        }\n      }, {\n        title: '有效截止时间',\n        dataIndex: 'validityDate',\n        scopedSlots: {\n          customRender: 'validityDate'\n        }\n      }, // {\n      //   title: '最后修改用户名称',\n      //   dataIndex: 'userName',\n      //   scopedSlots: { customRender: 'userName' }\n      // },\n      {\n        title: '人脸失效时间(分钟)',\n        dataIndex: 'faceTime',\n        scopedSlots: {\n          customRender: 'faceTime'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getRobotLists(Object.assign(parameter, _this2.queryParam)).then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    }, _defineProperty(_ref, \"orgNames\", []), _defineProperty(_ref, \"roleNames\", []), _defineProperty(_ref, \"selectedRowKeys\", []), _defineProperty(_ref, \"selectedRows\", []), _defineProperty(_ref, \"options\", {\n      alert: {\n        show: true,\n        clear: function clear() {\n          _this2.selectedRowKeys = [];\n        }\n      },\n      rowSelection: {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange\n      }\n    }), _defineProperty(_ref, \"optionAlertShow\", false), _ref;\n  },\n  created: function created() {\n    this.handleOrgLists(); // this.handleRoleList();\n\n    this.tableOption();\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  filters: {\n    statusFilter: function statusFilter(type) {\n      return statusMap[type].text;\n    },\n    statusTypeFilter: function statusTypeFilter(type) {\n      return statusMap[type].status;\n    }\n  },\n  methods: {\n    handleOrgLists: function handleOrgLists() {\n      var _this = this; // var userid = \n\n\n      var param = {\n        userId: 1\n      };\n      getOrgLists(param).then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this.orgNames = res.result;\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    tableOption: function tableOption() {\n      var _this3 = this;\n\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: function clear() {\n              _this3.selectedRowKeys = [];\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: function getCheckboxProps(record) {\n              return {\n                props: {\n                  disabled: record.no === 'No 2',\n                  // Column configuration not to be checked\n                  name: record.no\n                }\n              };\n            }\n          }\n        };\n        this.optionAlertShow = true;\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        };\n        this.optionAlertShow = false;\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      console.log('selectedRowKeys:', selectedRowKeys);\n      console.log('selectedRows:', selectedRows);\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    // 获取角色\n    // handleRoleList(){\n    //   var _this = this;\n    //   getRoleList().then(res => {\n    //     _this.roleNames = res;\n    //   });\n    // 处理新增\n    handleAddSubmit: function handleAddSubmit() {\n      this.$refs.table.refresh(true);\n    },\n    // 重置密码\n    handleResetPwd: function handleResetPwd(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u91CD\\u7F6E \".concat(record.loginName, \"\\u7684\\u5BC6\\u7801\\u5417?\"),\n        okText: '重置',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n            var param = {\n              id: record.id\n            };\n            resetPwd(param).then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('密码重置成功');\n              }\n            }).catch(function () {\n              return _this.$message.error(res.message);\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    // 显示状态修改\n    handleAddVisible: function handleAddVisible() {\n      this.addVisible = true;\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      this.editData = record;\n      this.$refs.editModal.add();\n      this.editVisible = true;\n    },\n    handleChangeOption: function handleChangeOption(value) {\n      console.log(\"select \".concat(value));\n    },\n    handleBlur: function handleBlur() {\n      console.log('blur');\n    },\n    handleFocus: function handleFocus() {\n      console.log('focus');\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    // 删除\n    handleDeleteUser: function handleDeleteUser(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.loginName, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var id = {\n              id: [record.id]\n            };\n            deleteUser(id).then(function (res) {\n              console.log('删除用户返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 批量删除\n    deleteUsers: function deleteUsers() {\n      console.log(this.selectedRowKeys);\n\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u5417?\",\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          // 在这里调用删除接口\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var ids = {\n              id: _this.selectedRowKeys\n            };\n            deleteUser(ids).then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.selectedRowKeys = [];\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<page-view :title=\"title\">\r\n  <a-card :bordered=\"false\">\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"48\">\r\n          <a-col :md=\"6\" :sm=\"24\">\r\n            <a-form-item label=\"机器人编码\">\r\n              <a-input v-model=\"queryParam.code\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"6\" :sm=\"24\">\r\n            <a-form-item label=\"机器人名称\">\r\n              <a-input v-model=\"queryParam.name\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"6\" :sm=\"24\">\r\n            <a-form-item label=\"所属单位\">\r\n              <a-select\r\n                v-model=\"queryParam.orgId\"\r\n                showSearch\r\n                placeholder=\"选择所属单位\"\r\n                optionFilterProp=\"children\"\r\n                :filterOption=\"filterOption\"\r\n              >\r\n                <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\r\n                  {{item.name}}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n           <a-col :md=\"6\" :sm=\"24\">\r\n            <a-form-item label=\"有效截止时间\">\r\n              <a-input v-model=\"queryParam.validityDate\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"!advanced && 8 || 24\" :sm=\"24\">\r\n            <span class=\"table-page-search-submitButtons\" :style=\"advanced && { float: 'right', overflow: 'hidden' } || {} \">\r\n              <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\r\n              <a-button style=\"margin-left: 8px\" @click=\"resetQuery()\">重置</a-button>\r\n            </span>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <div class=\"table-operator\">\r\n      <a-button type=\"dashed\" @click=\"tableOption\">{{ optionAlertShow && '关闭' || '开启' }} alert</a-button>\r\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\r\n          <a-menu slot=\"overlay\">\r\n            <a-menu-item key=\"1\" v-action:delete @click=\"deleteUsers()\"><a-icon type=\"delete\"/>删除</a-menu-item>\r\n          </a-menu>\r\n          <a-button style=\"margin-left: 8px\">\r\n            批量操作 <a-icon type=\"down\" />\r\n          </a-button>\r\n      </a-dropdown>\r\n    </div>\r\n    <s-table\r\n        ref=\"table\"\r\n        size=\"default\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :data=\"loadData\"\r\n        :alert=\"options.alert\"\r\n        :rowSelection=\"options.rowSelection\"\r\n        showPagination=\"auto\"\r\n      >\r\n        <span slot=\"serial\" slot-scope=\"text, record, index\">\r\n          {{ index + 1 }}\r\n        </span>\r\n        <span slot=\"isDel\" slot-scope=\"text\">\r\n          <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\r\n        </span>\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <template>\r\n            <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\r\n            <a-divider type=\"vertical\" v-action:edit />\r\n            <a @click=\"handleDeleteUser(record)\" v-action:delete>删除</a>\r\n          </template>\r\n        </span>\r\n      </s-table>\r\n    <create-form ref=\"createModal\" @ok=\"handleAddSubmit\" />\r\n    <edit-form ref=\"editModal\" :editData=\"editData\" @ok=\"handleAddSubmit\" /> \r\n  </a-card>\r\n  </page-view>\r\n</template>\r\n\r\n<script>\r\nimport { STable } from '@/components'\r\nimport { PageView } from '@/layouts'\r\nimport EditForm from './modules/EditForm'\r\nimport CreateForm from './modules/CreateForm'\r\nimport { getRobotLists , getOrgLists } from '@/api/robot';\r\nconst statusMap = {\r\n  0: {\r\n    status: 'default',\r\n    text: '无效'\r\n  },\r\n  1: {\r\n    status:'processing',\r\n    text: '有效'\r\n  }\r\n}\r\nexport default {\r\n  name: 'TableList',\r\n  components: {\r\n    STable,\r\n    PageView,\r\n    CreateForm,\r\n    EditForm\r\n  },\r\n  data () {\r\n    return {\r\n      // 高级搜索 展开/关闭\r\n      advanced: false,\r\n      addVisible: false,\r\n      editVisible: false,\r\n      // orgId: this.$store.getters.orgId\r\n      orgId: {\r\n        orgId:1\r\n      },\r\n      orgNames:[],\r\n      selectedItems: [],\r\n       // 查询参数\r\n      queryParam: {\r\n        code:'',\r\n        name:'',\r\n        orgId:'',\r\n        validityDate:'',\r\n      },\r\n      editData:{\r\n\r\n      }, \r\n      // userId:localStorage.getItem('userId')\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n        \r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'name',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '机器人编码',\r\n          dataIndex: 'code',\r\n          scopedSlots: { customRender: 'code' }\r\n        },\r\n        {\r\n          title: '单位名称',\r\n          dataIndex: 'orgName',\r\n          scopedSlots: { customRender: 'orgName' },\r\n\r\n        },\r\n        {\r\n          title: '地图名称',\r\n          dataIndex: 'mapName',\r\n          scopedSlots: { customRender: 'mapName' }\r\n        },\r\n        {\r\n          title: '有效截止时间',\r\n          dataIndex: 'validityDate',\r\n          scopedSlots: { customRender: 'validityDate' }\r\n        },\r\n        // {\r\n        //   title: '最后修改用户名称',\r\n        //   dataIndex: 'userName',\r\n        //   scopedSlots: { customRender: 'userName' }\r\n          \r\n        // },\r\n        {\r\n          title: '人脸失效时间(分钟)',\r\n          dataIndex: 'faceTime',\r\n          scopedSlots: { customRender: 'faceTime' }\r\n        },\r\n        \r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        return getRobotLists(Object.assign(parameter, this.queryParam))\r\n          .then(res => {\r\n            console.log(res);\r\n            return res.result\r\n          })\r\n      },\r\n      orgNames:[],\r\n      roleNames:[],\r\n      selectedRowKeys: [],\r\n      selectedRows: [],\r\n      options: {\r\n        alert: { show: true, clear: () => { this.selectedRowKeys = [] } },\r\n        rowSelection: {\r\n          selectedRowKeys: this.selectedRowKeys,\r\n          onChange: this.onSelectChange\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  created(){\r\n    this.handleOrgLists();\r\n    // this.handleRoleList();\r\n    this.tableOption();\r\n  },\r\n  computed: {\r\n    title () {\r\n      return this.$route.meta.title\r\n    },\r\n    \r\n  },\r\n  filters: {\r\n    statusFilter (type) {\r\n      return statusMap[type].text\r\n    },\r\n    statusTypeFilter (type) {\r\n      return statusMap[type].status\r\n    }\r\n  },\r\n  methods: {\r\n    handleOrgLists(){\r\n      var _this = this;\r\n      // var userid = \r\n      var param = { userId : 1 }\r\n      getOrgLists(param).then(res => {\r\n        console.log(res);\r\n        if(res.code == 0){\r\n          _this.orgNames = res.result;\r\n        }\r\n      }).catch( (err) => console.log(err))\r\n    },\r\n    tableOption () {\r\n      if (!this.optionAlertShow) {\r\n        this.options = {\r\n          alert: { show: true, clear: () => { this.selectedRowKeys = [] } },\r\n          rowSelection: {\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            getCheckboxProps: record => ({\r\n              props: {\r\n                disabled: record.no === 'No 2', // Column configuration not to be checked\r\n                name: record.no\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.optionAlertShow = true\r\n      } else {\r\n        this.options = {\r\n          alert: false,\r\n          rowSelection: null\r\n        }\r\n        this.optionAlertShow = false\r\n      }\r\n    },\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      console.log('selectedRowKeys:',selectedRowKeys);\r\n      console.log('selectedRows:',selectedRows);\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    // 获取角色\r\n    // handleRoleList(){\r\n    //   var _this = this;\r\n    //   getRoleList().then(res => {\r\n    //     _this.roleNames = res;\r\n    //   });\r\n\r\n\r\n    // 处理新增\r\n    handleAddSubmit(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    \r\n    // 重置密码\r\n    handleResetPwd(record){\r\n      var _this = this;\r\n      this.$confirm({\r\n        title: '警告',\r\n        content: `真的要重置 ${record.loginName}的密码吗?`,\r\n        okText: '重置',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\r\n            var param = {id:record.id};\r\n            resetPwd(param).then(res => {\r\n              if(res.code == 0){\r\n                _this.$message.success('密码重置成功')\r\n              }\r\n            }).catch(()=>_this.$message.error(res.message));\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n    // 表单重置\r\n    resetQuery(){\r\n      this.queryParam = {};\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 显示状态修改\r\n    handleAddVisible(){\r\n      this.addVisible = true;\r\n    },\r\n    handleEditVisible(record){\r\n      this.editData = record;\r\n      this.$refs.editModal.add();\r\n      this.editVisible = true;\r\n    },\r\n    handleChangeOption(value){\r\n      console.log( `select ${value}`)\r\n    },\r\n    handleBlur() {\r\n      console.log('blur');\r\n    },\r\n    handleFocus() {\r\n      console.log('focus');\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    // 搜索内容\r\n    searchData(){\r\n      this.$refs.table.refresh(true)\r\n    },\r\n    // 删除\r\n    handleDeleteUser(record){\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除 ${record.loginName} 吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          console.log('OK')\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var id = {id: [record.id]};\r\n            deleteUser(id).then(res => {\r\n              console.log('删除用户返回值：',res);\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n      \r\n    },\r\n    // 批量删除\r\n    deleteUsers(){\r\n      console.log(this.selectedRowKeys);\r\n      var _this = this;\r\n       this.$confirm({\r\n        title: '警告',\r\n        content: `真的要删除吗?`,\r\n        okText: '删除',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk () {\r\n          // 在这里调用删除接口\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500)\r\n            var ids = {id:_this.selectedRowKeys}\r\n            deleteUser(ids).then(res => {\r\n              if(res.code == 0){\r\n                 _this.$message.success('删除成功');\r\n                 _this.selectedRowKeys = []\r\n                 _this.$refs.table.refresh(true)\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        onCancel () {\r\n          console.log('Cancel')\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .search {\r\n    margin-bottom: 54px;\r\n  }\r\n\r\n  .fold {\r\n    width: calc(100% - 216px);\r\n    display: inline-block\r\n  }\r\n\r\n  .operator {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .fold {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/robot"}]}