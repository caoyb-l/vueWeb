{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/MapList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/MapList.vue","mtime":1572234292218},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport ShowMap from \"./modules/ShowMap\";\nimport EditMap from \"./modules/EditMap\";\nimport { queryData } from '@/api/common';\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    ShowMap: ShowMap,\n    EditMap: EditMap\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {\n        robotName: '',\n        mapName: '',\n        queryOrgId: ''\n      },\n      columns: [{\n        title: '地图编码',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'id'\n        }\n      }, {\n        title: '地图名称',\n        dataIndex: 'mapName',\n        scopedSlots: {\n          customRender: 'mapName'\n        }\n      }, {\n        title: '上传时间',\n        dataIndex: 'updateDate',\n        scopedSlots: {\n          customRender: 'updateDate'\n        }\n      }, {\n        title: '上传机器人',\n        dataIndex: 'robotName',\n        scopedSlots: {\n          customRender: 'robotName'\n        }\n      }, {\n        title: '所属单位',\n        dataIndex: 'orgName',\n        scopedSlots: {\n          customRender: 'orgName'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var userId = JSON.parse(localStorage.getItem('user')).id;\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, _this2.queryParam, {\n          userId: userId,\n          orgId: orgId\n        }), '/robotMapLib/list').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      orgNames: []\n    };\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  created: function created() {\n    this.handleOrgLists();\n  },\n  methods: {\n    // 获取该用户下的所属单位\n    handleOrgLists: function handleOrgLists() {\n      var _this = this;\n\n      var id = JSON.parse(localStorage.getItem('user')).id;\n      var param = {\n        userId: id\n      };\n      queryData(param, '/robotInfo/getOrglist').then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      this.$refs.editModal.add(record);\n    },\n    handleShowMap: function handleShowMap(record) {\n      this.$refs.showMap.add(record);\n    }\n  }\n};",null]}