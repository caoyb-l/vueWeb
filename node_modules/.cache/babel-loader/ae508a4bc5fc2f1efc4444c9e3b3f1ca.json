{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\modules\\CreateSupercmd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\modules\\CreateSupercmd.vue","mtime":1565595223186},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addData, queryData } from '@/api/common';\nimport CellModal from \"./CellCmdlist\";\nexport default {\n  name: 'createSuperCmd',\n  components: {\n    CellModal: CellModal\n  },\n  data: function data() {\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      cmdObj: {\n        code: '',\n        name: '',\n        msg: ''\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdTypeList: []\n    };\n  },\n  methods: {\n    getSelectItem: function getSelectItem(value) {\n      this.cmdObj.code = value.id;\n      this.cmdObj.name = value.name;\n      this.cmdObj.msg = value.typeName;\n    },\n    add: function add() {\n      this.visible = true;\n    },\n    choiceCellCmd: function choiceCellCmd() {\n      var _this2 = this;\n\n      this.$refs.cellcmd.show();\n      queryData({}, '/cmdUnitType/getCmdUnitTypeList').then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this2.cmdTypeList = res.result;\n        } else {\n          _this2.$message.error(res.message);\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var _this = _this3;\n          setTimeout(function () {\n            var unit = {\n              unit: _this3.cmdObj.code\n            };\n            addData(Object.assign(unit, values), '/superCmd/save').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('新建成功');\n\n                _this3.cmdObj = {};\n              } else {\n                _this.$message.error(res.message);\n              }\n\n              _this.visible = false;\n              _this.confirmLoading = false;\n\n              _this.$emit('ok', values); // 重置输入框内容\n\n\n              _this.form.resetFields();\n            });\n          }, 300);\n        } else {\n          _this3.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["CreateSupercmd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 新增弹框 -->\r\n      <a-modal\r\n      title=\"新建\"\r\n      style=\"top: 20px;\"\r\n      :width=\"1000\"\r\n      v-model=\"visible\"\r\n      @ok=\"handleSubmit\"\r\n    >\r\n    <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"唤醒词\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'wakeKey',\r\n            {rules: [{ required: true, message: '请输入唤醒词' }]}\r\n          ]\"\r\n          placeholder=\"唤醒词\" />\r\n      </a-form-item>\r\n      \r\n      <a-form-item\r\n        label=\"参数\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'params',\r\n            {rules: [{ required: true, message: '请输入参数' }]}\r\n          ]\"\r\n          placeholder=\"参数\" />\r\n      </a-form-item>\r\n      <div style=\"margin-left:180px;margin-bottom:30px;\"><a-button type=\"primary\" @click=\"choiceCellCmd\">选择命令单元</a-button></div>\r\n        <a-form-item\r\n        label=\"命令单元\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n          <div style=\"border:1px solid #ccc;padding:20px;\">\r\n            <a-form-item\r\n              label=\"代码\"\r\n              :labelCol=\"labelCol\"\r\n              :wrapperCol=\"wrapperCol\">\r\n              <a-input v-model=\"cmdObj.code\" disabled />\r\n            </a-form-item>\r\n            <a-form-item\r\n              label=\"名称\"\r\n              :labelCol=\"labelCol\"\r\n              :wrapperCol=\"wrapperCol\">\r\n              <a-input v-model=\"cmdObj.name\" disabled />\r\n            </a-form-item>\r\n            <a-form-item\r\n              label=\"说明\"\r\n              :labelCol=\"labelCol\"\r\n              :wrapperCol=\"wrapperCol\">\r\n              <a-input v-model=\"cmdObj.msg\" disabled />\r\n            </a-form-item>\r\n          </div>\r\n        </a-form-item>\r\n    </a-form>\r\n    <cell-modal ref=\"cellcmd\" @ok=\"getSelectItem\"></cell-modal>\r\n    </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { addData, queryData } from '@/api/common'\r\nimport CellModal from './CellCmdlist'\r\nexport default {\r\n  name: 'createSuperCmd',\r\n  components: {\r\n    CellModal\r\n  },\r\n  data() {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      cmdObj: {\r\n        code: '',\r\n        name: '',\r\n        msg: ''\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),\r\n      cmdTypeList: []\r\n    }\r\n  },\r\n  methods: {\r\n    getSelectItem(value) {\r\n      this.cmdObj.code = value.id\r\n      this.cmdObj.name = value.name\r\n      this.cmdObj.msg = value.typeName\r\n    },\r\n    add() {\r\n      this.visible = true\r\n    },\r\n    choiceCellCmd() {\r\n      this.$refs.cellcmd.show()\r\n      queryData({}, '/cmdUnitType/getCmdUnitTypeList').then(res => {\r\n        console.log(res)\r\n        if (res.code == 0) {\r\n          this.cmdTypeList = res.result\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    handleSubmit() {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          var _this = this\r\n          setTimeout(() => {\r\n            var unit = { unit: this.cmdObj.code }\r\n            addData(Object.assign(unit, values), '/superCmd/save').then(res => {\r\n              if (res.code == 0) {\r\n                _this.$message.success('新建成功')\r\n                this.cmdObj = {}\r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n              _this.visible = false\r\n              _this.confirmLoading = false\r\n              _this.$emit('ok', values)\r\n              // 重置输入框内容\r\n              _this.form.resetFields()\r\n            })\r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/instruction/modules"}]}