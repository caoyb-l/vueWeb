{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js??ref--13-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/permission.js","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/permission.js","mtime":1571637125701},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js","mtime":1571637323383}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport { asyncRouterMap, constantRouterMap } from '@/config/router.config';\n/**\r\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\r\n *\r\n * @param permission\r\n * @param route\r\n * @returns {boolean}\r\n */\n\nfunction hasPermission(permission, route) {\n  if (route.meta && route.meta.permission) {\n    var flag = false;\n\n    for (var i = 0, len = permission.length; i < len; i++) {\n      flag = route.meta.permission.includes(permission[i]);\n\n      if (flag) {\n        return true;\n      }\n    }\n\n    console.log(flag);\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\r\n *\r\n * @param roles\r\n * @param route\r\n * @returns {*}\r\n */\n// eslint-disable-next-line\n\n\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.includes(roles.id);\n  } else {\n    return true;\n  }\n} // 递归过滤路由\n\n\nfunction filterAsyncRouter(routerMap, roles) {\n  var accessedRouters = routerMap.filter(function (route) {\n    if (hasPermission(roles.permissionList, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles); // console.log(route.children);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        var roles = data.roles;\n        var accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",null]}