{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/User.vue","mtime":1587718932125},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport EditModal from \"./modules/EditUser\";\nimport CreateModal from \"./modules/CreateUser\";\nimport { queryData } from '@/api/common';\nvar statusMap = {\n  0: {\n    status: 'default',\n    text: '无效'\n  },\n  1: {\n    status: 'processing',\n    text: '有效'\n  }\n};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    EditModal: EditModal,\n    CreateModal: CreateModal\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        queryOrgId: '',\n        userName: '',\n        loginName: ''\n      },\n      editData: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '登录名',\n        dataIndex: 'loginName',\n        scopedSlots: {\n          customRender: 'loginName'\n        }\n      }, {\n        title: '单位名称',\n        dataIndex: 'orgName',\n        scopedSlots: {\n          customRender: 'orgName'\n        }\n      }, {\n        title: '角色名称',\n        dataIndex: 'roleNames',\n        scopedSlots: {\n          customRender: 'roleNames'\n        }\n      }, {\n        title: '用户姓名',\n        dataIndex: 'userName',\n        scopedSlots: {\n          customRender: 'userName'\n        }\n      }, {\n        title: '手机号',\n        dataIndex: 'mobile',\n        scopedSlots: {\n          customRender: 'mobile'\n        }\n      }, {\n        title: '是否生效',\n        dataIndex: 'isDel',\n        scopedSlots: {\n          customRender: 'isDel'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        console.log('user 请求', parameter);\n        var id = JSON.parse(localStorage.getItem('user')).orgId;\n        var orgId = {\n          orgId: id\n        };\n        return queryData(Object.assign(parameter, _this2.queryParam, orgId), '/userManage/queryUserMsg').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      orgNames: [],\n      roleNames: [],\n      selectedRowKeys: [],\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      optionAlertShow: false\n    };\n  },\n  created: function created() {\n    this.handleOrgList();\n    this.handleRoleList();\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  filters: {\n    statusFilter: function statusFilter(type) {\n      return statusMap[type].text;\n    },\n    statusTypeFilter: function statusTypeFilter(type) {\n      return statusMap[type].status;\n    }\n  },\n  methods: {\n    // 获取单位下的单位\n    handleOrgList: function handleOrgList() {\n      var id = JSON.parse(localStorage.getItem('user')).orgId;\n\n      var _this = this;\n\n      queryData({\n        org: id\n      }, '/userManage/getHrOrgByPid').then(function (res) {\n        console.log(res);\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    tableOption: function tableOption() {\n      var _this3 = this;\n\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: function clear() {\n              _this3.selectedRowKeys = [];\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: function getCheckboxProps(record) {\n              return {\n                props: {\n                  disabled: record.no === 'No 2',\n                  // Column configuration not to be checked\n                  name: record.no\n                }\n              };\n            }\n          }\n        };\n        this.optionAlertShow = true;\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        }, this.optionAlertShow = false;\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    // 获取角色\n    handleRoleList: function handleRoleList() {\n      var _this = this;\n\n      var roleId = JSON.parse(localStorage.getItem('user')).roleId;\n      queryData({\n        role: roleId\n      }, '/userManage/getAllSysRole').then(function (res) {\n        _this.roleNames = res;\n      });\n    },\n    // 处理新增\n    handleAddSubmit: function handleAddSubmit() {\n      this.$refs.table.refresh(true);\n    },\n    // 重置密码\n    handleResetPwd: function handleResetPwd(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u91CD\\u7F6E \".concat(record.loginName, \"\\u7684\\u5BC6\\u7801\\u5417?\"),\n        okText: '重置',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n            var param = {\n              id: record.id\n            };\n            queryData(param, '/userManage/revertPassword').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('密码重置成功');\n              }\n            }).catch(function () {\n              return _this.$message.error(res.message);\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {\n        queryOrgId: '',\n        userName: '',\n        loginName: ''\n      };\n      this.$refs.table.refresh(true);\n    },\n    // 显示状态修改\n    handleAddVisible: function handleAddVisible() {\n      this.addVisible = true;\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      this.editData = record;\n      this.$refs.editModal.add(record);\n    },\n    handleChangeOption: function handleChangeOption(value) {\n      console.log(\"select \".concat(value));\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    // 删除\n    handleDeleteUser: function handleDeleteUser(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.loginName, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var id = {\n              id: [record.id]\n            };\n            queryData(id, '/userManage/delUserMsg').then(function (res) {\n              console.log('删除用户返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh();\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 批量删除\n    deleteUsers: function deleteUsers() {\n      console.log(this.selectedRowKeys);\n\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u5417?\",\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          // 在这里调用删除接口\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var ids = {\n              id: _this.selectedRowKeys\n            };\n            queryData(ids, '/userManage/delUserMsg').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.selectedRowKeys = [];\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",null]}