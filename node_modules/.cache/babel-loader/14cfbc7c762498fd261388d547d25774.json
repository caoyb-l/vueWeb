{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/CreateImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/CreateImage.vue","mtime":1587710678396},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nimport { uploadUrl } from '@/api/upload';\nexport default {\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      showNetUrl: false,\n      uploadPic: false,\n      // 重新上传框\n      fileName: '',\n      // 重新上传文件名\n      showName: false,\n      // 文件名称\n      showPicRadio: false,\n      uploadRadio: '',\n      showPic: true,\n      descnVisible: false,\n      // 备注是否隐藏\n      appImageVisible: false,\n      appImageWebUrl: '',\n      // 图片访问地址\n      picName: '',\n      // 图片名称\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      fileList: [],\n      descn: '',\n      // 选择网页时的备注\n      typeId: '',\n      robotCode: '',\n      imageTypeList: [{\n        typeId: 0,\n        type: '开机'\n      }, {\n        typeId: 1,\n        type: '休息'\n      }, {\n        typeId: 2,\n        type: 'LOGO'\n      }, {\n        typeId: 3,\n        type: '主页'\n      }],\n      imageList: [],\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '机器人编码',\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code',\n          filterDropdown: 'filterDropdown',\n          filterIcon: 'filterIcon'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var id = JSON.parse(localStorage.getItem('user')).id;\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId; // console.log('user 请求', parameter)\n\n        var params = {\n          type: 1,\n          // 判断标识 新增操作传1 修改操作传2\n          imageType: _this2.typeId,\n          code: _this2.robotCode,\n          orgId: orgId,\n          userId: id\n        };\n        return queryData(Object.assign(parameter, params), '/robotInfo/loadRobotPageListByAppImage').then(function (res) {\n          // console.log(res)\n          return res.result;\n        });\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false,\n      url: '',\n      radioValue: 1\n    };\n  },\n  methods: {\n    // 检索\n    handleSearch: function handleSearch(selectedKeys) {\n      this.robotCode = selectedKeys[0];\n      console.log(this.robotCode);\n      this.$refs.table.refresh();\n    },\n    handleReset: function handleReset(clearFilters) {\n      clearFilters();\n      this.robotCode = '';\n    },\n    changePicRadio: function changePicRadio(option) {\n      console.log(option.target.value);\n      var values = option.target.value;\n      this.uploadRadio = values; // 资源库\n\n      if (values == '1') {\n        this.showPic = true;\n        this.uploadPic = false;\n        this.showName = false;\n        this.showNetUrl = false;\n        this.descnVisible = false;\n      } // 网络资源\n\n\n      if (values == '2') {\n        this.showPic = false;\n        this.uploadPic = false;\n        this.showName = true;\n        this.showNetUrl = true;\n        this.descnVisible = false;\n        this.picName = '';\n      } // 自定义模块\n\n\n      if (values == '3') {\n        this.showPic = false;\n        this.uploadPic = false;\n        this.showName = true;\n        this.showNetUrl = false;\n        this.descnVisible = true;\n        this.picName = '';\n      } // 重新上传\n\n\n      if (values == '4') {\n        this.showPic = false;\n        this.uploadPic = true;\n        this.showName = true;\n        this.showNetUrl = false;\n        this.descnVisible = false;\n      }\n    },\n    getImageList: function getImageList() {\n      var id = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        orgId: id\n      };\n\n      var _this = this;\n\n      queryData(param, '/skillOptionFile/getFileListByType').then(function (res) {\n        _this.imageList = res.picture;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    // 类型选择列表监听事件\n    handleAppImageChange: function handleAppImageChange(value) {\n      this.typeId = value;\n      this.robotCode = '';\n      this.$refs.table.refresh();\n    },\n    // 公共图片选择列表监听事件\n    handleAppImageChange2: function handleAppImageChange2(value, option) {\n      if (option == undefined) {\n        this.showNetUrl = true;\n        this.uploadPic = true;\n      } else {\n        this.uploadPic = false;\n        this.showNetUrl = false;\n        this.picName = option.key;\n      }\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 选择机器人\n    onSelectChange: function onSelectChange(record, selected, nativeEvent) {\n      // console.log(record, selected)\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, changeRows) {\n      var _this3 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this3.selectedRowKeys.add(value.id);\n        });\n      } else {\n        this.selectedRowKeys.clear();\n      }\n    },\n    add: function add() {\n      this.url = uploadUrl + 'appImage/fileUpload';\n      this.visible = true;\n      this.selectedRowKeys.clear();\n      this.getImageList();\n      this.showNetUrl = false;\n      this.uploadPic = false; // 重新上传框\n\n      this.showName = false; // 文件名称\n\n      this.showPicRadio = false;\n      this.showPic = true;\n      this.descnVisible = false; // 备注是否隐藏\n\n      this.appImageVisible = false;\n      this.typeId = '';\n      this.robotCode = '';\n      this.radioValue = 1;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          if (_this4.fileName == '' && _this4.uploadRadio == '4') {\n            _this4.$message.error('请上传图片');\n\n            return;\n          }\n\n          var param = {\n            robotId: _toConsumableArray(_this.selectedRowKeys),\n            picName: _this4.picName,\n            fileName: _this4.fileName\n          };\n          queryData(_objectSpread({}, param, values), '/appImage/save').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('新建成功');\n\n              _this4.fileName = '';\n              _this4.typeId = '';\n              _this4.descn = ''; // 网页备注\n\n              _this4.name = '';\n              _this.fileList = [];\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this4.confirmLoading = false;\n        }\n      });\n    },\n    handlePreview: function () {\n      var _handlePreview = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(file) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(file);\n                this.appImageWebUrl = file.url || file.thumbUrl;\n                this.appImageVisible = true;\n                console.log(this.appImageWebUrl);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePreview(_x) {\n        return _handlePreview.apply(this, arguments);\n      }\n\n      return handlePreview;\n    }(),\n    // 文件长传监听\n    handleChange: function handleChange(_ref) {\n      var fileList = _ref.fileList;\n\n      if (fileList.length > 0) {\n        if (fileList[0].status == 'done') {\n          var res = fileList[0].response; // console.log(res)\n\n          if (res.code == 0) {\n            this.fileName = res.fileName;\n            this.$message.success(\"\".concat(res.fileName, \" \\u4E0A\\u4F20\\u6210\\u529F\"));\n          } else {\n            this.$message.error(res.message);\n          }\n        }\n      }\n\n      this.fileList = fileList;\n    },\n    // 删除文件\n    handleRemoveFile: function handleRemoveFile(file) {\n      var _this = this;\n\n      queryData({\n        fileName: file.response.fileName\n      }, '/appImage/delFile').then(function (res) {\n        if (res.code == 0) {\n          _this.$message.error(res.message);\n\n          return true;\n        } else {\n          _this.$message.error(res.message);\n\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.appImageVisible = false;\n    }\n  }\n};",null]}