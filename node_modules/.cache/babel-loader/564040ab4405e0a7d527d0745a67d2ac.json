{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/FileManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/system/FileManage.vue","mtime":1584499909440},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport EditForm from \"./modules/EditFile\";\nimport CreateFile from \"./modules/CreateFile\";\nimport { queryData } from '@/api/common';\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    EditForm: EditForm,\n    CreateFile: CreateFile\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      headers: {\n        authorization: 'authorization-text'\n      },\n      // 查询参数\n      queryParam: {\n        appVersion: '',\n        orgId: ''\n      },\n      orgNames: [],\n      editData: {},\n      options: {\n        alert: false,\n        rowSelection: null\n      },\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '文件名称',\n        dataIndex: 'fileName'\n      }, {\n        title: '文件类型',\n        dataIndex: 'fileType'\n      }, {\n        title: '文件访问路径',\n        dataIndex: 'fileUrl'\n      }, {\n        title: '所属单位',\n        dataIndex: 'orgName'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        console.log('App 请求', parameter);\n        var orgId;\n\n        if (_this2.queryParam.orgId > 0) {\n          orgId = _this2.queryParam.orgId;\n        } else {\n          orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        }\n\n        return queryData(Object.assign(parameter, _this2.queryParam, {\n          orgId: orgId\n        }), '/skillOptionFile/queryFileList').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  created: function created() {\n    this.handleOrgLists();\n  },\n  methods: {\n    // 获取该用户下的所属单位\n    handleOrgLists: function handleOrgLists() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        org: orgId\n      };\n      queryData(param, '/userManage/getHrOrgByPid').then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    // 下拉框\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    handleChange: function handleChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        this.$message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n      } else if (info.file.status === 'error') {\n        this.$message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    },\n    // 处理更新\n    handleRefresh: function handleRefresh() {\n      this.$refs.table.refresh();\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      this.$refs.editModal.add(record);\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    // 删除\n    handleDeleteUser: function handleDeleteUser(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.fileName, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var param = {\n              id: record.id,\n              fileUrl: record.fileUrl\n            };\n            queryData(param, '/skillOptionFile/delFile').then(function (res) {\n              console.log('删除返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh();\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",null]}