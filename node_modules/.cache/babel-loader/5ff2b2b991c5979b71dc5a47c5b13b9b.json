{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js??ref--13-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/permission.js","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/permission.js","mtime":1571637125669},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js","mtime":1571637323383}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport _objectSpread from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport notification from 'ant-design-vue/es/notification';\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil';\nimport { ACCESS_TOKEN, USER_ROLE } from '@/store/mutation-types';\nimport { cutStrByFullLength } from \"./components/_util/util\"; // 绿色进度条\n\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['login', 'register', 'registerResult']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar、\n\n  to.meta && typeof to.meta.title !== 'undefined' && setDocumentTitle(\"\".concat(to.meta.title, \" - \").concat(domTitle));\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    if (to.path === '/user/login') {\n      next({\n        path: '/dashboard/workplace'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.roles.length === 0) {\n        store.dispatch('GetInfo', Vue.ls.get(USER_ROLE)).then(function (res) {\n          var roles = res.result && res.result.role;\n          store.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            // 动态添加可访问路由表\n            // store.getters.addRouters 是 router.config.js\n            router.addRoutes(store.getters.addRouters); // decodeURIComponent解码\n\n            var redirect = decodeURIComponent(from.query.redirect || to.path);\n\n            if (to.path === redirect) {\n              // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n              next(_objectSpread({}, to, {\n                replace: true\n              }));\n            } else {\n              // 跳转到目的路由\n              next({\n                path: redirect\n              });\n            }\n          });\n        }).catch(function () {\n          notification.error({\n            message: '错误',\n            description: '请求用户信息失败，请重试'\n          });\n          store.dispatch('Logout').then(function () {\n            next({\n              path: '/user/login',\n              query: {\n                redirect: to.fullPath\n              }\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    console.log('access_token 为空');\n\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next({\n        path: '/user/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/permission.js"],"names":["Vue","router","store","NProgress","notification","setDocumentTitle","domTitle","ACCESS_TOKEN","USER_ROLE","cutStrByFullLength","configure","showSpinner","whiteList","beforeEach","to","from","next","start","meta","title","ls","get","path","done","getters","roles","length","dispatch","then","res","result","role","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","error","message","description","fullPath","console","log","includes","name","afterEach"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css' // progress bar style\r\nimport notification from 'ant-design-vue/es/notification'\r\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil'\r\nimport { ACCESS_TOKEN ,USER_ROLE } from '@/store/mutation-types'\r\nimport { cutStrByFullLength } from './components/_util/util';\r\n// 绿色进度条\r\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\r\n\r\nconst whiteList = ['login', 'register', 'registerResult'] // no redirect whitelist\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start() // start progress bar、\r\n  to.meta && (typeof to.meta.title !== 'undefined' && setDocumentTitle(`${to.meta.title} - ${domTitle}`))\r\n  \r\n  if (Vue.ls.get(ACCESS_TOKEN)) {\r\n    if (to.path === '/user/login') {\r\n      next({ path: '/dashboard/workplace' })\r\n      NProgress.done()\r\n    } else {\r\n      if (store.getters.roles.length === 0) {\r\n        store\r\n          .dispatch('GetInfo',Vue.ls.get(USER_ROLE))\r\n          .then(res => {\r\n            const roles = res.result && res.result.role;\r\n            store.dispatch('GenerateRoutes', { roles }).then(() => {\r\n              // 根据roles权限生成可访问的路由表\r\n              // 动态添加可访问路由表\r\n              // store.getters.addRouters 是 router.config.js\r\n              router.addRoutes(store.getters.addRouters)\r\n              // decodeURIComponent解码\r\n              const redirect = decodeURIComponent(from.query.redirect || to.path)\r\n              if (to.path === redirect) {\r\n                // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n                next({ ...to, replace: true })\r\n              } else {\r\n                // 跳转到目的路由\r\n                next({ path: redirect })\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n            notification.error({\r\n              message: '错误',\r\n              description: '请求用户信息失败，请重试'\r\n            })\r\n            store.dispatch('Logout').then(() => {\r\n              next({ path: '/user/login', query: { redirect: to.fullPath } })\r\n            })\r\n          })\r\n      } else {\r\n        next()\r\n      }\r\n    }\r\n  } else {\r\n    console.log('access_token 为空');\r\n    if (whiteList.includes(to.name)) {\r\n      // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next({ path: '/user/login', query: { redirect: to.fullPath } })\r\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // finish progress bar\r\n})\r\n"]}]}