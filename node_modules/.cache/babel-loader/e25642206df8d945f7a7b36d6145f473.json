{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/CreateSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/CreateSensor.vue","mtime":1584669518257},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nimport CmdList from \"../../Cmd\";\nexport default {\n  components: {\n    CmdList: CmdList,\n    STable: STable\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      selectCmd: '',\n      showEditCmd: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      triggerCmdList: [],\n      cmdList: [],\n      triggerId: '',\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '机器人编码',\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var id = JSON.parse(localStorage.getItem('user')).id;\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        console.log('user 请求', parameter);\n        var params = {\n          type: '1',\n          triggerId: _this2.triggerId,\n          code: '',\n          name: '',\n          orgId: orgId,\n          userId: id,\n          validityDate: ''\n        };\n        return queryData(Object.assign(parameter, params, _this2.queryParam), '/robotInfo/loadPageListByTruggerRobot').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    changeCmd: function changeCmd(event) {\n      this.selectCmd = event;\n      this.showEditCmd = true;\n    },\n    // showCmd() {\n    //   console.log(this.selectCmd)\n    //   this.$refs.cmd.show(\"动作集\",\"\",this.selectCmd)\n    // },\n    // 新增动作集\n    addCmd: function addCmd() {\n      console.log(this.selectCmd);\n      this.$refs.cmd.show('编辑动作集', '', 0);\n    },\n    // 修改动作集\n    editCmd: function editCmd() {\n      console.log(this.selectCmd);\n      this.$refs.cmd.show('编辑动作集', '', this.selectCmd);\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId: function getCmdId(cmd) {\n      this.getCmdList();\n      this.selectCmd = cmd;\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      }); // this.cmdId = parseInt(cmd)\n    },\n    handleTriggerCmdChange: function handleTriggerCmdChange(value) {\n      console.log(\"selected \".concat(value));\n      this.triggerId = value;\n      this.$refs.table.refresh();\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 选择机器人\n    onSelectChange: function onSelectChange(record, selected, nativeEvent) {\n      console.log(record, selected);\n\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, changeRows) {\n      var _this3 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this3.selectedRowKeys.add(value.id);\n        });\n      } else {\n        changeRows.map(function (value, index) {\n          _this3.selectedRowKeys.delete(value.id);\n        });\n      }\n    },\n    // 获取指令列表\n    getTriggerCmdList: function getTriggerCmdList() {\n      var _this = this;\n\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(function (res) {\n        console.log('指令列表', res);\n\n        if (res.code == 0) {\n          _this.triggerCmdList = res.supercmdTriggerList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    //获取动作集\n    getCmdList: function getCmdList() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        orgId: orgId\n      };\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        console.log('动作集', res);\n\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        }\n      });\n    },\n    add: function add() {\n      this.visible = true;\n      this.selectCmd = '';\n      this.showEditCmd = false;\n      this.getTriggerCmdList();\n      this.getCmdList();\n      this.selectedRowKeys.clear();\n\n      if (this.$refs.table) {\n        this.$refs.table.refresh();\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            robotId: _toConsumableArray(_this.selectedRowKeys),\n            cmdId: '1'\n          };\n          queryData(_objectSpread({}, param, values), '/supercmdTriggerRobot/save').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('新建成功');\n\n              _this4.triggerId = '';\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this4.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["CreateSensor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 新增弹框 -->\n  <a-modal\n    title=\"新建\"\n    style=\"top: 20px;\"\n    :width=\"'70%'\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    :destroyOnClose=\"true\"\n    :maskClosable=\"false\"\n    :keyboard=\"true\"\n    v-preventReClicks\n  >\n    <a-form :form=\"form\">\n      <a-form-item label=\"触发指令\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择触发指令\"\n          optionFilterProp=\"children\"\n          style=\"width: 200px\"\n          @change=\"handleTriggerCmdChange\"\n          :filterOption=\"filterOption\"\n          v-decorator=\"[\n            'triggerId',\n            {rules: [{required: true,  message: '选择触发指令' }],initialValue:triggerId}\n          ]\"\n        >\n          <a-select-option\n            v-for=\"(item) in triggerCmdList\"\n            :key=\"item.id\"\n            :value=\"item.id\"\n          >{{item.triggerName}}</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"选择机器人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <s-table\n          ref=\"table\"\n          size=\"middle\"\n          rowKey=\"id\"\n          :columns=\"columns\"\n          :data=\"loadData\"\n          :alert=\"options.alert\"\n          :rowSelection=\"options.rowSelection\"\n          showPagination=\"auto\"\n        >\n          <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n        </s-table>\n      </a-form-item>\n      <a-form-item label=\"动作集\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择动作集\"\n          optionFilterProp=\"children\"\n          style=\"width: 200px\"\n          @change=\"changeCmd($event)\"\n          :filterOption=\"filterOption\"\n          v-decorator=\"[\n            'cmdId',\n            {rules: [{required: true,  message: '选择动作集' }],initialValue:selectCmd}\n          ]\"\n        >\n          <a-select-option v-for=\"(item) in cmdList\" :key=\"item.id\" :value=\"item.id\">{{item.name}}</a-select-option>\n        </a-select>\n\n        <a-button type=\"primary\" style=\"margin-left:20px\" @click=\"addCmd()\">新增动作集</a-button>\n        <a-divider type=\"vertical\" />\n        <a-button id=\"chgCmd\" type=\"primary\" @click=\"editCmd()\" v-if=\"showEditCmd\">修改当前动作集</a-button>\n      </a-form-item>\n    </a-form>\n    <cmd-list @getCmdId=\"getCmdId\" ref=\"cmd\"></cmd-list>\n  </a-modal>\n</template>\n\n<script>\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data() {\n    return {\n      selectCmd: '',\n      showEditCmd: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      triggerCmdList: [],\n      cmdList: [],\n      triggerId: '',\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '机器人名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '机器人编码',\n          dataIndex: 'code',\n          scopedSlots: { customRender: 'code' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        var id = JSON.parse(localStorage.getItem('user')).id\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId\n        console.log('user 请求', parameter)\n        var params = {\n          type: '1',\n          triggerId: this.triggerId,\n          code: '',\n          name: '',\n          orgId: orgId,\n          userId: id,\n          validityDate: ''\n        }\n        return queryData(\n          Object.assign(parameter, params, this.queryParam),\n          '/robotInfo/loadPageListByTruggerRobot'\n        ).then(res => {\n          console.log(res)\n          return res.result\n        })\n      },\n      selectedRowKeys: new Set([]),\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    changeCmd(event) {\n      this.selectCmd = event\n      this.showEditCmd = true\n    },\n    // showCmd() {\n    //   console.log(this.selectCmd)\n    //   this.$refs.cmd.show(\"动作集\",\"\",this.selectCmd)\n    // },\n    // 新增动作集\n    addCmd() {\n      console.log(this.selectCmd)\n      this.$refs.cmd.show('编辑动作集', '', 0)\n    },\n    // 修改动作集\n    editCmd() {\n      console.log(this.selectCmd)\n      this.$refs.cmd.show('编辑动作集', '', this.selectCmd)\n    },\n\n    // 编辑动作集后，获取动作集ID\n    getCmdId (cmd) {\n      this.getCmdList()\n      this.selectCmd = cmd\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      })\n      // this.cmdId = parseInt(cmd)\n    },\n\n    handleTriggerCmdChange(value) {\n      console.log(`selected ${value}`)\n      this.triggerId = value\n      this.$refs.table.refresh()\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    // 选择机器人\n    onSelectChange(record, selected, nativeEvent) {\n      console.log(record, selected)\n      if (selected) {\n        this.selectedRowKeys.add(record.id)\n      } else {\n        this.selectedRowKeys.delete(record.id)\n      }\n    },\n    onSelectChangeAll(selected, changeRows) {\n      if (selected) {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.add(value.id)\n        })\n      } else {\n        changeRows.map((value, index) => {\n          this.selectedRowKeys.delete(value.id)\n        })\n      }\n    },\n    // 获取指令列表\n    getTriggerCmdList() {\n      var _this = this\n      queryData({}, '/supercmdTrigger/getSupercmdTriggerList').then(res => {\n        console.log('指令列表', res)\n        if (res.code == 0) {\n          _this.triggerCmdList = res.supercmdTriggerList\n        } else {\n          _this.$message.error(res.message)\n        }\n      })\n    },\n    //获取动作集\n    getCmdList() {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: orgId }\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\n        console.log('动作集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        }\n      })\n    },\n\n    add() {\n      this.visible = true\n      this.selectCmd = ''\n      this.showEditCmd = false\n      this.getTriggerCmdList()\n      this.getCmdList()\n      this.selectedRowKeys.clear()\n      if (this.$refs.table) {\n        this.$refs.table.refresh()\n      }\n    },\n\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            robotId: [..._this.selectedRowKeys],\n            cmdId: '1'\n          }\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('新建成功')\n              this.triggerId = ''\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/instruction/modules"}]}