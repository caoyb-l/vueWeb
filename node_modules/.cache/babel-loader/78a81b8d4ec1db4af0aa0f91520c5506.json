{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/src/views/instruction/CmdCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/src/views/instruction/CmdCollection.vue","mtime":1578969938047},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/publicSecurityConvenient/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport CmdList from \"../Cmd\";\nimport EditCmdColl from \"./modules/EditCmdColl\"; // import EditRobot from './modules/EditRobot'\n\nimport { queryData } from '@/api/common';\nimport CreateCmdColl from \"./modules/CreateCmdColl\";\nexport default {\n  name: 'TableList',\n  components: {\n    CreateCmdColl: CreateCmdColl,\n    STable: STable,\n    PageView: PageView,\n    EditCmdColl: EditCmdColl,\n    // EditRobot,\n    CmdList: CmdList\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      advanced: false,\n      addVisible: false,\n      editVisible: false,\n      // orgId: this.$store.getters.orgId\n      orgId: {\n        orgId: 1\n      },\n      selectedItems: [],\n      // 查询参数\n      queryParam: {\n        name: '',\n        orgId: ''\n      },\n      //   editData:{},\n      cmdpage: {\n        alert: false,\n        rowSelection: null\n      },\n      // userId:localStorage.getItem('userId')\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '命令集ID',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'id'\n        }\n      }, {\n        title: '循环次数',\n        dataIndex: 'circulation',\n        scopedSlots: {\n          customRender: 'circulation'\n        }\n      }, {\n        title: '操作时间',\n        dataIndex: 'create_date',\n        scopedSlots: {\n          customRender: 'create_date'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, _this2.queryParam, {\n          orgId: orgId\n        }), '/cmdCollection/getCmdCollectionPage').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      },\n      mapList: [],\n      roleNames: [],\n      selectedRowKeys: []\n    };\n  },\n  created: function created() {\n    this.getMap();\n  },\n  computed: {\n    title: function title() {\n      return this.$route.meta.title;\n    }\n  },\n  methods: {\n    // 获取该单位下的地图\n    getMap: function getMap() {\n      var _this3 = this;\n\n      var org = JSON.parse(localStorage.getItem('user')).orgId;\n      queryData({\n        orgId: org\n      }, '/robotMapLib/getRobotMapLibList').then(function (res) {\n        console.log('-----------getMap', res);\n        _this3.mapList = res.result;\n      });\n    },\n    onChange: function onChange(date, dateString) {\n      this.queryParam.validityDate = dateString;\n      console.log(date, dateString);\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    // 处理新增\n    handleAddSubmit: function handleAddSubmit() {\n      this.$refs.table.refresh(true);\n    },\n    // 打开新增命令集界面\n    addCmd: function addCmd() {\n      this.$refs.CreateCmdColl.add();\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    // 显示状态修改\n    handleAddVisible: function handleAddVisible() {\n      this.addVisible = true;\n    },\n    // 编辑动作集\n    handleEditVisible: function handleEditVisible(record) {\n      // let mapId = this.editSkills.map == undefined ? 0 : this.editSkills.map\n      // let cmd = this.editSkills.cmd == undefined ? 0 : this.editSkills.cmd\n      // console.log(\"编辑动作集\"+mapId+\"/\"+cmd +\"/\"+ this.businessName +\"/\"+ this.skillName)\n      // this.$refs.cmd.show(this.businessName + this.skillName,mapId,cmd)\n      console.info(record); // this.editData = record\n      // this.$refs.editModal.add(record)\n\n      this.$refs.EditCmdColl.add(record);\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    // 删除命令集\n    handleDelete: function handleDelete(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.name, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var id = {\n              entityId: record.id\n            };\n            queryData(id, '/cmdCollection/delete').then(function (res) {\n              console.log('删除返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 兼容命令集\n    updateCmdPast: function updateCmdPast(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u628A \\u5DF2\\u7F16\\u8F91\\u597D\\u7684<\".concat(record.name, \">\\u517C\\u5BB9\\u5230\\u73B0\\u5728\\u7684\\u7248\\u672C\\u5417?\"),\n        okText: '确认',\n        okType: 'danger',\n        cancelText: '我再想想',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n            var id = {\n              entityId: record.id\n            };\n            queryData(id, '/cmdCollection/updateCmdPast').then(function (res) {\n              console.log('删除返回值：', res);\n\n              if (res.code == 0) {\n                _this.$message.success('转化成功，请查看');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",null]}