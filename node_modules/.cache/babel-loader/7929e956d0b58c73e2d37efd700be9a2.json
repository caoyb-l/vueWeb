{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robotTheme/robotTheme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robotTheme/robotTheme.vue","mtime":1587786141789},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { PageView } from '@/layouts';\nimport { queryData } from '@/api/common';\nimport CreateModel from \"./modules/CreateTheme\";\nimport EditModel from \"./modules/EditTheme\";\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    PageView: PageView,\n    CreateModel: CreateModel,\n    EditModel: EditModel\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      cmdTypeList: [],\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '模版名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '单位',\n        dataIndex: 'orgName',\n        scopedSlots: {\n          customRender: 'orgName'\n        }\n      }, {\n        title: '系统版本',\n        dataIndex: 'robot_Version',\n        scopedSlots: {\n          customRender: 'robot_Version'\n        }\n      }, {\n        title: '创建人',\n        dataIndex: 'created_User',\n        scopedSlots: {\n          customRender: 'created_User'\n        }\n      }, {\n        title: '时间',\n        dataIndex: 'codecreated_Time',\n        scopedSlots: {\n          customRender: 'created_Time'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var org = JSON.parse(localStorage.getItem('user')).orgId;\n        var user = JSON.parse(localStorage.getItem('user')).id;\n        return queryData(Object.assign(parameter, {\n          orgId: org,\n          user: user\n        }, _this2.queryParam), '/robotTheme/list').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  computed: {// title() {\n    //   return this.$route.meta.title\n    // }\n  },\n  methods: {\n    // 处理刷新\n    handleRefresh: function handleRefresh() {\n      this.$refs.table.refresh(true);\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {\n        name: ''\n      };\n      this.$refs.table.refresh(true);\n    },\n    handleEditVisible: function handleEditVisible(record) {\n      this.$refs.editModal.edit(record);\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    // 删除\n    handleDelete: function handleDelete(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.name, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 200);\n            var id = {\n              entityId: record.id\n            };\n            queryData(id, '/robotTheme/delete').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["robotTheme.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,SAAA,MAAA,QAAA,cAAA;AACA,SAAA,QAAA,QAAA,WAAA;AACA,SAAA,SAAA,QAAA,cAAA;AACA,OAAA,WAAA;AACA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,WAAA,EAAA,WAHA;AAIA,IAAA,SAAA,EAAA;AAJA,GAFA;AAQA,EAAA,IARA,kBAQA;AAAA;;AACA,WAAA;AACA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAFA;AAKA,MAAA,WAAA,EAAA,EALA;AAMA;AACA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,SAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OADA,EAMA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,MAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OANA,EAWA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,SAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OAXA,EAgBA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,eAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OAhBA,EAqBA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,SAAA,EAAA,cAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OArBA,EA0BA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,kBAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OA1BA,EA+BA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,QAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OA/BA,CAPA;AA4CA;AACA,MAAA,QAAA,EAAA,kBAAA,SAAA,EAAA;AACA,YAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,KAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA,EAAA,kBAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,iBAAA,GAAA,CAAA,MAAA;AACA,SAHA,CAAA;AAIA;AApDA,KAAA;AAsDA,GA/DA;AAgEA,EAAA,QAAA,EAAA,CACA;AACA;AACA;AAHA,GAhEA;AAqEA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAJA;AAKA;AACA,IAAA,UANA,wBAMA;AACA,WAAA,UAAA,GAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAGA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAXA;AAYA,IAAA,iBAZA,6BAYA,MAZA,EAYA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAdA;AAeA;AACA,IAAA,UAhBA,wBAgBA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAlBA;AAmBA;AACA,IAAA,YApBA,wBAoBA,MApBA,EAoBA;AACA,UAAA,KAAA,GAAA,IAAA;;AACA,WAAA,QAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,OAAA,2CAAA,MAAA,CAAA,IAAA,aAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,MAAA,EAAA,QAJA;AAKA,QAAA,UAAA,EAAA,IALA;AAMA,QAAA,IANA,kBAMA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EADA,CAEA;;AACA,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,UAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,GAAA,OAAA,GAAA,MAAA,EAAA,GAAA,CAAA;AACA,gBAAA,EAAA,GAAA;AAAA,cAAA,QAAA,EAAA,MAAA,CAAA;AAAA,aAAA;AACA,YAAA,SAAA,CAAA,EAAA,EAAA,oBAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,eAHA,MAGA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,aAPA;AAQA,WAXA,EAWA,KAXA,CAWA;AAAA,mBAAA,OAAA,CAAA,GAAA,CAAA,cAAA,CAAA;AAAA,WAXA,CAAA;AAYA,SArBA;AAsBA,QAAA,QAtBA,sBAsBA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA;AAxBA,OAAA;AA0BA;AAhDA;AArEA,CAAA","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"6\" :sm=\"24\">\n            <a-form-item label=\"主题名称\">\n              <a-input v-model=\"queryParam.name\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <a-button type=\"primary\" @click=\"searchData()\">查询</a-button>\n            <a-button style=\"margin-left: 10px\" @click=\"resetQuery()\">重置</a-button>\n            <a-button style=\"margin-left: 10px\" type=\"primary\" icon=\"plus\" @click=\"$refs.createModal.add()\">新建</a-button>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <s-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      showPagination=\"auto\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <template>\n          <a @click=\"handleEditVisible(record)\" v-action:edit>编辑</a>\n          <a-divider type=\"vertical\" />\n          <a @click=\"handleDelete(record)\" v-action:delete>删除</a>\n        </template>\n      </span>\n    </s-table>\n    <create-model ref=\"createModal\" @ok=\"handleRefresh\"></create-model>\n    <edit-model ref=\"editModal\" @ok=\"handleRefresh\"></edit-model>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { PageView } from '@/layouts'\nimport { queryData } from '@/api/common'\nimport CreateModel from './modules/CreateTheme'\nimport EditModel from './modules/EditTheme'\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    PageView,\n    CreateModel,\n    EditModel\n  },\n  data() {\n    return {\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      cmdTypeList: [],\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '模版名称',\n          dataIndex: 'name',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '单位',\n          dataIndex: 'orgName',\n          scopedSlots: { customRender: 'orgName' }\n        },\n        {\n          title: '系统版本',\n          dataIndex: 'robot_Version',\n          scopedSlots: { customRender: 'robot_Version' }\n        },\n        {\n          title: '创建人',\n          dataIndex: 'created_User',\n          scopedSlots: { customRender: 'created_User' }\n        },\n        {\n          title: '时间',\n          dataIndex: 'codecreated_Time',\n          scopedSlots: { customRender: 'created_Time' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        const org = JSON.parse(localStorage.getItem('user')).orgId\n        const user = JSON.parse(localStorage.getItem('user')).id\n        return queryData(Object.assign(parameter,{ orgId: org, user: user},this.queryParam), '/robotTheme/list').then(res => {\n          console.log(res)\n          return res.result\n        })\n      }\n    }\n  },\n  computed: {\n    // title() {\n    //   return this.$route.meta.title\n    // }\n  },\n  methods: {\n    // 处理刷新\n    handleRefresh() {\n      this.$refs.table.refresh(true)\n    },\n    // 表单重置\n    resetQuery() {\n      this.queryParam = {\n          name: ''\n        }\n      this.$refs.table.refresh(true)\n    },\n    handleEditVisible(record) {\n      this.$refs.editModal.edit(record)\n    },\n    // 搜索内容\n    searchData() {\n      this.$refs.table.refresh(true)\n    },\n    // 删除\n    handleDelete(record) {\n      var _this = this\n      this.$confirm({\n        title: '警告',\n        content: `真的要删除 ${record.name} 吗?`,\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK')\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 200)\n            var id = { entityId: record.id }\n            queryData(id, '/robotTheme/delete').then(res => {\n              if (res.code == 0) {\n                _this.$message.success('删除成功')\n                _this.$refs.table.refresh(true)\n              } else {\n                _this.$message.error(res.message)\n              }\n            })\n          }).catch(() => console.log('Oops errors!'))\n        },\n        onCancel() {\n          console.log('Cancel')\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/robotTheme"}]}