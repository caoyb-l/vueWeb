{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\instruction\\modules\\EditSensor.vue","mtime":1566376233534},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\antd_vue\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\antd_vue\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nexport default {\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    return {\n      edit: {\n        triggerId: 0,\n        triggerName: \"\",\n        cmdId: \"\"\n      },\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'robotName',\n        scopedSlots: {\n          customRender: 'robotName'\n        }\n      }, {\n        title: '机器人ID',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'id'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      selectedRowKeys: new Set([]),\n      selectedRows: [],\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    //选择机器人\n    onSelectChange: function onSelectChange(record, selected, selectedRows, nativeEvent) {\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n\n      console.log(_toConsumableArray(this.selectedRowKeys));\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, selectedRows, changeRows) {\n      var _this2 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this2.selectedRowKeys.add(value.id);\n        });\n      } else {\n        changeRows.map(function (value, index) {\n          _this2.selectedRowKeys.delete(value.id);\n        });\n      }\n    },\n    //获取命令集\n    getCmdList: function getCmdList() {\n      var _this = this;\n\n      var id = JSON.parse(localStorage.getItem('user')).id;\n      var param = {\n        \"orgId\": id\n      };\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        // console.log('命令集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    add: function add(record) {\n      console.log(\"----------record\");\n      console.log(record);\n      this.visible = true;\n      this.edit = record;\n      this.data = [];\n      this.data.push(record);\n      this.getCmdList();\n      this.selectedRowKeys.clear();\n\n      if (this.$refs.table) {\n        this.$refs.table.refresh();\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            robotId: _toConsumableArray(_this.selectedRowKeys),\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          };\n          queryData(_objectSpread({}, param, values), '/supercmdTriggerRobot/save').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('新建成功');\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this3.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["EditSensor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 新增弹框 -->\r\n  <a-modal title=\"新建\" style=\"top: 20px;\" :width=\"'70%'\" v-model=\"visible\" @ok=\"handleSubmit\" :destroyOnClose=\"true\">\r\n    <a-form :form=\"form\">\r\n      <a-form-item label=\"触发指令\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">     \r\n           <a-input\r\n            v-model=\"edit.triggerName\"\r\n            :disabled=\"true\"            \r\n          placeholder=\"触发指令\" />           \r\n      </a-form-item>\r\n      <a-form-item label=\"选择机器人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <a-table ref=\"table\"\r\n          size=\"default\"  rowKey=\"id\" :alert=\"options.alert\" :rowSelection=\"options.rowSelection\" :columns=\"columns\" :dataSource=\"data\" >      \r\n          <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\r\n        </a-table>\r\n      </a-form-item>\r\n      <a-form-item label=\"命令集\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n           <a-select\r\n          showSearch\r\n          placeholder=\"选择命令集\"\r\n          optionFilterProp=\"children\"\r\n          style=\"width: 200px\"         \r\n          :filterOption=\"filterOption\"\r\n          v-decorator=\"[\r\n            'cmdId',\r\n            {rules: [{required: true,  message: '选择命令集' }],initialValue:edit.cmdId}\r\n          ]\"\r\n        >\r\n          <a-select-option\r\n            v-for=\"(item) in cmdList\"\r\n            :key=\"item.id\"\r\n            :value=\"item.id\"\r\n          >{{item.name}}</a-select-option>\r\n        </a-select>\r\n        <a-button type=\"primary\" style=\"margin-left:20px\">设置命令集</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { queryData, addData } from '@/api/common'\r\nimport { STable } from '@/components'\r\nexport default {\r\n  components: {\r\n    STable\r\n  },\r\n  data() {\r\n    return {\r\n        edit:{triggerId:0,triggerName:\"\",cmdId:\"\"},\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      form: this.$form.createForm(this),     \r\n      cmdList: [],    \r\n      queryParam:{},\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no',\r\n          scopedSlots: { customRender: 'serial' }\r\n        },\r\n\r\n        {\r\n          title: '机器人名称',\r\n          dataIndex: 'robotName',\r\n          scopedSlots: { customRender: 'robotName' }\r\n        },\r\n        {\r\n          title: '机器人ID',\r\n          dataIndex: 'id',\r\n          scopedSlots: { customRender: 'id' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      data:[],\r\n      selectedRowKeys: new Set([]),\r\n      selectedRows: [],\r\n      options: {\r\n        alert: {\r\n          show: true\r\n        },\r\n        rowSelection: {        \r\n          onSelect:this.onSelectChange,\r\n          onSelectAll:this.onSelectChangeAll\r\n        }\r\n      },\r\n      optionAlertShow: false\r\n    }\r\n  },\r\n  created() {},\r\n  methods: {  \r\n     filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    //选择机器人\r\n    onSelectChange (record, selected, selectedRows, nativeEvent) {          \r\n        if(selected){\r\n            this.selectedRowKeys.add(record.id)           \r\n        }else{\r\n             this.selectedRowKeys.delete(record.id)\r\n        }\r\n    console.log([...this.selectedRowKeys])  \r\n    },\r\n    onSelectChangeAll(selected, selectedRows, changeRows){    \r\n     if(selected){           \r\n             changeRows.map((value,index)=>{\r\n                 this.selectedRowKeys.add(value.id)   \r\n             })       \r\n        }else{           \r\n             changeRows.map((value,index)=>{\r\n                 this.selectedRowKeys.delete(value.id)   \r\n             })   \r\n        }\r\n    },\r\n   \r\n //获取命令集\r\n    getCmdList() {\r\n      var _this = this\r\n       var id = JSON.parse(localStorage.getItem('user')).id\r\n       var param={ \"orgId\": id}\r\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\r\n       // console.log('命令集', res)\r\n        if (res.code == 0) {\r\n          _this.cmdList = res.cmdList\r\n        } else {\r\n          _this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    add(record) {\r\n      console.log(\"----------record\")\r\n      console.log(record)\r\n      this.visible = true\r\n      this.edit=record;   \r\n      this.data=[];   \r\n      this.data.push(record);      \r\n      this.getCmdList()\r\n        this.selectedRowKeys.clear(); \r\n      if(this.$refs.table){\r\n          this.$refs.table.refresh()\r\n       }   \r\n    },\r\n\r\n    handleSubmit() {\r\n      const {\r\n        form: { validateFields }\r\n      } = this\r\n      var _this = this     \r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        if (!errors) {\r\n          var param = {\r\n            robotId: [..._this.selectedRowKeys],\r\n            cmdId: '1',\r\n            triggerId:_this.edit.triggerId,\r\n            entityId:_this.edit.id\r\n          }\r\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\r\n            if (res.code == 0) {\r\n              _this.$message.success('新建成功')\r\n            } else {\r\n              _this.$message.error(res.message)\r\n            }\r\n            _this.visible = false\r\n            _this.confirmLoading = false\r\n            _this.$emit('ok', values)\r\n            // 重置输入框内容\r\n            _this.form.resetFields()\r\n          })\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/instruction/modules"}]}