{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js??ref--13-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/user.js","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/user.js","mtime":1571637125702},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js","mtime":1571637323383}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport { login, getInfo, logout } from '@/api/login';\nimport { ACCESS_TOKEN, USER_ROLE } from '@/store/mutation-types';\nimport { welcome } from '@/utils/util';\nimport notification from 'ant-design-vue/es/notification';\nvar user = {\n  state: {\n    token: '',\n    roleId: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {},\n    orgId: '',\n    orgName: ''\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, _ref) {\n      var name = _ref.name,\n          welcome = _ref.welcome;\n      state.name = name;\n      state.welcome = welcome;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_INFO: function SET_INFO(state, info) {\n      state.info = info;\n    },\n    SET_ROLEID: function SET_ROLEID(state, roleId) {\n      state.roleId = roleId;\n    },\n    SET_ORGID: function SET_ORGID(state, orgId) {\n      state.orgId = orgId;\n    },\n    SET_ORGNAME: function SET_ORGNAME(state, orgName) {\n      state.orgName = orgName;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref2, userInfo) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        login(userInfo).then(function (response) {\n          if (response.code == 0) {\n            var result = response.result; // 存储token信息\n\n            Vue.ls.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000); // 获取用户信息时传递\n\n            Vue.ls.set(USER_ROLE, result.roleId); // 保存用户角色\n            // console.log('result---------------',JSON.stringify(result));\n\n            localStorage.setItem('user', JSON.stringify(result));\n          }\n\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref3, roleId) {\n      var commit = _ref3.commit;\n      var userinfo = {\n        roleId: roleId\n      };\n      return new Promise(function (resolve, reject) {\n        getInfo(userinfo).then(function (response) {\n          var result = response.result;\n          console.log(result);\n\n          if (result.role && result.role.permissions.length > 0) {\n            var role = result.role;\n            role.permissions = result.role.permissions;\n            role.permissions.map(function (per) {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                var action = per.actionEntitySet.map(function (action) {\n                  return action.action;\n                });\n                per.actionList = action;\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              return permission.permissionId;\n            });\n            commit('SET_ROLES', result.role);\n            commit('SET_INFO', result);\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          }\n\n          commit('SET_AVATAR', result.avatar);\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        Vue.ls.remove(ACCESS_TOKEN);\n        localStorage.removeItem('user');\n        logout(state.token).then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/user.js"],"names":["Vue","login","getInfo","logout","ACCESS_TOKEN","USER_ROLE","welcome","notification","user","state","token","roleId","name","avatar","roles","info","orgId","orgName","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","SET_INFO","SET_ROLEID","SET_ORGID","SET_ORGNAME","actions","Login","userInfo","commit","Promise","resolve","reject","then","response","code","result","ls","set","localStorage","setItem","JSON","stringify","catch","error","GetInfo","userinfo","console","log","role","permissions","length","map","per","actionEntitySet","action","actionList","permissionList","permission","permissionId","Error","Logout","remove","removeItem"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport { login, getInfo, logout } from '@/api/login'\r\nimport { ACCESS_TOKEN ,USER_ROLE } from '@/store/mutation-types'\r\nimport { welcome } from '@/utils/util'\r\nimport notification from 'ant-design-vue/es/notification'\r\nconst user = {\r\n  state: {\r\n    token: '',\r\n    roleId:'',\r\n    name: '',\r\n    welcome: '',\r\n    avatar: '',\r\n    roles: [],\r\n    info: {},\r\n    orgId:'',\r\n    orgName:'',\r\n  },\r\n\r\n  mutations: {\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token\r\n    },\r\n    SET_NAME: (state, { name, welcome }) => {\r\n      state.name = name\r\n      state.welcome = welcome\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles\r\n    },\r\n    SET_INFO: (state, info) => {\r\n      state.info = info\r\n    },\r\n    SET_ROLEID: (state, roleId) => {\r\n      state.roleId = roleId\r\n    },\r\n    SET_ORGID: (state, orgId) => {\r\n      state.orgId = orgId\r\n    },\r\n    SET_ORGNAME: (state, orgName) => {\r\n      state.orgName = orgName\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    // 登录\r\n    Login ({ commit }, userInfo) {\r\n      return new Promise((resolve, reject) => {\r\n        login(userInfo).then(response => {\r\n          if(response.code == 0){\r\n            const result = response.result\r\n            // 存储token信息\r\n            Vue.ls.set(ACCESS_TOKEN, result.token, 7*24*60*60* 1000)\r\n            // 获取用户信息时传递\r\n            Vue.ls.set(USER_ROLE,result.roleId)\r\n            // 保存用户角色\r\n            // console.log('result---------------',JSON.stringify(result));\r\n            localStorage.setItem('user',JSON.stringify(result))\r\n          } \r\n          resolve(response)\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    GetInfo ({ commit },roleId) {\r\n      var userinfo = { roleId:roleId};\r\n      return new Promise((resolve, reject) => {\r\n        getInfo(userinfo).then(response => {\r\n          const result = response.result\r\n          console.log(result);\r\n          if (result.role && result.role.permissions.length > 0) {\r\n    \r\n            const role = result.role\r\n            role.permissions = result.role.permissions\r\n            role.permissions.map(per => {\r\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\r\n                const action = per.actionEntitySet.map(action => { return action.action })\r\n                per.actionList = action\r\n              }\r\n            })\r\n            role.permissionList = role.permissions.map(permission => { return permission.permissionId })\r\n            commit('SET_ROLES', result.role)\r\n            commit('SET_INFO', result)\r\n          } else {\r\n            reject(new Error('getInfo: roles must be a non-null array !'))\r\n          }\r\n          commit('SET_AVATAR', result.avatar)\r\n          resolve(response)\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 登出\r\n    Logout ({ commit, state }) {\r\n      return new Promise((resolve) => {\r\n        commit('SET_TOKEN', '')\r\n        commit('SET_ROLES', [])\r\n        Vue.ls.remove(ACCESS_TOKEN)\r\n        localStorage.removeItem('user')\r\n        logout(state.token).then(() => {\r\n          resolve()\r\n        }).catch(() => {\r\n          resolve()\r\n        })\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default user\r\n"]}]}