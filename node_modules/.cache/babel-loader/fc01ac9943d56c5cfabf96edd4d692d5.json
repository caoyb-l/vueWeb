{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/modules/RobotCmd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/modules/RobotCmd.vue","mtime":1571637122631},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addData, queryData } from '@/api/common';\nimport CmdList from \"../../Cmd\";\nimport { STable } from '@/components';\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    CmdList: CmdList\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      showEditCmd: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      cmdList: [],\n      mapId: '',\n      mapList: [],\n      cmd: '',\n      faceId: '',\n      faceName: '',\n      form: this.$form.createForm(this),\n      selectedItems: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      options: {\n        alert: {\n          show: true,\n          clear: function clear() {\n            _this2.selectedRowKeys = [];\n          }\n        },\n        rowSelection: {\n          selectedRowKeys: this.selectedRowKeys,\n          onChange: this.onSelectChange\n        }\n      },\n      optionAlertShow: false,\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '编码',\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var org = JSON.parse(localStorage.getItem('user')).orgId;\n        return queryData(Object.assign(parameter, {\n          orgId: org\n        }), '/robotInfo/loadRobotListByOrg').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  created: function created() {// this.getCmd()\n    // this.getMap()\n  },\n  methods: {\n    show: function show(record) {\n      console.log(record);\n      this.cmd = '';\n      this.form.resetFields();\n      this.showEditCmd = false;\n      this.faceId = record.id;\n      this.faceName = record.name;\n      this.visible = true;\n      this.getCmd();\n      this.getMap();\n    },\n    changeCmd: function changeCmd(event) {\n      this.cmd = event;\n      this.showEditCmd = true;\n    },\n    // 修改命令集\n    editCmd: function editCmd() {\n      console.log('编辑机器人命令集' + this.cmd); // if (this.cmd == 0 || this.cmd == '') {\n      //   this.$message.error('请先选择要修改的命令集')\n      //   return\n      // }\n\n      var formData = this.form.getFieldsValue();\n      var mapId = formData.mapId == undefined ? 0 : formData.mapId;\n      this.$refs.cmd.show('编辑机器人命令集', mapId, this.cmd);\n    },\n    //新增命令集\n    addCmd: function addCmd() {\n      var formData = this.form.getFieldsValue();\n      var mapId = formData.mapId == undefined ? 0 : formData.mapId;\n      this.$refs.cmd.show('编辑机器人命令集', mapId, 0);\n    },\n    getCmdId: function getCmdId(cmd) {\n      this.getCmd();\n      this.cmd = cmd;\n      this.form.setFieldsValue({\n        cmd: parseInt(cmd)\n      });\n    },\n    // showCmd(){\n    //   let formData = this.form.getFieldsValue();\n    //   let mapId = formData.mapId == undefined ? 0 : formData.mapId\n    //   this.$refs.cmd.show(this.faceName,mapId)\n    // },\n    getMap: function getMap() {\n      var _this3 = this;\n\n      var org = JSON.parse(localStorage.getItem('user')).orgId;\n      queryData({\n        orgId: org\n      }, '/robotMapLib/getRobotMapLibList').then(function (res) {\n        console.log('-----------getMap', res);\n        _this3.mapList = res.result;\n      });\n    },\n    getCmd: function getCmd() {\n      var org = JSON.parse(localStorage.getItem('user')).orgId;\n\n      var _this = this;\n\n      queryData({\n        orgId: org\n      }, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          console.log(values.cmd);\n          console.log(_this4.selectedRowKeys);\n          var param = {\n            faceId: _this4.faceId,\n            cmd: values.cmd,\n            robotCode: _this4.selectedRowKeys\n          };\n          var _this = _this4;\n          queryData(param, '/faceManage/addRobotFace').then(function (res) {\n            console.log(res);\n\n            if (res.code == 0) {\n              _this.$message.success('配置成功');\n\n              _this.visible = false;\n\n              _this.$emit('ok', values);\n            } else {\n              _this.$message.error(res.message);\n            }\n          });\n        }\n      });\n    },\n    tableOption: function tableOption() {\n      var _this5 = this;\n\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: function clear() {\n              _this5.selectedRowKeys = [];\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: function getCheckboxProps(record) {\n              return {\n                props: {\n                  disabled: record.no === 'No 2',\n                  // Column configuration not to be checked\n                  name: record.no\n                }\n              };\n            }\n          }\n        };\n        this.optionAlertShow = true;\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        };\n        this.optionAlertShow = false;\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    }\n  }\n};",null]}