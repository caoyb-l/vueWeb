{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/modules/EditRobotcmd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/face/modules/EditRobotcmd.vue","mtime":1571637122630},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addData, queryData } from '@/api/common';\nimport { STable } from '@/components';\nimport CmdList from \"../../Cmd\";\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    CmdList: CmdList\n  },\n  data: function data() {\n    return {\n      showEditCmd: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      cmdList: [],\n      editData: [],\n      cmd: '',\n      form: this.$form.createForm(this),\n      showIframe: false,\n      mapList: []\n    };\n  },\n  created: function created() {// this.getCmd()\n    // this.getMap()\n  },\n  methods: {\n    changeCmd: function changeCmd(event) {\n      this.editData.cmd = event;\n      this.showEditCmd = true;\n    },\n    show: function show(record) {\n      console.log(record);\n\n      if (record.cmd != '') {\n        this.showEditCmd = true;\n      } else {\n        this.showEditCmd = false;\n      }\n\n      console.log(this.showEditCmd);\n      this.editData = record;\n      this.visible = true;\n      this.getCmd();\n      this.getMap();\n    },\n    // 修改命令集\n    editCmd: function editCmd() {\n      console.log('编辑机器人命令集' + this.editData.cmd); // if (this.editData.cmd == 0 || this.editData.cmd == '') {\n      //   this.$message.error('请先选择要修改的命令集')\n      //   return\n      // }\n\n      this.$refs.cmd.show('编辑机器人命令集', '', this.editData.cmd);\n    },\n    // 新增命令集\n    addCmd: function addCmd() {\n      this.$refs.cmd.show('编辑机器人命令集', '', 0);\n    },\n    // 编辑命令集后，获取命令集ID\n    getCmdId: function getCmdId(cmd) {\n      this.getCmd();\n      this.editData.cmd = cmd;\n      this.form.setFieldsValue({\n        cmd: parseInt(cmd)\n      });\n    },\n    getMap: function getMap() {\n      var _this2 = this;\n\n      var org = JSON.parse(localStorage.getItem('user')).orgId;\n      queryData({\n        orgId: org\n      }, '/robotMapLib/getRobotMapLibList').then(function (res) {\n        console.log('-----------getMap', res);\n        _this2.mapList = res.result;\n      });\n    },\n    getCmd: function getCmd() {\n      var org = JSON.parse(localStorage.getItem('user')).orgId;\n\n      var _this = this;\n\n      queryData({\n        orgId: org\n      }, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var _this = _this3;\n          setTimeout(function () {\n            var param = {\n              id: _this3.editData.id,\n              cmd: values.cmd\n            };\n            addData(param, '/faceManage/editRobotFace').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('修改成功'); // 重置输入框内容\n\n\n                _this.form.resetFields();\n\n                _this3.visible = false;\n                _this3.confirmLoading = false;\n\n                _this3.$emit('ok', values);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }, 300);\n        } else {\n          _this3.confirmLoading = false;\n        }\n      });\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }\n};",null]}