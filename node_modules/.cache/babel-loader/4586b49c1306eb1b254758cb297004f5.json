{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/AddSkillRobot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/AddSkillRobot.vue","mtime":1584669539860},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addData, queryData } from '@/api/common';\nimport { STable } from '@/components';\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      // orgId: '',\n      robotCode: '',\n      robotId: '',\n      orgNames: [],\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      selectedRowKeys: new Set([]),\n      // 查询参数\n      queryParam: {\n        orgId: '',\n        name: ''\n      },\n      options: {\n        alert: {\n          show: true\n        },\n        rowSelection: {\n          onSelect: this.onSelectChange,\n          onSelectAll: this.onSelectChangeAll\n        }\n      },\n      optionAlertShow: false,\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '场景名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '单位',\n        dataIndex: 'orgId',\n        scopedSlots: {\n          customRender: 'orgId'\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createDate',\n        scopedSlots: {\n          customRender: 'createDate'\n        }\n      }, {\n        title: '类型',\n        dataIndex: 'type',\n        scopedSlots: {\n          customRender: 'type'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        var orgId;\n\n        if (_this2.queryParam.orgId > 0) {\n          orgId = _this2.queryParam.orgId;\n        } else {\n          orgId = JSON.parse(localStorage.getItem('user')).orgId;\n        }\n\n        return queryData(Object.assign(parameter, _this2.queryParam, {\n          robotCode: _this2.robotCode,\n          orgId: orgId\n        }), '/skillsType/getRobotSkillsType').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  created: function created() {\n    this.handleOrgLists();\n  },\n  methods: {\n    show: function show(record) {\n      this.visible = true; // this.orgId = record.orgId\n\n      this.robotCode = record.code;\n      this.robotId = record.id;\n      this.selectedRowKeys.clear();\n    },\n    // 搜索内容\n    searchData: function searchData() {\n      this.$refs.table.refresh(true);\n    },\n    // 获取该用户下的所属单位\n    handleOrgLists: function handleOrgLists() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        org: orgId\n      };\n      queryData(param, '/userManage/getHrOrgByPid').then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    // 表单重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {\n        orgId: '',\n        name: ''\n      };\n      this.$refs.table.refresh(true);\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            robotCode: _this3.robotCode,\n            robotId: _this3.robotId,\n            skillType: _toConsumableArray(_this3.selectedRowKeys)\n          };\n          var _this = _this3;\n          queryData(param, '/skillsRobot/save').then(function (res) {\n            console.log(res);\n\n            if (res.code == 0) {\n              _this.$message.success('配置成功');\n\n              _this.visible = false;\n\n              _this.$emit('ok', values);\n            } else {\n              _this.$message.error(res.message);\n            }\n          });\n        }\n      });\n    },\n    tableOption: function tableOption() {\n      var _this4 = this;\n\n      if (!this.optionAlertShow) {\n        this.options = {\n          alert: {\n            show: true,\n            clear: function clear() {\n              _this4.selectedRowKeys = [];\n            }\n          },\n          rowSelection: {\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: this.onSelectChange,\n            getCheckboxProps: function getCheckboxProps(record) {\n              return {\n                props: {\n                  disabled: record.no === 'No 2',\n                  // Column configuration not to be checked\n                  name: record.no\n                }\n              };\n            }\n          }\n        };\n        this.optionAlertShow = true;\n      } else {\n        this.options = {\n          alert: false,\n          rowSelection: null\n        };\n        this.optionAlertShow = false;\n      }\n    },\n    onSelectChange: function onSelectChange(record, selected, nativeEvent) {\n      console.log(record, selected);\n\n      if (selected) {\n        this.selectedRowKeys.add(record.id);\n      } else {\n        this.selectedRowKeys.delete(record.id);\n      }\n    },\n    onSelectChangeAll: function onSelectChangeAll(selected, changeRows) {\n      var _this5 = this;\n\n      if (selected) {\n        changeRows.map(function (value, index) {\n          _this5.selectedRowKeys.add(value.id);\n        });\n      } else {\n        changeRows.map(function (value, index) {\n          _this5.selectedRowKeys.delete(value.id);\n        });\n      }\n    }\n  }\n};",null]}