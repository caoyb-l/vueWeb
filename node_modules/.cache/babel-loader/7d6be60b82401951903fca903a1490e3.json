{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\modules\\EditForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\robot\\modules\\EditForm.vue","mtime":1564453250980},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { editRobot, getOrgLists } from '@/api/robot';\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      dateFormat: 'YYYY/MM/DD HH:mm:ss',\n      form: this.$form.createForm(this),\n      orgNames: [],\n      editData: {},\n      validityDate: ''\n    };\n  },\n  created: function created() {\n    this.handleOrgLists();\n  },\n  methods: {\n    moment: moment,\n    // 获取该用户下的所属单位\n    handleOrgLists: function handleOrgLists() {\n      var _this = this;\n\n      var id = localStorage.getItem('userId');\n      var param = {\n        userId: id\n      };\n      getOrgLists(param).then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    add: function add(record) {\n      this.visible = true;\n      this.validityDate = record.validityDate;\n      this.editData = record;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      var validateFields = this.form.validateFields;\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        values.validity = _this2.validityDate;\n\n        if (!errors) {\n          var param = Object.assign(values, {\n            entityId: _this2.editData.id\n          });\n          var _this = _this2;\n          setTimeout(function () {\n            editRobot(param).then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('修改成功'); // 重置输入框内容\n\n\n                _this.form.resetFields();\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n            _this2.visible = false;\n            _this2.confirmLoading = false;\n\n            _this2.$emit('ok', values);\n          }, 300);\n        } else {\n          _this2.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n      this.editData = {};\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    onChange: function onChange(date, dateString) {\n      this.validityDate = dateString;\n      console.log(date, dateString);\n    }\n  }\n};",{"version":3,"sources":["EditForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 编辑弹框 -->\r\n      <a-modal\r\n      title=\"编辑\"\r\n      style=\"top: 20px;\"\r\n      :width=\"600\"\r\n      v-model=\"visible\"\r\n      @ok=\"handleSubmit\"\r\n    >\r\n    <a-form :form=\"form\">\r\n      <a-form-item\r\n        label=\"机器人名称\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          placeholder=\"机器人名称\" \r\n          v-decorator=\"[\r\n            'name',\r\n            {\r\n              rules: [{ required: true, message: '请输入机器人名称' }],\r\n              initialValue: editData.name,\r\n            }]\"\r\n          />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"所属单位\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-select \r\n          showSearch\r\n          placeholder=\"选择所属单位\"\r\n          optionFilterProp=\"children\"\r\n          :filterOption=\"filterOption\"\r\n          v-decorator=\"[\r\n            'orgId',\r\n            {rules: [{ required: true, message: '请选择' }],\r\n            initialValue: editData.orgName}\r\n          ]\"\r\n        >\r\n          <a-select-option v-for=\"(item ,key) in orgNames\" :key=\"key\" :value=\"item.id\">\r\n            {{item.name}}\r\n          </a-select-option>\r\n         \r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"有效截止时间\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-date-picker showTime  @change=\"onChange\"  format=\"YYYY-MM-DD HH:mm:ss\"\r\n        v-decorator=\"[\r\n          'validity',\r\n          {rules:[{required:true,message:'请选择时间'}],\r\n            initialValue:moment(editData.validityDate, dateFormat)\r\n          }\r\n        ]\" />\r\n      </a-form-item>\r\n      <a-form-item\r\n        label=\"人脸失效时间(小时)\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\">\r\n        <a-input\r\n          v-decorator=\"[\r\n            'faceTime',\r\n            {rules: [{ message: '请输入人脸失效时间' }],\r\n            initialValue: editData.faceTime}\r\n          ]\"\r\n          placeholder=\"人脸失效时间\"\r\n           />\r\n      </a-form-item>\r\n    </a-form>\r\n    </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport { editRobot , getOrgLists} from '@/api/robot';\r\nimport moment from 'moment';\r\nexport default {\r\n  data () {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      dateFormat: 'YYYY/MM/DD HH:mm:ss',\r\n      form: this.$form.createForm(this),\r\n      orgNames:[],\r\n      editData:{},\r\n      validityDate:''\r\n    }\r\n  },\r\n  created(){\r\n    this.handleOrgLists();\r\n  },\r\n  methods: {\r\n    moment,\r\n    // 获取该用户下的所属单位\r\n    handleOrgLists(){\r\n      var _this = this;\r\n      var id = localStorage.getItem('userId');\r\n      var param = { userId : id }\r\n      getOrgLists(param).then(res => {\r\n        _this.orgNames = res.result;\r\n        if(res.code !== 0){\r\n          _this.$message.error(res.message)\r\n        }\r\n          \r\n      }).catch( (err) => console.log(err))\r\n    },\r\n    add (record) {\r\n      this.visible = true;\r\n      this.validityDate = record.validityDate;\r\n      this.editData = record;\r\n    },\r\n    handleSubmit () {\r\n      const { form: { validateFields } } = this\r\n      this.confirmLoading = true\r\n      validateFields((errors, values) => {\r\n        values.validity = this.validityDate;\r\n        if (!errors) {\r\n          var param = Object.assign(values,{entityId:this.editData.id} )\r\n          var _this = this;\r\n          setTimeout(() => {\r\n            editRobot(param).then(res => {\r\n              if(res.code == 0){\r\n                _this.$message.success('修改成功');\r\n                // 重置输入框内容\r\n                _this.form.resetFields();\r\n                \r\n              } else {\r\n                _this.$message.error(res.message)\r\n              }\r\n            });\r\n            this.visible = false\r\n            \r\n            this.confirmLoading = false\r\n            this.$emit('ok', values)\r\n          }, 300)\r\n        } else {\r\n          this.confirmLoading = false\r\n        }\r\n      })\r\n    },\r\n    handleCancel () {\r\n      this.visible = false;\r\n      this.editData = {}\r\n    },\r\n    filterOption(input, option) {\r\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    },\r\n    onChange(date, dateString) {\r\n      this.validityDate = dateString;\r\n      console.log(date, dateString);\r\n    },\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/robot/modules"}]}