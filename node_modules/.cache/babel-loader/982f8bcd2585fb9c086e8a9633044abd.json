{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showSkillsType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showSkillsType.vue","mtime":1587436201984},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { queryData } from '@/api/common';\nexport default {\n  components: {\n    STable: STable\n  },\n  watch: {\n    code: function code(values) {\n      console.log(values), this.$refs.table.refresh(true);\n    }\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      columns: [{\n        title: '序号',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '问答库名称',\n        dataIndex: 'name',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '所属单位',\n        dataIndex: 'orgName',\n        scopedSlots: {\n          customRender: 'orgName'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 查询参数\n      queryParam: {\n        name: ''\n      },\n      code: '',\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      loadData: function loadData(parameter) {\n        var parma = Object.assign(parameter, {\n          code: _this2.code\n        }, _this2.queryParam);\n        return queryData(parma, '/skillsRobot/getSkillsRobotList').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  methods: {\n    add: function add(record) {\n      this.code = record.code;\n      this.visible = true;\n      this.$refs.table.refresh(true);\n    },\n    // 重置\n    resetQuery: function resetQuery() {\n      this.queryParam = {};\n      this.$refs.table.refresh(true);\n    },\n    searchData: function searchData() {\n      this.$refs.table.refresh();\n    },\n    //禁用\n    handleIsAble: function handleIsAble(checked, record) {\n      console.log(checked);\n\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        entityId: record.id\n      };\n\n      if (checked) {\n        param.isAble = 1;\n      } else {\n        param.isAble = 0;\n      }\n\n      queryData(param, '/skillsRobot/isAble').then(function (res) {\n        _this.orgNames = res.result;\n\n        if (res.code !== 0) {\n          _this.$message.error(res.message);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    //彻底删除\n    deleteSkillsType: function deleteSkillsType(record) {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664 \".concat(record.name, \" \\u5417?\"),\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          console.log('OK'); // 在这里调用删除接口\n\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n            var id = {\n              entityId: record.id\n            };\n            queryData(id, '/skillsRobot/delete').then(function (res) {\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.$refs.table.refresh(true);\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      this.visible = false;\n    }\n  }\n};",null]}