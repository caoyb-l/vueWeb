{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showRobotNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/robot/modules/showRobotNote.vue","mtime":1587451119878},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":1571637450640}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable, Ellipsis } from '@/components';\nimport { queryData } from '@/api/common';\nimport editRobotNote from \"./EditRobotNote\";\nimport { uploadUrl } from '@/api/upload';\nexport default {\n  components: {\n    STable: STable,\n    Ellipsis: Ellipsis,\n    editRobotNote: editRobotNote\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      columns: [{\n        title: '序号',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '记录日期',\n        dataIndex: 'noteDate'\n      }, {\n        title: '开机时间',\n        dataIndex: 'openTime'\n      }, {\n        title: '开机次数',\n        dataIndex: 'openCount'\n      }, {\n        title: '在线时长',\n        dataIndex: 'onlineDuration'\n      }, {\n        title: '行走里程',\n        dataIndex: 'mileage'\n      }, {\n        title: '最后一次心跳时间',\n        dataIndex: 'lastOnlineTime'\n      }, {\n        title: '业务匹配次数',\n        dataIndex: 'buisCount'\n      }, {\n        title: '闲聊匹配次数',\n        dataIndex: 'chatCount'\n      }, {\n        title: '备注',\n        dataIndex: 'remark',\n        scopedSlots: {\n          customRender: 'remark'\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      url: uploadUrl + 'RobotNote/exportNote',\n      // 查询参数\n      queryParam: {\n        startDate: '',\n        endDate: '',\n        robotCode: '',\n        robotId: ''\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      loadData: function loadData(parameter) {\n        var parma = Object.assign(parameter, _this.queryParam);\n        return queryData(parma, '/RobotNote/queryRobotNote').then(function (res) {\n          console.log(res);\n          return res.result;\n        });\n      }\n    };\n  },\n  methods: {\n    show: function show(record) {\n      this.queryParam.robotCode = record.code;\n      this.queryParam.robotId = record.id;\n      this.queryParam.startDate = '';\n      this.queryParam.endDate = '';\n      this.visible = true;\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    // 查看运行记录\n    editRemark: function editRemark(record) {\n      this.$refs.editRobotNote.edit(record);\n    },\n    onChange: function onChange(date, dateString) {\n      this.queryParam.startDate = dateString; // this.$refs.table.refresh()\n    },\n    onChange1: function onChange1(date, dateString) {\n      this.queryParam.endDate = dateString; // this.$refs.table.refresh()\n    },\n    // 重置\n    resetQuery: function resetQuery() {\n      this.$refs.table.refresh(true);\n    },\n    searchData: function searchData() {\n      this.$refs.table.refresh();\n    },\n    handleSubmit: function handleSubmit() {\n      this.visible = false;\n    }\n  }\n};",null]}