{"remainingRequest":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XiangMu\\ant-design-pro-vue\\src\\views\\company\\ComList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XiangMu\\ant-design-pro-vue\\src\\views\\company\\ComList.vue","mtime":1565769941375},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XiangMu\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectSpread from \"E:\\\\XiangMu\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData } from '@/api/common';\nimport DetailList from '@/components/tools/DetailList';\nvar DetailListItem = DetailList.Item;\nexport default {\n  components: {\n    DetailList: DetailList,\n    DetailListItem: DetailListItem\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      orgTree: [],\n      orgList: [],\n      comInfo: [],\n      pid: '',\n      isSelect: false,\n      addVisible: false,\n      editVisible: false,\n      addForm: {\n        name: '',\n        contact: '',\n        contactWay: '',\n        descn: ''\n      },\n      editForm: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.getDateTree();\n  },\n  methods: {\n    // 新增\n    handleAdd: function handleAdd() {\n      var _this2 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      validateFields(function (errors, values) {\n        if (!errors) {\n          console.log('values', values);\n        }\n\n        var param = _objectSpread({\n          pid: _this2.pid\n        }, values.addForm);\n\n        console.log(param);\n        queryData(param, '/hrOrg/save').then(function (res) {\n          if (res.code == 0) {\n            _this.$message.success('新建成功');\n\n            _this.addVisible = false;\n\n            _this.form.resetFields();\n\n            _this.getDateTree();\n          } else {\n            _this.$message.error(res.message);\n          }\n        });\n      });\n    },\n    // 编辑\n    handleEdit: function handleEdit() {\n      var _this3 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      validateFields(function (errors, values) {\n        if (!errors) {\n          console.log('values', values);\n        }\n\n        var param = _objectSpread({\n          entityId: _this3.pid\n        }, values.editForm);\n\n        console.log(param);\n        queryData(param, '/hrOrg/save').then(function (res) {\n          if (res.code == 0) {\n            _this.$message.success('编辑成功');\n\n            _this.editVisible = false;\n\n            _this.form.resetFields();\n\n            _this.getDateTree();\n\n            _this.getComInfo(_this.pid);\n          } else {\n            _this.$message.error(res.message);\n          }\n        });\n      });\n    },\n    // 删除\n    handleDelete: function handleDelete() {\n      var _this = this;\n\n      this.$confirm({\n        title: '警告',\n        content: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u8BE5\\u5355\\u4F4D\\u5417?\",\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function onOk() {\n          // 在这里调用删除接口\n          return new Promise(function (resolve, reject) {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n            var param = {\n              entityId: _this.pid\n            };\n            console.log(param);\n            queryData(param, '/hrOrg/delete').then(function (res) {\n              console.log(res);\n\n              if (res.code == 0) {\n                _this.$message.success('删除成功');\n\n                _this.getDateTree();\n              } else {\n                _this.$message.error(res.message);\n              }\n            });\n          }).catch(function () {\n            return console.log('Oops errors!');\n          });\n        },\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    // 处理显隐\n    handleAddVisible: function handleAddVisible() {\n      if (this.pid != '') {\n        this.addVisible = true;\n      }\n    },\n    // 编辑\n    handleEditVisible: function handleEditVisible() {\n      this.editVisible = true;\n      this.editForm = this.comInfo;\n    },\n    //   获取树形结构数据\n    getDateTree: function getDateTree() {\n      var id = JSON.parse(localStorage.getItem('user')).id;\n\n      var _this = this;\n\n      queryData({\n        userid: id\n      }, 'hrOrg/list').then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this.orgTree = res.result;\n\n          _this.getOrgList(res.result);\n\n          var expandedKeys = [];\n          res.result.map(function (value, index) {\n            if (value.children) {\n              var item = value.children;\n              item.map(function (value, index) {\n                expandedKeys.push(value.key);\n              });\n            } else {\n              expandedKeys.push(value.key);\n            }\n          });\n          _this.expandedKeys = expandedKeys;\n        }\n      });\n    },\n    //   获取用于搜索的list数组\n    getOrgList: function getOrgList(data) {\n      for (var i = 0; i < data.length; i++) {\n        var node = data[i];\n        var key = node.key;\n        var title = node.title;\n        var orgid = node.orgId;\n        var pid = node.pid;\n        this.orgList.push({\n          key: key,\n          title: title,\n          orgid: orgid,\n          pid: pid\n        });\n\n        if (node.children) {\n          this.getOrgList(node.children);\n        }\n      }\n    },\n    // 获取当前点击单位\n    onSelect: function onSelect(key) {\n      this.getComInfo(key[0]);\n    },\n    getComInfo: function getComInfo(pid) {\n      var param = {\n        orgId: pid\n      };\n\n      var _this = this;\n\n      queryData(param, '/hrOrg/getOrgMessage').then(function (res) {\n        console.log(res);\n\n        if (res.code == 0) {\n          _this.comInfo = Object(res.hrOrg);\n\n          if (Object.keys(_this.comInfo).length) {\n            _this.isSelect = true;\n            _this.pid = pid;\n          } else {\n            _this.isSelect = false;\n          }\n        }\n      });\n    },\n    onExpand: function onExpand(expandedKeys) {\n      //console.log(expandedKeys);\n      this.expandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    // 搜索\n    onChange: function onChange(e) {\n      var _this4 = this;\n\n      var value = e.target.value;\n      var expandedKeys = this.orgList.map(function (item) {\n        if (item.title.indexOf(value) > -1) {\n          return _this4.getParentKey(item.title, _this4.orgTree);\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n      Object.assign(this, {\n        expandedKeys: expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    },\n    // 定位树形结构的数据\n    getParentKey: function getParentKey(title, tree) {\n      var parentKey = 0;\n\n      for (var i = 0; i < tree.length; i++) {\n        var node = tree[i];\n\n        if (node.children) {\n          if (node.children.some(function (item) {\n            return item.title === title;\n          })) {\n            parentKey = node.key;\n          } else if (this.getParentKey(title, node.children)) {\n            parentKey = this.getParentKey(title, node.children);\n          }\n        }\n      }\n\n      return parentKey;\n    }\n  }\n};",null]}