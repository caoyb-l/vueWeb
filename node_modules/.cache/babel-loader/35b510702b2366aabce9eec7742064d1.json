{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\antd_vue\\ant-design-pro-vue\\src\\permission.js","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\permission.js","mtime":1562294713081},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1562295154253},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1562032167807}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport _objectSpread from \"D:\\\\antd_vue\\\\ant-design-pro-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport notification from 'ant-design-vue/es/notification';\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['login', 'register', 'registerResult']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n\n  to.meta && typeof to.meta.title !== 'undefined' && setDocumentTitle(\"\".concat(to.meta.title, \" - \").concat(domTitle));\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({\n        path: '/dashboard/workplace'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.roles.length === 0) {\n        store.dispatch('GetInfo').then(function (res) {\n          var roles = res.result && res.result.role;\n          store.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            // 动态添加可访问路由表\n            router.addRoutes(store.getters.addRouters);\n            var redirect = decodeURIComponent(from.query.redirect || to.path);\n\n            if (to.path === redirect) {\n              // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n              next(_objectSpread({}, to, {\n                replace: true\n              }));\n            } else {\n              // 跳转到目的路由\n              next({\n                path: redirect\n              });\n            }\n          });\n        }).catch(function () {\n          notification.error({\n            message: '错误',\n            description: '请求用户信息失败，请重试'\n          });\n          store.dispatch('Logout').then(function () {\n            next({\n              path: '/user/login',\n              query: {\n                redirect: to.fullPath\n              }\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next({\n        path: '/user/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",null]}