{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/views/instruction/modules/EditSensor.vue","mtime":1584669518264},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryData, addData } from '@/api/common';\nimport { STable } from '@/components';\nimport CmdList from \"../../Cmd\";\nexport default {\n  components: {\n    CmdList: CmdList,\n    STable: STable\n  },\n  data: function data() {\n    return {\n      showEditCmd: false,\n      edit: {\n        triggerId: 0,\n        triggerName: '',\n        cmdId: ''\n      },\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '机器人名称',\n        dataIndex: 'robotName',\n        scopedSlots: {\n          customRender: 'robotName'\n        }\n      }, {\n        title: '机器人ID',\n        dataIndex: 'id',\n        scopedSlots: {\n          customRender: 'id'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      options: false,\n      optionAlertShow: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    changeCmd: function changeCmd(event) {\n      this.edit.cmdId = event;\n      this.showEditCmd = true;\n      console.log('下拉框：' + this.edit.cmdId);\n    },\n    // 新增动作集\n    addCmd: function addCmd() {\n      this.$refs.cmd.show('传感器', '', 0);\n    },\n    // 修改动作集\n    editCmd: function editCmd() {\n      console.log('修改：' + this.edit.cmdId);\n      this.$refs.cmd.show('传感器', '', this.edit.cmdId);\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId: function getCmdId(cmd) {\n      this.getCmdList();\n      this.edit.cmdId = cmd;\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      });\n    },\n    filterOption: function filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    //获取动作集\n    getCmdList: function getCmdList() {\n      var _this = this;\n\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId;\n      var param = {\n        orgId: orgId\n      };\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(function (res) {\n        // console.log('动作集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList;\n        }\n      });\n    },\n    add: function add(record) {\n      console.log(record);\n\n      if (record.cmdId != '' && record.cmdId != null) {\n        this.showEditCmd = true;\n      } else {\n        this.showEditCmd = false;\n      }\n\n      console.log(this.showEditCmd);\n      this.visible = true;\n      this.edit = record;\n      this.data = [];\n      this.data.push(record);\n      this.getCmdList();\n\n      if (this.$refs.table) {\n        this.$refs.table.refresh();\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      var validateFields = this.form.validateFields;\n\n      var _this = this;\n\n      this.confirmLoading = true;\n      validateFields(function (errors, values) {\n        if (!errors) {\n          var param = {\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          };\n          queryData(_objectSpread({}, param, {}, values), '/supercmdTriggerRobot/save').then(function (res) {\n            if (res.code == 0) {\n              _this.$message.success('修改成功');\n            } else {\n              _this.$message.error(res.message);\n            }\n\n            _this.visible = false;\n            _this.confirmLoading = false;\n\n            _this.$emit('ok', values); // 重置输入框内容\n\n\n            _this.form.resetFields();\n          });\n        } else {\n          _this2.confirmLoading = false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["EditSensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,SAAA,EAAA,OAAA,QAAA,cAAA;AACA,SAAA,MAAA,QAAA,cAAA;AACA,OAAA,OAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAAA,QAAA,SAAA,EAAA,CAAA;AAAA,QAAA,WAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAHA;AAOA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAPA;AAWA,MAAA,OAAA,EAAA,KAXA;AAYA,MAAA,cAAA,EAAA,KAZA;AAaA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAbA;AAcA,MAAA,OAAA,EAAA,EAdA;AAeA,MAAA,UAAA,EAAA,EAfA;AAgBA;AACA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,SAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OADA,EAOA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,SAAA,EAAA,WAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OAPA,EAYA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,SAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OAZA,CAjBA;AAmCA;AACA,MAAA,IAAA,EAAA,EApCA;AAqCA,MAAA,OAAA,EAAA,KArCA;AAsCA,MAAA,eAAA,EAAA;AAtCA,KAAA;AAwCA,GA9CA;AA+CA,EAAA,OA/CA,qBA+CA,CAAA,CA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,KAAA,IAAA,CAAA,KAAA;AACA,KALA;AAMA;AACA,IAAA,MAPA,oBAOA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AACA,KATA;AAUA;AACA,IAAA,OAXA,qBAWA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,IAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IAAA,CAAA,KAAA;AACA,KAdA;AAeA;AACA,IAAA,QAhBA,oBAgBA,GAhBA,EAgBA;AACA,WAAA,UAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA;AACA,QAAA,KAAA,EAAA,QAAA,CAAA,GAAA;AADA,OAAA;AAGA,KAtBA;AAuBA,IAAA,YAvBA,wBAuBA,KAvBA,EAuBA,MAvBA,EAuBA;AACA,aAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CAAA,EAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA;AACA,KAzBA;AA0BA;AACA,IAAA,UA3BA,wBA2BA;AACA,UAAA,KAAA,GAAA,IAAA;;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,KAAA;AACA,UAAA,KAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,MAAA,SAAA,CAAA,KAAA,EAAA,gCAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,YAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,OAAA;AACA;AACA,OALA;AAMA,KArCA;AAuCA,IAAA,GAvCA,eAuCA,MAvCA,EAuCA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AACA,UAAA,MAAA,CAAA,KAAA,IAAA,EAAA,IAAA,MAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA,aAAA,WAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA,GAAA,KAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,IAAA,GAAA,MAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAAA,UAAA;;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACA;AACA,KAvDA;AAyDA,IAAA,YAzDA,0BAyDA;AAAA;;AAAA,UAEA,cAFA,GAGA,IAHA,CAEA,IAFA,CAEA,cAFA;;AAIA,UAAA,KAAA,GAAA,IAAA;;AACA,WAAA,cAAA,GAAA,IAAA;AACA,MAAA,cAAA,CAAA,UAAA,MAAA,EAAA,MAAA,EAAA;AACA,YAAA,CAAA,MAAA,EAAA;AACA,cAAA,KAAA,GAAA;AACA,YAAA,KAAA,EAAA,GADA;AAEA,YAAA,SAAA,EAAA,KAAA,CAAA,IAAA,CAAA,SAFA;AAGA,YAAA,QAAA,EAAA,KAAA,CAAA,IAAA,CAAA;AAHA,WAAA;AAKA,UAAA,SAAA,mBAAA,KAAA,MAAA,MAAA,GAAA,4BAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,aAFA,MAEA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA;AACA;;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,YAAA,KAAA,CAAA,cAAA,GAAA,KAAA;;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA,MAAA,EARA,CASA;;;AACA,YAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAXA;AAYA,SAlBA,MAkBA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,KAAA;AACA;AACA,OAtBA,CAAA;AAuBA,KAtFA;AAuFA,IAAA,YAvFA,0BAuFA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AAzFA;AAhDA,CAAA","sourcesContent":["<template>\n  <!-- 修改超级命令 -->\n  <a-modal\n    title=\"编辑传感器\"\n    style=\"top: 20px;\"\n    :width=\"'70%'\"\n    v-model=\"visible\"\n    @ok=\"handleSubmit\"\n    :destroyOnClose=\"true\"\n    v-preventReClick\n    :maskClosable = \"false\"\n  >\n    <a-form :form=\"form\">\n      <a-form-item label=\"触发指令\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-input v-model=\"edit.triggerName\" :disabled=\"true\" placeholder=\"触发指令\" />\n      </a-form-item>\n      <a-form-item label=\"选择机器人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-table\n          ref=\"table\"\n          size=\"middle\"\n          rowKey=\"id\"\n          :alert=\"options.alert\"\n          :rowSelection=\"options.rowSelection\"\n          :columns=\"columns\"\n          :dataSource=\"data\"\n        >\n          <span slot=\"serial\" slot-scope=\"text, record, index\">{{ index + 1 }}</span>\n        </a-table>\n      </a-form-item>\n      <a-form-item label=\"动作集\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n        <a-select\n          showSearch\n          placeholder=\"选择动作集\"\n          optionFilterProp=\"children\"\n          style=\"width: 200px\"\n          @change=\"changeCmd($event)\"\n          :filterOption=\"filterOption\"\n          v-decorator=\"[\n            'cmdId',\n            {rules: [{required: true,  message: '选择动作集' }],initialValue:edit.cmdId}\n          ]\"\n        >\n          <a-select-option v-for=\"(item) in cmdList\" :key=\"item.id\" :value=\"item.id\">{{item.name}}</a-select-option>\n        </a-select>\n        <a-button type=\"primary\" style=\"margin-left:20px\" @click=\"addCmd()\">新增动作集</a-button>\n        <a-divider type=\"vertical\" />\n        <a-button id=\"chgCmd\" type=\"primary\" @click=\"editCmd()\" v-if=\"showEditCmd\">修改当前动作集</a-button>\n      </a-form-item>\n    </a-form>\n    <cmd-list @getCmdId=\"getCmdId\" ref=\"cmd\"></cmd-list>\n  </a-modal>\n</template>\n\n<script>\nimport { queryData, addData } from '@/api/common'\nimport { STable } from '@/components'\nimport CmdList from '../../Cmd'\nexport default {\n  components: {\n    CmdList,\n    STable\n  },\n  data() {\n    return {\n      showEditCmd: false,\n      edit: { triggerId: 0, triggerName: '', cmdId: '' },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      cmdList: [],\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: 'no',\n          scopedSlots: { customRender: 'serial' }\n        },\n\n        {\n          title: '机器人名称',\n          dataIndex: 'robotName',\n          scopedSlots: { customRender: 'robotName' }\n        },\n        {\n          title: '机器人ID',\n          dataIndex: 'id',\n          scopedSlots: { customRender: 'id' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      data: [],\n      options: false,\n      optionAlertShow: false\n    }\n  },\n  created() {},\n  methods: {\n    changeCmd(event) {\n      this.edit.cmdId = event\n      this.showEditCmd = true\n      console.log('下拉框：' + this.edit.cmdId)\n    },\n    // 新增动作集\n    addCmd() {\n      this.$refs.cmd.show('传感器', '', 0)\n    },\n    // 修改动作集\n    editCmd() {\n      console.log('修改：' + this.edit.cmdId)\n      this.$refs.cmd.show('传感器', '', this.edit.cmdId)\n    },\n    // 编辑动作集后，获取动作集ID\n    getCmdId(cmd) {\n      this.getCmdList()\n      this.edit.cmdId = cmd\n      this.form.setFieldsValue({\n        cmdId: parseInt(cmd)\n      })\n    },\n    filterOption(input, option) {\n      return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n    //获取动作集\n    getCmdList() {\n      var _this = this\n      var orgId = JSON.parse(localStorage.getItem('user')).orgId\n      var param = { orgId: orgId }\n      queryData(param, '/cmdCollection/getCmdListByOrg').then(res => {\n        // console.log('动作集', res)\n        if (res.code == 0) {\n          _this.cmdList = res.cmdList\n        }\n      })\n    },\n\n    add(record) {\n      console.log(record)\n      if (record.cmdId != '' && record.cmdId != null) {\n        this.showEditCmd = true\n      } else {\n        this.showEditCmd = false\n      }\n      console.log(this.showEditCmd)\n      this.visible = true\n      this.edit = record\n      this.data = []\n      this.data.push(record)\n      this.getCmdList()\n      if (this.$refs.table) {\n        this.$refs.table.refresh()\n      }\n    },\n\n    handleSubmit() {\n      const {\n        form: { validateFields }\n      } = this\n      var _this = this\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          var param = {\n            cmdId: '1',\n            triggerId: _this.edit.triggerId,\n            entityId: _this.edit.id\n          }\n          queryData({ ...param, ...values }, '/supercmdTriggerRobot/save').then(res => {\n            if (res.code == 0) {\n              _this.$message.success('修改成功')\n            } else {\n              _this.$message.error(res.message)\n            }\n            _this.visible = false\n            _this.confirmLoading = false\n            _this.$emit('ok', values)\n            // 重置输入框内容\n            _this.form.resetFields()\n          })\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    handleCancel() {\n      this.visible = false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/instruction/modules"}]}