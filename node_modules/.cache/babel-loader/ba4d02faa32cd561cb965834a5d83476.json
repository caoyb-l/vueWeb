{"remainingRequest":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js??ref--13-0!/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/user.js","dependencies":[{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/src/store/modules/user.js","mtime":1571637125702},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/cache-loader/dist/cjs.js","mtime":1571637271763},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/thread-loader/dist/cjs.js","mtime":1571637441620},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/babel-loader/lib/index.js","mtime":1571637266900},{"path":"/Users/cyb/work/KaiFa/cz_workSpace/robotWeb/node_modules/eslint-loader/index.js","mtime":1571637323383}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport { login, getInfo, logout } from '@/api/login';\nimport { ACCESS_TOKEN, USER_ROLE } from '@/store/mutation-types';\nimport { welcome } from '@/utils/util';\nimport notification from 'ant-design-vue/es/notification';\nvar user = {\n  state: {\n    token: '',\n    roleId: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {},\n    orgId: '',\n    orgName: ''\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, _ref) {\n      var name = _ref.name,\n          welcome = _ref.welcome;\n      state.name = name;\n      state.welcome = welcome;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_INFO: function SET_INFO(state, info) {\n      state.info = info;\n    },\n    SET_ROLEID: function SET_ROLEID(state, roleId) {\n      state.roleId = roleId;\n    },\n    SET_ORGID: function SET_ORGID(state, orgId) {\n      state.orgId = orgId;\n    },\n    SET_ORGNAME: function SET_ORGNAME(state, orgName) {\n      state.orgName = orgName;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref2, userInfo) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        login(userInfo).then(function (response) {\n          if (response.code == 0) {\n            var result = response.result; // 存储token信息\n\n            Vue.ls.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000); // 获取用户信息时传递\n\n            Vue.ls.set(USER_ROLE, result.roleId); // 保存用户角色\n            // console.log('result---------------',JSON.stringify(result));\n\n            localStorage.setItem('user', JSON.stringify(result));\n          }\n\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref3, roleId) {\n      var commit = _ref3.commit;\n      var userinfo = {\n        roleId: roleId\n      };\n      return new Promise(function (resolve, reject) {\n        getInfo(userinfo).then(function (response) {\n          var result = response.result;\n          console.log(result);\n\n          if (result.role && result.role.permissions.length > 0) {\n            var role = result.role;\n            role.permissions = result.role.permissions;\n            role.permissions.map(function (per) {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                var action = per.actionEntitySet.map(function (action) {\n                  return action.action;\n                });\n                per.actionList = action;\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              return permission.permissionId;\n            });\n            commit('SET_ROLES', result.role);\n            commit('SET_INFO', result);\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          }\n\n          commit('SET_AVATAR', result.avatar);\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        Vue.ls.remove(ACCESS_TOKEN);\n        localStorage.removeItem('user');\n        logout(state.token).then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",null]}