{"remainingRequest":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\antd_vue\\ant-design-pro-vue\\src\\views\\Company\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\antd_vue\\ant-design-pro-vue\\src\\views\\Company\\List.vue","mtime":1563522814172},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1562032167570},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562295152232},{"path":"D:\\antd_vue\\ant-design-pro-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1562295154751}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport STree from '@/components/Tree/Tree';\nimport { STable } from '@/components';\nimport OrgModal from \"./modules/OrgModal\";\nimport { getOrgTree, getServiceList } from '@/api/manage';\nexport default {\n  name: 'TreeList',\n  components: {\n    STable: STable,\n    STree: STree,\n    OrgModal: OrgModal,\n    orgList: []\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      openKeys: ['key-01'],\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '#',\n        dataIndex: 'no'\n      }, {\n        title: '成员名称',\n        dataIndex: 'description'\n      }, {\n        title: '登录次数',\n        dataIndex: 'callNo',\n        sorter: true,\n        needTotal: true,\n        customRender: function customRender(text) {\n          return text + ' 次';\n        }\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        needTotal: true\n      }, {\n        title: '更新时间',\n        dataIndex: 'updatedAt',\n        sorter: true\n      }, {\n        table: '操作',\n        dataIndex: 'action',\n        width: '150px',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getServiceList(Object.assign(parameter, _this2.queryParam)).then(function (res) {\n          return res.result;\n        });\n      },\n      orgTree: [],\n      selectedRowKeys: [],\n      selectedRows: []\n    };\n  },\n  created: function created() {\n    var id = {\n      userid: 1\n    };\n\n    var _this = this;\n\n    getOrgTree(id).then(function (res) {\n      console.log(res);\n      _this.orgTree = res.result;\n\n      _this.getOrgList(res.result);\n    });\n  },\n  methods: {\n    handleClick: function handleClick(e) {\n      console.log('handleClick', e);\n      this.queryParam = {\n        key: e.key // this.$refs.table.refresh(true)\n\n      };\n    },\n    handleAdd: function handleAdd(item) {\n      console.log('add button, item', item);\n      this.$message.info(\"\\u63D0\\u793A\\uFF1A\\u4F60\\u70B9\\u4E86 \".concat(item.key, \" - \").concat(item.title, \" \"));\n      this.$refs.modal.add(item.key);\n    },\n    handleTitleClick: function handleTitleClick(item) {\n      console.log('handleTitleClick', item);\n    },\n    titleClick: function titleClick(e) {\n      console.log('titleClick', e);\n    },\n    handleSaveOk: function handleSaveOk() {},\n    handleSaveClose: function handleSaveClose() {},\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    //   获取用于搜索的list数组\n    getOrgList: function getOrgList(data) {\n      for (var i = 0; i < data.length; i++) {\n        var node = data[i];\n        var key = node.title;\n        var orgid = node.orgid;\n        var pid = node.pid;\n        this.orgList.push({\n          key: key,\n          title: key,\n          orgid: orgid,\n          pid: pid\n        });\n\n        if (node.children) {\n          this.getOrgList(node.children, node.key);\n        }\n      }\n    },\n    onChange: function onChange(e) {\n      var _this3 = this;\n\n      var value = e.target.value;\n      console.log(this.orgList);\n      var expandedKeys = this.orgList.map(function (item) {\n        if (item.title.indexOf(value) > -1) {\n          return _this3.getParentKey(item.title, _this3.orgTree);\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n      Object.assign(this, {\n        expandedKeys: expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <a-row :gutter=\"8\">\r\n      <a-col :span=\"5\">\r\n        <a-input-search style= \"margin-bottom: 8px\" placeholder=\"Search\" @change=\"onChange\" />\r\n        <s-tree\r\n          :dataSource=\"orgTree\"\r\n          :openKeys.sync=\"openKeys\"\r\n          :search=\"true\"\r\n          @click=\"handleClick\"\r\n          @add=\"handleAdd\"\r\n          @titleClick=\"handleTitleClick\"></s-tree>\r\n      </a-col>\r\n    </a-row>\r\n    <!-- 新增 -->\r\n    <org-modal ref=\"modal\" @ok=\"handleSaveOk\" @close=\"handleSaveClose\" />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport STree from '@/components/Tree/Tree'\r\nimport { STable } from '@/components'\r\nimport OrgModal from './modules/OrgModal'\r\nimport { getOrgTree, getServiceList } from '@/api/manage'\r\n\r\nexport default {\r\n  name: 'TreeList',\r\n  components: {\r\n    STable,\r\n    STree,\r\n    OrgModal,\r\n    orgList:[]\r\n  },\r\n  data () {\r\n    return {\r\n      openKeys: ['key-01'],\r\n\r\n      // 查询参数\r\n      queryParam: {},\r\n      // 表头\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: 'no'\r\n        },\r\n        {\r\n          title: '成员名称',\r\n          dataIndex: 'description'\r\n        },\r\n        {\r\n          title: '登录次数',\r\n          dataIndex: 'callNo',\r\n          sorter: true,\r\n          needTotal: true,\r\n          customRender: (text) => text + ' 次'\r\n        },\r\n        {\r\n          title: '状态',\r\n          dataIndex: 'status',\r\n          needTotal: true\r\n        },\r\n        {\r\n          title: '更新时间',\r\n          dataIndex: 'updatedAt',\r\n          sorter: true\r\n        },\r\n        {\r\n          table: '操作',\r\n          dataIndex: 'action',\r\n          width: '150px',\r\n          scopedSlots: { customRender: 'action' }\r\n        }\r\n      ],\r\n      // 加载数据方法 必须为 Promise 对象\r\n      loadData: parameter => {\r\n        return getServiceList(Object.assign(parameter, this.queryParam))\r\n          .then(res => {\r\n            return res.result\r\n          })\r\n      },\r\n      orgTree: [],\r\n      selectedRowKeys: [],\r\n      selectedRows: []\r\n    }\r\n  },\r\n  created () {\r\n      var id = {userid:1};\r\n      var _this = this;\r\n    getOrgTree(id).then(res => {\r\n      console.log(res);\r\n      _this.orgTree = res.result\r\n      _this.getOrgList(res.result);\r\n    })\r\n  },\r\n  methods: {\r\n    handleClick (e) {\r\n      console.log('handleClick', e)\r\n      this.queryParam = {\r\n        key: e.key\r\n      }\r\n      // this.$refs.table.refresh(true)\r\n    },\r\n    handleAdd (item) {\r\n      console.log('add button, item', item)\r\n      this.$message.info(`提示：你点了 ${item.key} - ${item.title} `)\r\n      this.$refs.modal.add(item.key)\r\n    },\r\n    handleTitleClick (item) {\r\n      console.log('handleTitleClick', item)\r\n    },\r\n    titleClick (e) {\r\n      console.log('titleClick', e)\r\n    },\r\n    handleSaveOk () {\r\n\r\n    },\r\n    handleSaveClose () {\r\n\r\n    },\r\n\r\n    onSelectChange (selectedRowKeys, selectedRows) {\r\n      this.selectedRowKeys = selectedRowKeys\r\n      this.selectedRows = selectedRows\r\n    },\r\n    //   获取用于搜索的list数组\r\n    getOrgList(data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const node = data[i]\r\n        const key = node.title;\r\n        const orgid = node.orgid;\r\n        const pid = node.pid;\r\n        this.orgList.push({ key, title: key, orgid : orgid, pid : pid })\r\n        if (node.children) {\r\n          this.getOrgList(node.children, node.key)\r\n        }\r\n      }\r\n    },\r\n    onChange(e) {\r\n      const value = e.target.value\r\n      console.log(this.orgList);\r\n      const expandedKeys = this.orgList\r\n        .map(item => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return this.getParentKey(item.title, this.orgTree)\r\n          }\r\n          return null\r\n        })\r\n        .filter((item, i, self) => item && self.indexOf(item) === i)\r\n      Object.assign(this, {\r\n        expandedKeys,\r\n        searchValue: value,\r\n        autoExpandParent: true\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.ant-input-search{\r\n  display: none;\r\n}\r\n  .custom-tree {\r\n\r\n    /deep/ .ant-menu-item-group-title {\r\n      position: relative;\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .ant-menu-item {\r\n      &:hover {\r\n        .btn {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n    /deep/ .btn {\r\n      display: none;\r\n      position: absolute;\r\n      top: 0;\r\n      right: 10px;\r\n      width: 20px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      z-index: 1050;\r\n\r\n      &:hover {\r\n        transform: scale(1.2);\r\n        transition: 0.5s all;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/Company"}]}